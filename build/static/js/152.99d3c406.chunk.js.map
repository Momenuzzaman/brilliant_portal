{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","views/SMS/Components/CustomButtonRipple.js","views/SMS/University/AddNewIntakes.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","onClick","body","authToken","Axios","post","rootUrl","res","response","status","history","push","CustomButtonRipple","includes","Ripple","AddNewIntakes","useState","month","setMonth","year","setYear","useHistory","addToast","useToasts","monthTypeLabel","setMonthTypeLabel","monthTypeValue","setMonthTypeValue","yearTypeLabel","setYearTypeLabel","yearTypeValue","setYearTypeValue","useEffect","get","then","catch","monthMenu","map","monthOptions","label","value","id","yearMenu","yearOptions","onSubmit","event","preventDefault","subData","FormData","target","action","data","message","appearance","autoDismiss","pathname","row","md","style","fontSize","options","onChange","opt","display","justifyContent"],"mappings":"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","file":"static/js/152.99d3c406.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name}) => {\r\n    // const {className, icon} = props;\r\n\r\n    // console.log(className);\r\n    // console.log(url);\r\n\r\n    // console.log('Trying New Type of Props',func, className, icon, permission);\r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst CustomButtonRipple = ({className, icon,color, permission, type,url, func, name}) => {\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    return (\r\n        <>\r\n          {\r\n            data.includes(permission) ? \r\n            <Button.Ripple\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {name}\r\n            </Button.Ripple>\r\n            :\r\n            null\r\n          }   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomButtonRipple;","import { FormGroup } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    ButtonGroup,\r\n  \r\n    Button,\r\n  \r\n    Input,\r\n  \r\n    Col,\r\n    Row,\r\n    Table,\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Form,\r\n  } from \"reactstrap\";\r\n  import { Link } from \"react-router-dom\";\r\n  import Select from \"react-select\";\r\n  import { useHistory, useLocation } from \"react-router\";\r\n  import get from '../../../helpers/get';\r\n  import post from '../../../helpers/post';\r\n  import { useToasts } from \"react-toast-notifications\";\r\n  import CustomButtonRipple from '../Components/CustomButtonRipple';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\n\r\nconst AddNewIntakes = () => {\r\n    const [month, setMonth] = useState([]);\r\n    const [year, setYear] = useState([]);\r\n    const history = useHistory();\r\n    const { addToast } = useToasts();\r\n\r\n    const [monthTypeLabel, setMonthTypeLabel]= useState('Select Month');\r\n    const [monthTypeValue, setMonthTypeValue] = useState(0);\r\n\r\n    const [yearTypeLabel, setYearTypeLabel]= useState('Select Year');\r\n    const [yearTypeValue, setYearTypeValue] = useState(0);\r\n\r\n    useEffect(()=>{\r\n\r\n        get('Month/GetAll').then(res=> {\r\n          setMonth(res);\r\n        })\r\n        .catch();\r\n\r\n        get('Year/GetAll').then(res=> {\r\n            setYear(res);\r\n          })\r\n          .catch();\r\n      },[])\r\n\r\n      const monthMenu = month.map(monthOptions =>({label:monthOptions.name, value:monthOptions.id}));\r\n      const yearMenu = year.map(yearOptions =>({label:yearOptions.name, value:yearOptions.id}));\r\n\r\n\r\n\r\n    const handleCancel = () =>{\r\n        history.push(\"/intake\");\r\n    }\r\n\r\n    const selectMonthType = (label, value) => {\r\n        setMonthTypeLabel(label);\r\n        setMonthTypeValue(value); \r\n      }\r\n\r\n      const selectYearType = (label, value) => {\r\n        setYearTypeLabel(label);\r\n        setYearTypeValue(value); \r\n      }\r\n\r\n      const handleSubmit = (event) =>{\r\n          event.preventDefault();\r\n          const subData = new FormData(event.target);\r\n        //   for (var value of subData.values()) {\r\n        //       console.log('valueeee',value);\r\n        //     }\r\n\r\n        post(`Intake/Create`, subData).then(action => {\r\n            addToast(action?.data?.message, {\r\n                appearance: 'success',\r\n                autoDismiss: true,\r\n              })\r\n              history.push({\r\n                pathname: \"/intake\",\r\n              });\r\n          });\r\n      }\r\n\r\n       // redirect to intakeList\r\n       const backToIntakeList = () => {\r\n        history.push(\"/intake\");\r\n        };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card className=\"uapp-card-bg m-3 p-2\">\r\n                    <CardHeader className=\"page-header\">\r\n                        <h3 className=\"text-light my-auto\">Add intake</h3>\r\n                        <div className=\"page-header-back-to-home\">\r\n                          <span onClick={backToIntakeList} className=\"text-light\">\r\n                            {\" \"}\r\n                            <i className=\"fas fa-arrow-circle-left\"></i> Back to Intake\r\n                          </span>\r\n                        </div>\r\n                    </CardHeader>\r\n                </Card>\r\n\r\n                <Form onSubmit={handleSubmit} className='m-3'>\r\n                    <FormGroup row>\r\n                        <Col md=\"4\">\r\n                            <span>\r\n                               <span style={{color: '#1e98b0', fontSize: '14px'}}>Intake Month</span> <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                        <Select\r\n                            options={monthMenu}\r\n                            value={{ label: monthTypeLabel, value: monthTypeValue }}\r\n                            onChange={(opt) => selectMonthType(opt.label, opt.value)}\r\n                            name=\"monthId\"\r\n                            id=\"monthId\"\r\n                        />\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className='mt-3'>\r\n                        <Col md=\"4\">\r\n                            <span>\r\n                               <span style={{color: '#1e98b0', fontSize: '14px'}}>Intake Year</span> <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                        <Select\r\n                            options={yearMenu}\r\n                            value={{ label: yearTypeLabel, value: yearTypeValue }}\r\n                            onChange={(opt) => selectYearType(opt.label, opt.value)}\r\n                            name=\"yearId\"\r\n                            id=\"yearId\"\r\n                        />\r\n\r\n                        <FormGroup\r\n                            className=\"has-icon-left position-relative mt-3\"\r\n                            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                     >\r\n                       {/* <Link to=\"/intake\"> */}\r\n\r\n                          <CustomButtonRipple\r\n                            type={\"submit\"}\r\n                            className={\"mr-1 mt-3 badge-primary mx-auto\"}\r\n                            name={\"Submit\"}\r\n                            permission={6}\r\n                          />\r\n\r\n                       {/* </Link> */}\r\n\r\n                     </FormGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"d-flex justify-content-end align-items-end\">\r\n                            <div>\r\n\r\n                                <ButtonForFunction\r\n                                  func={handleCancel}\r\n                                  className={'btn btn-danger mt-md-3'}\r\n                                  name={\"Cancel\"}\r\n                                  permission={6}\r\n                                />\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    \r\n                </Form>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewIntakes;"],"sourceRoot":""}