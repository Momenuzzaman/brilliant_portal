{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/PromotionalCommission/CommissionList/PromotionalCommissionList.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","PromotionalCommissionList","useHistory","useState","modalOpen","setModalOpen","deleteModal","setDeleteModal","success","setSuccess","addToast","useToasts","university","setUniversity","universityLabel","setUniversityLabel","universityValue","setUniversityValue","intake","setIntake","intakeLabel","setIntakeLabel","intakeValue","setIntakeValue","commission","setCommission","commissionLabel","setCommissionLabel","commissionValue","setCommissionvalue","uniError","setUniError","intakeError","setIntakeError","commissionError","setCommissionError","promotion","setPromotion","currDeleteData","setCurrDeleteData","update","setUpdate","data","setData","date","setDate","amount","setAmount","min","setMin","useEffect","get","then","e","uniOptions","map","uni","label","value","id","accountIntakeOptions","acc","intakeName","commissionGroupOptions","com","handleDeleteData","remove","appearance","autoDismiss","isOpen","toggle","onSubmit","event","preventDefault","subData","FormData","target","isSuccess","message","row","md","options","onChange","opt","placeholder","defaultValue","required","Date","toLocaleString","split","style","display","justifyContent","Ripple","textAlign","prom","i","key","scope","accountIntake","commissionAmount","find","p","commissionGroupId","variant","console","log","universityId","accountIntakeId","startFrom","minumumStudentRequirement","handleUpdate","toggleDanger"],"mappings":"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","file":"static/js/252.87c40867.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, TabContent, TabPane, Nav, NavItem, NavLink, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport get from '../../../../helpers/get';\r\nimport Select from \"react-select\";\r\nimport post from '../../../../helpers/post';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\nimport remove from '../../../../helpers/remove';\r\nimport put from '../../../../helpers/put';\r\n\r\n\r\nconst PromotionalCommissionList = () => {\r\n\r\n\r\n    const history = useHistory();\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [deleteModal,setDeleteModal] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const {addToast} = useToasts();\r\n\r\n    const [university,setUniversity] = useState([]);\r\n    const [universityLabel, setUniversityLabel] = useState('Select University');\r\n    const [universityValue, setUniversityValue] = useState(0);\r\n\r\n    const [intake, setIntake] = useState([]);\r\n    const [intakeLabel,setIntakeLabel] = useState('Select Intake');\r\n    const [intakeValue, setIntakeValue] = useState(0);\r\n\r\n    const [commission,setCommission] = useState([]);\r\n    const [commissionLabel,setCommissionLabel] = useState('Select Commission');\r\n    const [commissionValue,setCommissionvalue] = useState(0);\r\n\r\n    const [uniError,setUniError] = useState('');\r\n    const [intakeError,setIntakeError] = useState('');\r\n    const [commissionError,setCommissionError] = useState('');\r\n\r\n    const [promotion,setPromotion] = useState([]);\r\n    const [currDeleteData, setCurrDeleteData] = useState({});\r\n    const [update, setUpdate] = useState(false);\r\n    const [data,setData] = useState({});\r\n\r\n    const [date,setDate] = useState('');\r\n    const [amount,setAmount] = useState('');\r\n    const [min,setMin] = useState('');\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        get(`PromotionalCommission/Index`)\r\n        .then(res =>{\r\n          \r\n          setPromotion(res);\r\n          \r\n        })\r\n\r\n        get(`UniversityDD/Index`)\r\n        .then(res => {\r\n           \r\n          setUniversity(res);\r\n        })\r\n\r\n        get(`AccountIntake/Index`)\r\n        .then(res => {\r\n        \r\n          \r\n          setIntake(res);\r\n        })\r\n\r\n        get(`CommissionGroupDD/Index`)\r\n        .then(res =>{\r\n          \r\n          setCommission(res);\r\n        })\r\n\r\n    },[success])\r\n\r\n    const handleDate = e =>{\r\n      var datee = e;\r\n      var utcDate = new Date(datee);\r\n      var localeDate = utcDate.toLocaleString(\"en-CA\");\r\n      const x = localeDate.split(\",\")[0];\r\n      return x;\r\n    }\r\n\r\n    const uniOptions = university?.map(uni => ({\r\n      label: uni?.name,\r\n      value: uni?.id\r\n    }))\r\n\r\n    const selectUniversity = (label,value) =>{\r\n      setUniError('');\r\n      setUniversityLabel(label);\r\n      setUniversityValue(value);\r\n    }\r\n\r\n    const accountIntakeOptions = intake?.map(acc => ({\r\n      label: acc?.intakeName,\r\n      value: acc?.id\r\n    }))\r\n\r\n    const selectAccountIntake = (label,value) =>{\r\n      setIntakeError('');\r\n      setIntakeLabel(label);\r\n      setIntakeValue(value);\r\n    }\r\n    \r\n    const commissionGroupOptions = commission?.map(com => ({\r\n      label: com?.name,\r\n      value: com?.id\r\n    }))\r\n\r\n    const selectCommissionGroup = (label,value) =>{\r\n      setCommissionError('');\r\n      setCommissionLabel(label);\r\n      setCommissionvalue(value);\r\n    }\r\n\r\n    const backToDashboard = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalOpen(false);\r\n        setUniversityLabel('Select University');\r\n        setUniversityValue(0);\r\n        setIntakeLabel(\"Select Intake\");\r\n        setIntakeValue(0);\r\n        setCommissionLabel('Select Commission');\r\n        setCommissionvalue(0);\r\n       \r\n      \r\n      };\r\n\r\n    const openModal = () => {\r\n        setModalOpen(true);\r\n      }\r\n\r\n      const handleUpdate = (data) => {\r\n        setUpdate(true);\r\n        setData(data);\r\n        console.log(data);\r\n        get(`PromotionalCommission/Get/${data?.id}`)\r\n        .then(res => {\r\n           setUniversityLabel(res?.university?.name);\r\n           setUniversityValue(res?.universityId);\r\n           setIntakeValue(res?.accountIntakeId);\r\n           setIntakeLabel(res?.accountIntake?.intakeName);\r\n           setDate(res?.startFrom);\r\n           setAmount(res?.commissionAmount);\r\n           setCommissionvalue(res?.commissionGroupId);\r\n           setCommissionLabel(commission?.find(com => com?.id == res?.commissionGroupId)?.name);\r\n           setMin(res?.minumumStudentRequirement);\r\n           setModalOpen(true);\r\n\r\n         \r\n        })\r\n      }  \r\n\r\n\r\n      \r\n    const toggleDanger = (data) => {\r\n     \r\n      setCurrDeleteData(data);\r\n      setDeleteModal(true);\r\n  }\r\n\r\n\r\n  const handleDeleteData = () => {\r\n\r\n      remove(`PromotionalCommission/Delete/${currDeleteData?.id}`)\r\n      .then(res => {\r\n          addToast(res,{\r\n              appearance: 'error',\r\n              autoDismiss: true\r\n          })\r\n          setSuccess(!success);\r\n          setDeleteModal(false);\r\n      })\r\n  }\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const subData = new FormData(event.target);\r\n\r\n        if(universityValue == 0){\r\n          setUniError('University Must be Selected');\r\n        }\r\n        else if(intakeValue == 0){\r\n          setIntakeError('Account Intake Must be Selected');\r\n        }\r\n        else if(commissionValue == 0){\r\n          setCommissionError('Commission Group Must be Selected');\r\n        }\r\n        else{\r\n          \r\n          if(!update){\r\n\r\n            post(`PromotionalCommission/Create`,subData)\r\n          .then(res => {\r\n            if(res?.status == 200 && res?.data?.isSuccess == true){\r\n              addToast(res?.data?.message,{\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n              })\r\n              setSuccess(!success);\r\n              setModalOpen(false);\r\n              setCommissionLabel('Select Commission Group')\r\n              setCommissionvalue(0);\r\n              setIntakeLabel('Select Account Intake');\r\n              setIntakeValue(0);\r\n              setUniversityLabel('Select University');\r\n              setUniversityValue(0);\r\n              setMin('');\r\n              setAmount('');\r\n              setDate('');\r\n            }\r\n          })\r\n\r\n          }\r\n\r\n          else{\r\n\r\n            put(`PromotionalCommission/Update`,subData)\r\n          .then(res => {\r\n            if(res?.status == 200 && res?.data?.isSuccess == true){\r\n              addToast(res?.data?.message,{\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n              })\r\n              setSuccess(!success);\r\n              setModalOpen(false);\r\n              setCommissionLabel('Select Commission Group')\r\n              setCommissionvalue(0);\r\n              setIntakeLabel('Select Account Intake');\r\n              setIntakeValue(0);\r\n              setUniversityLabel('Select University');\r\n              setUniversityValue(0);\r\n              setMin('');\r\n              setAmount('');\r\n              setDate('');\r\n              setUpdate(false);\r\n            }\r\n          })\r\n\r\n          }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n<Modal\r\n                    isOpen={modalOpen}\r\n                    toggle={closeModal}\r\n                    className=\"uapp-modal2\"\r\n                    >\r\n                    <ModalHeader>Add Promotional Commission</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={handleSubmit}>\r\n                          {\r\n                            update?\r\n\r\n                            <input\r\n                            type='hidden'\r\n                            name='id'\r\n                            id='id'\r\n                            value={data?.id}\r\n                            />\r\n                            :\r\n                            null\r\n                          }\r\n\r\n                        <FormGroup row className=\"has-icon-left position-relative\">\r\n                            <Col md=\"4\">\r\n                            <span>\r\n                                University <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                            </Col>\r\n                            <Col md=\"8\">\r\n                            <Select\r\n                            options={uniOptions}\r\n                            value={{ label: universityLabel, value: universityValue }}\r\n                            onChange={(opt) => selectUniversity(opt.label, opt.value)}\r\n                            name=\"universityId\"\r\n                            id=\"universityId\"\r\n                        />\r\n                          <span className='text-danger'>{uniError}</span>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row className=\"has-icon-left position-relative\">\r\n                            <Col md=\"4\">\r\n                            <span>\r\n                                Minimum Student Requirement <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                            </Col>\r\n                            <Col md=\"8\">\r\n                            <Input\r\n                            type='number'\r\n                            name='minumumStudentRequirement'\r\n                            id='minumumStudentRequirement'\r\n                            placeholder='Enter Minimum Student Requirement'\r\n                            defaultValue={min}\r\n                            required\r\n                            />\r\n                         \r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row className=\"has-icon-left position-relative\">\r\n                            <Col md=\"4\">\r\n                            <span>\r\n                                Start From <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                            </Col>\r\n                            <Col md=\"8\">\r\n                            <Input\r\n                            type='date'\r\n                            name='startFrom'\r\n                            id='startFrom'\r\n                            required\r\n                            defaultValue={handleDate(date)}\r\n                            />\r\n                         \r\n                            </Col>\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup row className=\"has-icon-left position-relative\">\r\n                            <Col md=\"4\">\r\n                            <span>\r\n                                Account Intake <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                            </Col>\r\n                            <Col md=\"8\">\r\n                            <Select\r\n                            options={accountIntakeOptions}\r\n                            value={{ label: intakeLabel, value: intakeValue }}\r\n                            onChange={(opt) => selectAccountIntake(opt.label, opt.value)}\r\n                            name=\"accountIntakeId\"\r\n                            id=\"accountIntakeId\"\r\n                        />\r\n                          <span className='text-danger'>{intakeError}</span>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup row className=\"has-icon-left position-relative\">\r\n                            <Col md=\"4\">\r\n                            <span>\r\n                                Commission Amount <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                            </Col>\r\n                            <Col md=\"8\">\r\n                            <Input\r\n                            type='number'\r\n                            name='commissionAmount'\r\n                            id='commissionAmount'\r\n                            placeholder='Enter Commission Amount'\r\n                            defaultValue={amount}\r\n                            required\r\n                            />\r\n                         \r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                         \r\n                        <FormGroup row className=\"has-icon-left position-relative\">\r\n                            <Col md=\"4\">\r\n                            <span>\r\n                                Commission Group <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                            </Col>\r\n                            <Col md=\"8\">\r\n                            <Select\r\n                            options={commissionGroupOptions}\r\n                            value={{ label: commissionLabel, value: commissionValue }}\r\n                            onChange={(opt) => selectCommissionGroup(opt.label, opt.value)}\r\n                            name=\"commissionGroupId\"\r\n                            id=\"commissionGroupId\"\r\n                        />\r\n                          <span className='text-danger'>{commissionError}</span>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                    \r\n\r\n                        \r\n\r\n                    \r\n                        \r\n\r\n                        <div className='d-flex justify-content-end'>\r\n                        <FormGroup\r\n                            className=\"has-icon-left position-relative\"\r\n                            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                        >\r\n                            \r\n\r\n                    \r\n                        <Button.Ripple\r\n                            color=\"primary\"\r\n                            \r\n                            className=\"mr-1 mt-3\"\r\n                        \r\n                            >\r\n                            Submit\r\n                            </Button.Ripple>\r\n                \r\n\r\n                        </FormGroup>\r\n                        </div>\r\n\r\n                        </Form>\r\n                    </ModalBody>\r\n                    </Modal>\r\n           \r\n\r\n            <Card className=\"uapp-card-bg\">\r\n              <CardHeader className=\"page-header\">\r\n                <h3 className=\"text-white\">Promotional Commission List</h3>\r\n                <div className=\"page-header-back-to-home\">\r\n                  <span className=\"text-white\" onClick={backToDashboard}>\r\n                    {\" \"}\r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                  </span>\r\n                </div>\r\n              </CardHeader>\r\n            </Card>\r\n\r\n            <Card className='uapp-employee-search'>\r\n     \r\n     <CardHeader>\r\n\r\n     <div className=''>\r\n         <Button className =\"btn btn-uapp-add\" onClick={openModal}>\r\n            <i className=\"fas fa-plus\"></i>\r\n          {' '}\r\n           Add Promotional Commission\r\n                      \r\n              </Button>\r\n         </div>\r\n     </CardHeader>\r\n\r\n     <CardBody className=\"search-card-body\">\r\n     <Table className=\"table-sm table-bordered\">\r\n             <thead className=\"thead-uapp-bg\">\r\n               <tr style={{ textAlign: \"center\" }}>\r\n                 \r\n                 <th>SL/NO</th>\r\n                  <th>Account Intake</th>\r\n                  <th>University</th>\r\n                  <th>Commission Amount</th>\r\n                  <th>Commission Group</th>\r\n                  <th>Action</th>\r\n              </tr>\r\n             </thead>\r\n             <tbody>\r\n             {promotion?.map((prom, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                      <th scope='row'>{i+1}</th>\r\n                      <td>\r\n                        {prom?.accountIntake?.intakeName}\r\n                      </td>\r\n                      \r\n                      <td>\r\n                        {prom?.university?.name}\r\n                      </td>\r\n\r\n                      <td>\r\n                      {prom?.commissionAmount}\r\n                      </td>\r\n\r\n                      <td>\r\n                      {(commission?.find(p => p?.id == prom?.commissionGroupId))?.name}\r\n                      </td>\r\n\r\n                   \r\n                      <td  className=\"text-center\">\r\n                        <ButtonGroup variant=\"text\">\r\n                       \r\n                            \r\n                                \r\n                                <ButtonForFunction\r\n                                icon={<i className=\"fas fa-edit\"></i>}\r\n                                color={\"warning\"}\r\n                                className={\"mx-1 btn-sm\"}\r\n                                func={()=> handleUpdate(prom)}\r\n                                \r\n                                />\r\n                             \r\n\r\n                  \r\n                            \r\n                              <ButtonForFunction\r\n                              icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                              color={'danger'}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              func= {()=> toggleDanger(prom)}\r\n                              \r\n    \r\n                              />\r\n                        \r\n\r\n                        </ButtonGroup>\r\n\r\n                     \r\n                        <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n                        <ModalBody>\r\n                          <p>Are You Sure to Delete this ? Once Deleted it can't be Undone!</p>\r\n                        </ModalBody>\r\n        \r\n                        <ModalFooter>\r\n                          <Button  color=\"danger\" onClick={handleDeleteData}>YES</Button>\r\n                          <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                        </ModalFooter>\r\n                     </Modal>\r\n\r\n\r\n\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              \r\n             </tbody>\r\n           </Table>\r\n\r\n     </CardBody>\r\n   </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PromotionalCommissionList;"],"sourceRoot":""}