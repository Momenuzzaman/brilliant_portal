{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","../node_modules/reactstrap/es/CardBody.js","views/SMS/University/AddUniversityState.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","onClick","body","authToken","Axios","post","rootUrl","res","response","status","history","push","put","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","connect","state","useState","universityDetailsList","setUniversityDetailsList","universityState","setUniversityState","modalOpen","setModalOpen","deleteModal","setDeleteModal","countryList","setCountryList","countryLabel","setCountryLabel","countryValue","setCountryValue","success","setSuccess","addToast","useToasts","useHistory","dispatch","useDispatch","useEffect","get","then","action","StoreUniversityStateData","closeDeleteModal","localStorage","removeItem","countryName","map","country","label","value","id","length","isOpen","toggle","row","md","placeholder","onChange","e","target","options","opt","style","display","justifyContent","getItem","subData","universityCountryId","data","message","appearance","autoDismiss","Ripple","preventDefault","subdata","handleSubmit","textAlign","uniDetails","i","key","scope","setItem","toggleDanger","handleUpdate","remove"],"mappings":"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","file":"static/js/141.b4201e30.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name}) => {\r\n    // const {className, icon} = props;\r\n\r\n    // console.log(className);\r\n    // console.log(url);\r\n\r\n    // console.log('Trying New Type of Props',func, className, icon, permission);\r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function put(url, body = {},authToken = \"\"){\r\n\r\n\r\n   \r\n   try {\r\n    const res = await Axios.put(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error.response.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n \r\n\r\n        throw error\r\n   }\r\n}\r\n\r\nexport default put\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import React, { useEffect, useState } from 'react'\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table } from 'reactstrap';\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { StoreUniversityStateData } from '../../../redux/actions/SMS/UniversityAction/UniversityStateAction';\r\nimport get from '../../../helpers/get';\r\nimport post from '../../../helpers/post';\r\nimport remove from '../../../helpers/remove';\r\nimport put from '../../../helpers/put';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\n\r\nconst AddUniversityState = () => {\r\n    \r\n    const [universityDetailsList, setUniversityDetailsList] = useState([]);\r\n    const [universityState, setUniversityState] = useState('');\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [countryLabel, setCountryLabel] = useState('Select Country');\r\n    const [countryValue, setCountryValue] = useState(0);\r\n    const [success, setSuccess] = useState(false);\r\n    const { addToast } = useToasts();\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(()=>{\r\n      const returnValue = get(`UniversityState/Index`).then((action)=> {\r\n     \r\n        setUniversityDetailsList(action);\r\n        dispatch(StoreUniversityStateData(action));\r\n      })\r\n    },[success])\r\n\r\n\r\n    useEffect(()=>{\r\n      const returnValue = get(`UniversityCountryDD/Index`).then((action)=>{\r\n      \r\n        setCountryList(action)\r\n      })\r\n    },[])\r\n\r\n    const selectCountryName = (label, value) => {\r\n      setCountryLabel(label);\r\n      setCountryValue(value);\r\n\r\n    \r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n      e.preventDefault();\r\n    \r\n      const subdata = {\r\n        name: universityState,\r\n        universityCountryId: countryValue\r\n      }\r\n    \r\n        const returnValue = post(`UniversityState/Create`,subdata).then((action)=>{\r\n    \r\n            setSuccess(!success)\r\n            setModalOpen(false)\r\n            addToast(action?.data?.message, {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n            })\r\n            setCountryLabel('Select Country');\r\n            setCountryValue(0);\r\n            setUniversityState('');\r\n        });\r\n    \r\n    \r\n    }\r\n \r\n    // on Close Modal\r\n    const closeModal = () => {\r\n        setModalOpen(false);\r\n        setCountryLabel('Select Country');\r\n        setCountryValue(0);\r\n        setUniversityState('');\r\n        localStorage.removeItem('updateUniState')\r\n\r\n    }\r\n\r\n    // delete button click\r\n    const toggleDanger = (uniDetails) => {\r\n      localStorage.setItem('delUniStateName',uniDetails.name)\r\n      localStorage.setItem('delUniStateId',uniDetails.id)\r\n      setDeleteModal(true)\r\n     }\r\n\r\n     // on Close Delete Modal\r\n    const closeDeleteModal = () => {\r\n      setDeleteModal(false);\r\n      localStorage.removeItem('delUniStateName');\r\n      localStorage.removeItem('delUniStateId');\r\n    }\r\n\r\n    // confirm delete\r\n    const handleDeleteUniState = (id) => {\r\n      const returnValue = remove(`UniversityState/Delete/${id}`).then((action)=> {\r\n        setDeleteModal(false);\r\n        setSuccess(!success);\r\n         addToast(action, {\r\n           appearance: 'error',\r\n           autoDismiss: true,\r\n         })\r\n         localStorage.removeItem('delUniStateName')\r\n         localStorage.removeItem('delUniStateId')\r\n      })\r\n    }\r\n\r\n    // update state\r\n    const handleUpdate = (uniDetails) => {\r\n      setModalOpen(true);\r\n      setUniversityState(uniDetails.name);\r\n      setCountryLabel(uniDetails.country.name);\r\n      setCountryValue(uniDetails.country.id);\r\n\r\n      localStorage.setItem('updateUniState',uniDetails.id)\r\n     \r\n    }\r\n\r\n    // update submit\r\n    const handleUpdateSubmit = () => {\r\n\r\n      const id = localStorage.getItem('updateUniState');\r\n    \r\n      const subData = {\r\n        id: id,\r\n        name: universityState,\r\n        universityCountryId: countryValue\r\n      }\r\n    \r\n     const returnvalue = put(`UniversityState/Update`,subData).then((action)=> {\r\n        setSuccess(!success);\r\n        setModalOpen(false)\r\n        addToast(action?.data?.message, {\r\n          appearance: 'success',\r\n          autoDismiss: true,\r\n        })\r\n        setUniversityState('');\r\n        setCountryLabel('Select Country');\r\n        setCountryValue(0);\r\n       localStorage.removeItem('updateUniState')\r\n      })\r\n    \r\n    \r\n    }\r\n\r\n    const countryName = countryList?.map(country => ({label: country.name, value: country.id}))\r\n\r\n\r\n    // redirect to dashboard\r\n    const backToDashboard = () => {\r\n    history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n          <Card className='uapp-card-bg'>\r\n              <CardHeader className=\"page-header\">              \r\n                <h3 className=\"text-light\">Add University State</h3>\r\n                  <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard} className=\"text-light\">\r\n                    {\" \"} \r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                    </span>\r\n                  </div>             \r\n              </CardHeader>        \r\n            </Card>\r\n\r\n            <Card>\r\n\r\n            <CardHeader>\r\n\r\n                <ButtonForFunction\r\n                  className={\"btn btn-uapp-add\"}\r\n                  func={() => setModalOpen(true)}\r\n                  icon={<i className=\"fas fa-plus\"></i>}\r\n                  name={\" Add New\"}\r\n                  permission={6}\r\n                />\r\n\r\n                <div> <b> Total <span className=\"badge badge-primary\"> {universityDetailsList?.length} </span> University State Found </b></div>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n\r\n            <div>\r\n\r\n            <Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n\r\n              <ModalHeader>Add University State</ModalHeader>\r\n\r\n              <ModalBody>\r\n\r\n                <Form>\r\n                  \r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>University State</span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={universityState}\r\n                        placeholder=\"Create University State\"\r\n                        onChange={(e) => setUniversityState(e.target.value)}\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>University Country</span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                    <Select\r\n                          options={countryName}\r\n                           value={{ label: countryLabel, value: countryValue }}\r\n                           onChange={opt => selectCountryName(opt.label, opt.value)}\r\n                           name=\"country\"\r\n                           id=\"country\"\r\n                           />\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                      \r\n\r\n                      {\r\n                    localStorage.getItem(\"updateUniState\") ?\r\n                      <Button color=\"primary\" className=\"mr-1 mt-3\" onClick={handleUpdateSubmit}>Submit</Button> :\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-3\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                      >\r\n                        Submit\r\n                      </Button.Ripple>\r\n\r\n                      }\r\n\r\n\r\n                  </FormGroup>\r\n\r\n                  \r\n\r\n                </Form>\r\n\r\n              </ModalBody>\r\n\r\n            </Modal>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"table-responsive\">\r\n          <Table className=\"table-sm table-bordered\" >\r\n            <thead className=\"thead-uapp-bg\">\r\n              <tr style={{ textAlign: \"center\" }}>\r\n                <th>SL/NO</th>\r\n                <th>University State Name</th>\r\n                <th className=\"text-center\" >University Country Name</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {\r\n                universityDetailsList?.map((uniDetails, i) => <tr key={uniDetails.id} style={{ textAlign: \"center\" }}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{uniDetails.name}</td>\r\n                  <td>{uniDetails.country.name}</td>\r\n                  <td>\r\n                    {/* <Button onClick={() => toggleDanger(uniDetails)} className=\"mx-1 btn-sm\" color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n\r\n                    <ButtonForFunction\r\n                      func={() => toggleDanger(uniDetails)}\r\n                      className={\"mx-1 btn-sm\"}\r\n                      color={\"danger\"}\r\n                      icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                      permission={6}\r\n                    />\r\n\r\n                    {/* <Button onClick={()=> handleUpdate(uniDetails)} className=\"mx-1 btn-sm\" color=\"warning\"><i className=\"fas fa-edit\"></i></Button> */}\r\n\r\n                    <ButtonForFunction\r\n                      func={()=> handleUpdate(uniDetails)}\r\n                      className={\"mx-1 btn-sm\"}\r\n                      color={\"warning\"}\r\n                      icon={<i className=\"fas fa-edit\"></i>}\r\n                      permission={6}\r\n                    />\r\n\r\n                    <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this {localStorage.getItem('delUniStateName')} ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={() => handleDeleteUniState(localStorage.getItem('delUniStateId'))}>YES</Button>\r\n                        <Button onClick={closeDeleteModal}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                    </Modal>\r\n                  </td>\r\n                </tr>)\r\n              }\r\n\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n\r\n            </CardBody>\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\nexport default connect(mapStateToProps)(AddUniversityState);\r\n"],"sourceRoot":""}