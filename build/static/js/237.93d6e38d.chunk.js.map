{"version":3,"sources":["helpers/post.js","helpers/put.js","views/SMS/Comission/CommissionGroup/ComissionGroup.js"],"names":["AuthStr","localStorage","getItem","url","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","ComissionGroup","useHistory","useState","openModal","setOpenModal","addToast","useToasts","success","setSuccess","commission","setCommission","deleteModal","setDeleteModal","edit","setEdit","data","setData","delData","setDelData","useEffect","get","then","confirmDelete","remove","id","appearance","autoDismiss","isOpen","toggle","className","onSubmit","event","preventDefault","subData","FormData","target","message","type","name","value","row","md","defaultValue","required","color","onClick","style","textAlign","map","comm","i","key","scope","to","width","variant","handleupdate","toggleDanger"],"mappings":"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","file":"static/js/237.93d6e38d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error.response.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, TabContent, TabPane, Nav, NavItem, NavLink, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport post from '../../../../helpers/post';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport get from '../../../../helpers/get';\r\nimport put from '../../../../helpers/put';\r\nimport remove from '../../../../helpers/remove';\r\n\r\nconst ComissionGroup = () => {\r\n\r\n\r\n    const history = useHistory();\r\n    const [openModal,setOpenModal] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [success,setSuccess] = useState(false);\r\n    const [commission,setCommission] = useState([]);\r\n    const [deleteModal,setDeleteModal] = useState(false);\r\n    const [edit,setEdit] = useState(false);\r\n    const [data,setData] = useState({});\r\n    const [delData,setDelData] = useState({});\r\n\r\n    useEffect(()=>{\r\n\r\n      get(`CommissionGroup/Index`)\r\n      .then(res => {\r\n        \r\n        setCommission(res);\r\n      })\r\n\r\n\r\n    },[success])\r\n\r\n    const backToDashboard = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const handleupdate = (data) => {\r\n      setData(data);\r\n      setEdit(true);\r\n      setOpenModal(true);\r\n    }\r\n\r\n    const toggleDanger = (data) => {\r\n      setDeleteModal(true);\r\n      \r\n      setDelData(data);\r\n\r\n    } \r\n\r\n    const confirmDelete = () => {\r\n      remove(`CommissionGroup/Delete/${delData?.id}`)\r\n      .then(res => {\r\n        addToast(res,{\r\n          appearance:'error',\r\n          autoDismiss: true\r\n        })\r\n        setDelData({});\r\n        setSuccess(!success);\r\n        setDeleteModal(false);\r\n      })\r\n    }\r\n\r\n    const submitModalForm = (event) => {\r\n\r\n      event.preventDefault();\r\n\r\n      const subData = new FormData(event.target);\r\n        if(edit){\r\n          put(`CommissionGroup/Update`,subData)\r\n          .then(res => {\r\n            if(res?.status == 200){\r\n              addToast(res?.data?.message,{\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n              })\r\n              setEdit(false);\r\n              setData({});\r\n              setOpenModal(false);\r\n              setSuccess(!success);\r\n            }\r\n          })\r\n\r\n        }\r\n        else{\r\n          post(`CommissionGroup/Create`,subData)\r\n          .then(res => {\r\n            if(res?.status == 200){\r\n              addToast(res?.data?.message,{\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n              })\r\n              setOpenModal(false);\r\n              setSuccess(!success);\r\n            }\r\n          })\r\n        }\r\n     \r\n    }\r\n\r\n\r\n          return (\r\n              <div>\r\n               <Modal isOpen={openModal} toggle={() => setOpenModal(!openModal)} className=\"uapp-modal\">\r\n                          \r\n                        <ModalBody>\r\n                         \r\n                          <form onSubmit={submitModalForm} className='mt-3'>\r\n\r\n                           {\r\n                            edit? \r\n                            <input\r\n                            type='hidden'\r\n                            name='id'\r\n                            id='id'\r\n                            value={data?.id}\r\n                            />\r\n                            :\r\n                            null\r\n                           }\r\n\r\n\r\n\r\n                          <FormGroup row className=\"has-icon-left position-relative\">\r\n                        <Col md=\"4\">\r\n                          <span>\r\n                            Name <span className=\"text-danger\">*</span>{\" \"}\r\n                          </span>\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                          <Input\r\n                          type='text'\r\n                          name=\"name\"\r\n                            id=\"name\"\r\n                            defaultValue={data?.name}\r\n                            required\r\n                           \r\n                          />\r\n                        \r\n                        </Col>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup row className=\"has-icon-left position-relative\">\r\n\r\n                        <Col md ='12'>\r\n                          <div className='d-flex justify-content-between'>\r\n                            <Button color='danger' onClick={()=> setOpenModal(false)}>\r\n                              Cancel\r\n                            </Button>\r\n                            <Button color='primary' type='submit'>\r\n                              Submit\r\n\r\n                            </Button>\r\n                          </div>\r\n                        \r\n                        </Col>\r\n\r\n                      </FormGroup>\r\n\r\n                          </form>\r\n                        </ModalBody>\r\n        \r\n                        \r\n                     </Modal>\r\n\r\n      <Card className=\"uapp-card-bg\">\r\n              <CardHeader className=\"page-header\">\r\n                <h3 className=\"text-light\">Comission Groups</h3>\r\n                <div className=\"page-header-back-to-home\">\r\n                  <span className=\"text-light\" onClick={backToDashboard}>\r\n                    {\" \"}\r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                  </span>\r\n                </div>\r\n              </CardHeader>\r\n            </Card>\r\n\r\n      <Card className='uapp-employee-search'>\r\n     \r\n        <CardHeader>\r\n\r\n        <div className=''>\r\n            <Button className =\"btn btn-uapp-add\" onClick={()=> setOpenModal(true)}>\r\n               <i className=\"fas fa-plus\"></i>\r\n             {' '}\r\n              Add New Commission Group\r\n                         \r\n                 </Button>\r\n            </div>\r\n        </CardHeader>\r\n\r\n        <CardBody className=\"search-card-body\">\r\n        <Table className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    \r\n                    <th>SL/NO</th>\r\n                     <th>Name</th>\r\n                     <th>Price Settings</th>\r\n                     <th>Action</th>\r\n                 </tr>\r\n                </thead>\r\n                <tbody>\r\n                {commission?.map((comm, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                      <th scope='row'>{i + 1}</th>\r\n                      <td>\r\n                        {comm?.name}\r\n                      </td>\r\n                      <td>\r\n                        <Link to={`/commissionPriceList/${comm?.id}`}>\r\n                          <Button color='primary'>View</Button>\r\n                        </Link>\r\n                      </td>\r\n                     \r\n                      <td style={{ width: \"15%\" }} className=\"text-center\">\r\n                        <ButtonGroup variant=\"text\">\r\n                       \r\n\r\n                            {/* <ButtonForFunction\r\n                            icon={<i className=\"fas fa-edit\"></i>}\r\n                            color={\"dark\"}\r\n                            className={\"mx-1 btn-sm\"}\r\n                            func={()=>handleEdit(student)}\r\n                            /> */}\r\n\r\n                            <Button className='me-1 btn-sm' color='warning' onClick={()=>handleupdate(comm)}>\r\n                            <i className=\"fas fa-edit\"></i>\r\n\r\n\r\n                            </Button>\r\n\r\n                            <Button className='ms-1 btn-sm' color='danger' onClick={()=>toggleDanger(comm)}>\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n\r\n\r\n                            </Button>\r\n\r\n\r\n                      \r\n\r\n                          {/* <Button onClick={() => toggleDanger(student?.name, student?.id)} color=\"danger\" className=\"mx-1 btn-sm\">\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n                          </Button> */}\r\n                          \r\n                       \r\n\r\n                          {/* <ButtonForFunction\r\n                          icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                          color={'danger'}\r\n                          className={\"mx-1 btn-sm\"}\r\n                          func={()=> toggleDanger(student)}\r\n\r\n                          /> */}\r\n\r\n                        </ButtonGroup>\r\n\r\n                     \r\n                        <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n                        <ModalBody>\r\n                          <p>Are You Sure to Delete this ? Once Deleted it can't be Undone!</p>\r\n                        </ModalBody>\r\n        \r\n                        <ModalFooter>\r\n                          <Button  color=\"danger\" onClick={confirmDelete}>YES</Button>\r\n                          <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                        </ModalFooter>\r\n                     </Modal>\r\n\r\n\r\n\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                 \r\n                </tbody>\r\n              </Table>\r\n\r\n        </CardBody>\r\n      </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComissionGroup;"],"sourceRoot":""}