{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","views/SMS/Search/Loader/Loader.js","views/SMS/Pagination/Pagination.jsx","views/SMS/ReactTableConvertToXl/ReactTableConvertToXl.js","views/SMS/ApplicationTransaction/Index.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","Loader","src","loader","Pagination","PageIndex","TotalPages","PreviousPage","NextPage","dataPerPage","totalData","paginate","currentPage","totalpages","Math","ceil","startpage","endpage","pageNumbers","i","push","md","style","cursor","map","number","key","textAlign","marginTop","paddingRight","defaultProps","id","buttonText","ReactHTMLTableToExcel","props","handleDownload","bind","document","getElementById","this","table","nodeType","nodeName","outerHTML","sheet","String","filename","context","worksheet","window","navigator","msSaveOrOpenBlob","fileData","blobObject","Blob","click","element","createElement","href","base64","format","download","body","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","Component","Index","userType","localStorage","getItem","history","useHistory","useState","uapp","setUapp","uappLabel","setUappLabel","uappValue","setUappValue","student","setStudent","studentLabel","setStudentLabel","studentValue","setStudentValue","consultant","setConsultant","consultantLabel","setConsultantLabel","consultantValue","setConsultantValue","intake","setIntake","intakeLabel","setIntakeLabel","intakeValue","setIntakeValue","data","setData","setCurrentPage","callApi","setCallApi","setDataPerPage","entity","setEntity","dropdownOpen","setDropdownOpen","dataSizeName","dsn","label","value","loading","setLoading","componentRef","useRef","useEffect","get","then","res","models","totalEntity","studentOptions","std","consultantOptions","con","intakeOptions","int","intakeName","uappOptions","options","onChange","opt","userTypes","Consultant","lg","sm","xs","prev","float","isOpen","toggle","caret","trigger","content","current","ls","Id","Intake","Student","Unviersity","Subject","AccountIntake","Amount","RegistrationStatus","PaymentStatus","TransactionDate","TransactionStatus","width","variant","to","target","pageNumber"],"mappings":"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","file":"static/js/223.fc63070d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import React from 'react';\r\nimport loader from '../../../../assets/img/load.gif'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <img className='img-fluid' src={loader} />\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react'\r\nimport {Row,Col} from 'reactstrap'\r\nconst Pagination = ({ dataPerPage, totalData, paginate, currentPage }) => {\r\n\r\n    let PageIndex = 0;\r\n    let PageSize = 0;\r\n    let TotalCount = 0;\r\n    let TotalPages = 0;\r\n    let PreviousPage = 0;\r\n    let NextPage = 0;\r\n  \r\n    const totalpages = Math.ceil(totalData / dataPerPage);\r\n    let startpage = currentPage - 5;\r\n    let endpage = currentPage + 4;\r\n    if (startpage <= 0) {\r\n        endpage = endpage - (startpage - 1);\r\n        startpage = 1;\r\n    }\r\n    if (endpage > totalpages) {\r\n        endpage = totalpages;\r\n        if (endpage > 10) {\r\n            startpage = endpage - 9;\r\n        }\r\n    }\r\n    TotalCount = totalData;\r\n    PageIndex = currentPage;\r\n    PageSize = dataPerPage;\r\n    TotalPages = totalpages;\r\n    PreviousPage = startpage;\r\n    NextPage = endpage;\r\n\r\n\r\n    // const prev = currentPage > 1 ? (currentPage - 1) : 1;\r\n    // const last = Math.ceil(totalData / dataPerPage);\r\n    //     for (let i = 1; i <= Math.ceil(totalData/dataPerPage); i++) {\r\n\r\n    //         pageNumbers.push(i)\r\n    //     }\r\n\r\n    // let newPageNumbers;\r\n\r\n    // if(pageNumbers.length>10){\r\n    //  newPageNumbers = pageNumbers.slice(0,10)\r\n    // }\r\n    const pageNumbers = [];\r\n    const last = NextPage;\r\n    const next = (last === currentPage) ? currentPage : currentPage + 1;\r\n\r\n    const prev = PreviousPage;\r\n    \r\n    for (let i = PreviousPage; i <= NextPage; i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n        return (\r\n         <Row>\r\n             <Col md=\"6\">\r\n             <nav className=\"page navigation uapp-pagination\">\r\n                <ul className=\"pagination ml-2\">\r\n\r\n                    {\r\n                        PageIndex > 1 &&\r\n                        <>\r\n                  <li className=\"pagination-item pagination-First\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(1)} className=\"page-link\">\r\n                            First\r\n                        </p>\r\n                    </li>\r\n\r\n                    <li className=\"pagination-item\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(PageIndex - 1)} className=\"page-link\">\r\n                      <i className=\"fas fa-chevron-left\"></i>\r\n                        </p>\r\n                    </li>\r\n                        </>\r\n                    }\r\n\r\n                    \r\n\r\n                    {\r\n\r\n                        pageNumbers.map(number =>\r\n\r\n                            PageIndex==number ?\r\n                            <li key={number} className=\"pagination-item \">\r\n                                <p style={{ cursor: 'pointer' }} onClick={() => paginate(number)} className=\"page-link page-active\">\r\n                                    {number}\r\n                                </p>\r\n                            </li>\r\n                            :\r\n                            <li key={number} className=\"pagination-item\">\r\n                            <p style={{ cursor: 'pointer' }} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </p>\r\n                        </li>\r\n\r\n                        )\r\n                    }\r\n                    {\r\n                        PageIndex < TotalPages &&\r\n                        <>\r\n                        <li className=\"pagination-item\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(PageIndex + 1)} className=\"page-link\">\r\n                      <i className=\"fas fa-chevron-right\"></i>\r\n                        </p>\r\n                    </li>\r\n                  <li className=\"pagination-item pagination-Last\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(TotalPages)} className=\"page-link\">\r\n                            Last\r\n                        </p>\r\n                    </li>\r\n                        </>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n             </Col>\r\n\r\n             <Col md=\"6\" style={{textAlign: 'right', marginTop: '1.5%', paddingRight: '2.5%'}}>\r\n                 <h5>Total Results Found: {totalData}</h5>\r\n             </Col>\r\n         </Row>\r\n        )\r\n}\r\n\r\nexport default Pagination","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst propTypes = {\r\n  table: PropTypes.string.isRequired,\r\n  filename: PropTypes.string.isRequired,\r\n  sheet: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  className: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"button-download-as-xls\",\r\n  className: \"button-download\",\r\n  buttonText: \"Download\",\r\n  icon: <i className=\"fas fa-file-excel\"></i>,\r\n};\r\n\r\nclass ReactHTMLTableToExcel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDownload = this.handleDownload.bind(this);\r\n  }\r\n\r\n  static base64(s) {\r\n    return window.btoa(unescape(encodeURIComponent(s)));\r\n  }\r\n\r\n  static format(s, c) {\r\n    return s.replace(/{(\\w+)}/g, (m, p) => c[p]);\r\n  }\r\n\r\n  handleDownload() {\r\n    if (!document) {\r\n      if (process.env.NODE_ENV !== \"production\") {\r\n        console.error(\"Failed to access document object\");\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      document.getElementById(this.props.table).nodeType !== 1 ||\r\n      document.getElementById(this.props.table).nodeName !== \"TABLE\"\r\n    ) {\r\n      if (process.env.NODE_ENV !== \"production\") {\r\n        console.error(\"Provided table property is not html table element\");\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    const table = document.getElementById(this.props.table).outerHTML;\r\n    const sheet = String(this.props.sheet);\r\n    const filename = `${String(this.props.filename)}.xls`;\r\n\r\n    const uri = \"data:application/vnd.ms-excel;base64,\";\r\n    const template =\r\n      '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' +\r\n      'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' +\r\n      'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' +\r\n      \"lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>\" +\r\n      \"</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></\" +\r\n      \"xml><![endif]--></head><body>{table}</body></html>\";\r\n\r\n    const context = {\r\n      worksheet: sheet || \"Worksheet\",\r\n      table,\r\n    };\r\n\r\n    // If IE11\r\n    if (window.navigator.msSaveOrOpenBlob) {\r\n      const fileData = [\r\n        `${\r\n          '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' +\r\n          'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' +\r\n          'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' +\r\n          \"lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>\" +\r\n          \"</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></\" +\r\n          \"xml><![endif]--></head><body>\"\r\n        }${table}</body></html>`,\r\n      ];\r\n      const blobObject = new Blob(fileData);\r\n      document.getElementById(\"react-html-table-to-excel\").click()(() => {\r\n        window.navigator.msSaveOrOpenBlob(blobObject, filename);\r\n      });\r\n\r\n      return true;\r\n    }\r\n\r\n    const element = window.document.createElement(\"a\");\r\n    element.href =\r\n      uri +\r\n      ReactHTMLTableToExcel.base64(\r\n        ReactHTMLTableToExcel.format(template, context)\r\n      );\r\n    element.download = filename;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //   <button\r\n      //     id={this.props.id}\r\n      //     className={this.props.className}\r\n      //     type=\"button\"\r\n      //     onClick={this.handleDownload}\r\n      //   >\r\n      //     {this.props.buttonText}\r\n      //   </button>\r\n      <p\r\n        id={this.props.id}\r\n        onClick={this.handleDownload}\r\n        className={this.props.className}\r\n      >\r\n        {this.props.icon}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nReactHTMLTableToExcel.propTypes = propTypes;\r\nReactHTMLTableToExcel.defaultProps = defaultProps;\r\n\r\nexport default ReactHTMLTableToExcel;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  Table,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavLink,\r\n  NavItem,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport get from \"../../../helpers/get\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ButtonForFunction from \"../Components/ButtonForFunction\";\r\nimport ReactTableConvertToXl from '../ReactTableConvertToXl/ReactTableConvertToXl';\r\nimport ReactToPrint from \"react-to-print\";\r\nimport * as XLSX from \"xlsx/xlsx.mjs\";\r\nimport { userTypes } from '../../../constants/userTypeConstant';\r\nimport Loader from '../Search/Loader/Loader';\r\n\r\nconst Index = () => {\r\n  const userType = localStorage.getItem(\"userType\");\r\n  const history = useHistory();\r\n\r\n  const [uapp, setUapp] = useState([]);\r\n  const [uappLabel, setUappLabel] = useState(\"UAPP Id\");\r\n  const [uappValue, setUappValue] = useState(0);\r\n\r\n  const [student, setStudent] = useState([]);\r\n  const [studentLabel, setStudentLabel] = useState(\"All Student\");\r\n  const [studentValue, setStudentValue] = useState(0);\r\n\r\n    const [consultant,setConsultant] = useState([]);\r\n    const [consultantLabel,setConsultantLabel] = useState('Select Consultant');\r\n    const[consultantValue,setConsultantValue] = useState(0);\r\n\r\n    const [intake,setIntake] = useState([]);\r\n    const [intakeLabel,setIntakeLabel] = useState('Select Intake');\r\n    const[intakeValue,setIntakeValue] = useState(0);\r\n\r\n    const [data, setData] = useState([]);\r\n   \r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [callApi, setCallApi] = useState(false);\r\n    const [dataPerPage, setDataPerPage] = useState(15);\r\n    const [entity, setEntity] = useState(0);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n     // user select data per page\r\n     const dataSizeArr = [10, 15, 20, 30, 50, 100, 1000];\r\n     const dataSizeName = dataSizeArr.map((dsn) => ({ label: dsn, value: dsn }));\r\n     const [orderLabel, setOrderLabel] = useState(\"Select order by\");\r\n     const [orderValue, setOrderValue] = useState(0);\r\n     const [dropdownOpen1, setDropdownOpen1] = useState(false);\r\n     const [loading,setLoading] = useState(true);\r\n \r\n     const selectDataSize = (value) => {\r\n       \r\n       setDataPerPage(value);\r\n       setCallApi((prev) => !prev);\r\n     };\r\n\r\n  // search handler\r\n  const handleSearch = () => {\r\n    setCurrentPage(1);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      setCurrentPage(1);\r\n      setCallApi((prev) => !prev);\r\n    }\r\n  };\r\n\r\n  const toggle = () => {\r\n    setDropdownOpen((prev) => !prev);\r\n  };\r\n\r\n  // toggle1 dropdown\r\n  const toggle1 = () => {\r\n    setDropdownOpen1((prev) => !prev);\r\n  };\r\n\r\n  const handleExportXLSX = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(data);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\");\r\n  };\r\n\r\n  const componentRef = useRef();\r\n\r\n  useEffect(() => {\r\n    get(`ConsultantDD/index`).then((res) => {\r\n      setConsultant(res);\r\n    });\r\n\r\n    get(`StudentDD/Index`).then((res) => {\r\n      setStudent(res);\r\n    });\r\n\r\n    get(`AccountIntake/index`).then((res) => {\r\n      setIntake(res);\r\n    });\r\n\r\n    get(`UappIdDD/Index`).then((res) => {\r\n      setUapp(res);\r\n    });\r\n\r\n    get(\r\n      `ApplicationTransaction/Index?page=${currentPage}&pagesize=${dataPerPage}&uappid=${uappValue}&studentid=${studentValue}&consultantid=${consultantValue}&intakeid=${intakeValue}`\r\n    ).then((res) => {\r\n      setData(res?.models);\r\n      setEntity(res?.totalEntity);\r\n      setLoading(false);\r\n    });\r\n  }, [\r\n    currentPage,\r\n    dataPerPage,\r\n    callApi,\r\n    uappValue,\r\n    intakeValue,\r\n    studentValue,\r\n    consultantValue,\r\n  ]);\r\n\r\n  const backToDashboard = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const studentOptions = student?.map((std) => ({\r\n    label: std?.name,\r\n    value: std?.id,\r\n  }));\r\n\r\n  const selectStudent = (label, value) => {\r\n    setStudentLabel(label);\r\n    setStudentValue(value);\r\n  };\r\n\r\n  const consultantOptions = consultant?.map((con) => ({\r\n    label: con?.name,\r\n    value: con?.id,\r\n  }));\r\n\r\n  const selectConsultant = (label, value) => {\r\n    setConsultantLabel(label);\r\n    setConsultantValue(value);\r\n  };\r\n\r\n  const intakeOptions = intake?.map((int) => ({\r\n    label: int?.intakeName,\r\n    value: int?.id,\r\n  }));\r\n\r\n  const selectIntake = (label, value) => {\r\n    setIntakeLabel(label);\r\n    setIntakeValue(value);\r\n  };\r\n\r\n  const uappOptions = uapp?.map((int) => ({\r\n    label: int?.name,\r\n    value: int?.id,\r\n  }));\r\n\r\n  const selectUapp = (label, value) => {\r\n    setUappLabel(label);\r\n    setUappValue(value);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUappLabel(\"UAPP Id\");\r\n    setUappValue(0);\r\n    setStudentLabel(\"All Student\");\r\n    setStudentValue(0);\r\n    setConsultantLabel(\"All Consultant\");\r\n    setConsultantValue(0);\r\n    setIntakeLabel(\"All Intake\");\r\n    setIntakeValue(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading?\r\n        <Loader/>\r\n        :\r\n        <>\r\n        <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Application Transaction List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span className=\"text-white\" onClick={backToDashboard}>\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                  <Select\r\n                    options={uappOptions}\r\n                    // styles={customStyles2}\r\n                    value={{ label: uappLabel, value: uappValue }}\r\n                    onChange={(opt) => selectUapp(opt.label, opt.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                  <Select\r\n                    // styles={customStyles2}\r\n                    options={studentOptions}\r\n                    value={{ label: studentLabel, value: studentValue }}\r\n                    onChange={(opt) => selectStudent(opt.label, opt.value)}\r\n                  />\r\n                </div>\r\n                {userType !== userTypes?.Consultant ? (\r\n                  <div className=\"col-md-3\">\r\n                    <Select\r\n                      // styles={customStyles2}\r\n                      options={consultantOptions}\r\n                      value={{ label: consultantLabel, value: consultantValue }}\r\n                      onChange={(opt) => selectConsultant(opt.label, opt.value)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n\r\n                <div className=\"col-md-3\">\r\n                  <Select\r\n                    // styles={customStyles2}\r\n                    options={intakeOptions}\r\n                    value={{ label: intakeLabel, value: intakeValue }}\r\n                    onChange={(opt) => selectIntake(opt.label, opt.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12 d-flex justify-content-end\">\r\n              <div className=\"mt-1 mx-1 d-flex btn-clear\" onClick={handleReset}>\r\n                <span className=\"text-danger\">\r\n                  <i className=\"fa fa-times\"></i> Clear\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card className=\"uapp-employee-search\">\r\n        <CardBody>\r\n\r\n          {/* new */}\r\n          <Row className=\"mb-3\">\r\n            <Col lg=\"5\" md=\"5\" sm=\"4\" xs=\"4\">\r\n              \r\n            </Col>\r\n\r\n            <Col lg=\"7\" md=\"7\" sm=\"8\" xs=\"8\">\r\n              <div className=\"d-md-flex justify-content-end\">\r\n                \r\n                <div className=\"mr-3\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"mr-2\">Showing :</div>\r\n                    <div>\r\n                      <Select\r\n                        options={dataSizeName}\r\n                        value={{ label: dataPerPage, value: dataPerPage }}\r\n                        onChange={(opt) => selectDataSize(opt.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mr-3\">\r\n                  <Dropdown\r\n                    className=\"uapp-dropdown\"\r\n                    style={{ float: \"right\" }}\r\n                    isOpen={dropdownOpen}\r\n                    toggle={toggle}\r\n                  >\r\n                    <DropdownToggle caret>\r\n                      <i className=\"fas fa-print fs-7\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu className=\"bg-dd\">\r\n                      <div className=\"d-flex justify-content-around align-items-center mt-2\">\r\n                        <div className=\"text-white cursor-pointer\">\r\n                          {/* <p onClick={handleExportXLSX}>\r\n                            <i className=\"fas fa-file-excel\"></i>\r\n                          </p> */}\r\n                          <ReactTableConvertToXl \r\n                            id=\"test-table-xls-button\"\r\n                            table=\"table-to-xls\"\r\n                            filename=\"tablexls\"\r\n                            sheet=\"tablexls\"\r\n                            icon={<i className=\"fas fa-file-excel\"></i>}\r\n                          />\r\n                        </div>\r\n                        <div className=\"text-white cursor-pointer\">\r\n                          <ReactToPrint\r\n                            trigger={() => (\r\n                              <p>\r\n                                <i className=\"fas fa-file-pdf\"></i>\r\n                              </p>\r\n                            )}\r\n                            content={() => componentRef.current}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                {/* <div className=\"mr-3\">\r\n                  <Dropdown\r\n                    className=\"uapp-dropdown\"\r\n                    style={{ float: \"right\" }}\r\n                    isOpen={dropdownOpen1}\r\n                    toggle={toggle1}\r\n                  >\r\n                    <DropdownToggle caret>\r\n                      <i className=\"fas fa-bars\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu className=\"bg-dd\">\r\n                      <div className=\"d-flex justify-content-around align-items-center mt-2\">\r\n                        <div className=\"text-white cursor-pointer\">\r\n                          <p onClick={handleExportXLSX}>\r\n                            <i className=\"fas fa-file-excel\"></i>\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"text-white cursor-pointer\">\r\n                          <ReactToPrint\r\n                            trigger={() => (\r\n                              <p>\r\n                                <i className=\"fas fa-file-pdf\"></i>\r\n                              </p>\r\n                            )}\r\n                            content={() => componentRef.current}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </div> */}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n            <thead className=\"thead-uapp-bg\">\r\n              <tr style={{ textAlign: \"center\" }}>\r\n                <th>SL/NO</th>\r\n                <th>Id</th>\r\n                <th>Intake</th>\r\n                <th>Consultant</th>\r\n                <th>Student</th>\r\n                <th>University</th>\r\n                <th>Subject</th>\r\n                <th>Intake Range</th>\r\n                <th>Amount</th>\r\n                <th>Reg. Status</th>\r\n                <th>Payment Status</th>\r\n                <th>Transaction Date</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data?.map((ls, i) => (\r\n                <tr key={i} style={{ textAlign: \"center\" }}>\r\n                  <td>{i + 1}</td>\r\n                  <td>{ls?.Id}</td>\r\n                  <td>{ls?.Intake}</td>\r\n                  <td>{ls?.Consultant}</td>\r\n                  <td>{ls?.Student}</td>\r\n                  <td>{ls?.Unviersity}</td>\r\n                  <td>{ls?.Subject}</td>\r\n                  <td>{ls?.AccountIntake}</td>\r\n                  <td>{ls?.Amount}</td>\r\n                  <td> {ls?.RegistrationStatus}</td>\r\n                  <td>{ls?.PaymentStatus}</td>\r\n                  <td>{ls?.TransactionDate}</td>\r\n                  <td>{ls?.TransactionStatus}</td>\r\n\r\n                  <td style={{ width: \"15%\" }} className=\"text-center\">\r\n                    <ButtonGroup variant=\"text\">\r\n                      <Button className=\"me-1 btn-sm\" color=\"primary\">\r\n                        <Link to=\"/\" target=\"_black\">\r\n                          <i className=\"fas fa-eye\"></i>\r\n                        </Link>\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <Pagination\r\n            dataPerPage={dataPerPage}\r\n            totalData={entity}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}