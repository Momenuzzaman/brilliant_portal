{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","views/SMS/Search/Loader/Loader.js","views/SMS/Components/LinkButton.js","views/SMS/ReactTableConvertToXl/ReactTableConvertToXl.js","views/SMS/Branches/Branch/BranchList.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","Loader","src","loader","LinkButton","props","target","activeStyle","to","defaultProps","id","buttonText","ReactHTMLTableToExcel","handleDownload","bind","document","getElementById","this","table","nodeType","nodeName","outerHTML","sheet","String","filename","context","worksheet","window","navigator","msSaveOrOpenBlob","fileData","blobObject","Blob","click","element","createElement","href","base64","format","download","body","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","Component","BranchList","addToast","useToasts","useState","deleteModal","setDeleteModal","branchList","setBranchList","loading","setLoading","serialNum","dropdownOpen","setDropdownOpen","dropdownOpen1","setDropdownOpen1","delData","setDelData","success","setSuccess","checkSlNo","setCheckSlNo","checkName","setCheckName","checkEmail","setCheckEmail","checkPhn","setCheckPhn","checkAction","setCheckAction","buttonStatus","setButtonStatus","history","useHistory","permissions","JSON","parse","localStorage","getItem","useEffect","get","then","res","handleDeletebranch","remove","appearance","autoDismiss","closeDeleteModal","componentRef","useRef","push","lg","md","sm","xs","includes","permissionList","Add_Branch","style","float","isOpen","toggle","prev","caret","trigger","content","current","check","inline","onChange","e","checked","handleCheckedSLNO","defaultChecked","handleCheckedName","handleCheckedEmail","handleCheckedPhn","handleCheckedAction","ref","textAlign","width","map","singleBranch","i","key","email","phoneNumber","variant","branchId"],"mappings":"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","file":"static/js/231.f3392c00.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import React from 'react';\r\nimport loader from '../../../../assets/img/load.gif'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <img className='img-fluid' src={loader} />\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst propTypes = {\r\n  table: PropTypes.string.isRequired,\r\n  filename: PropTypes.string.isRequired,\r\n  sheet: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  className: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"button-download-as-xls\",\r\n  className: \"button-download\",\r\n  buttonText: \"Download\",\r\n  icon: <i className=\"fas fa-file-excel\"></i>,\r\n};\r\n\r\nclass ReactHTMLTableToExcel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDownload = this.handleDownload.bind(this);\r\n  }\r\n\r\n  static base64(s) {\r\n    return window.btoa(unescape(encodeURIComponent(s)));\r\n  }\r\n\r\n  static format(s, c) {\r\n    return s.replace(/{(\\w+)}/g, (m, p) => c[p]);\r\n  }\r\n\r\n  handleDownload() {\r\n    if (!document) {\r\n      if (process.env.NODE_ENV !== \"production\") {\r\n        console.error(\"Failed to access document object\");\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      document.getElementById(this.props.table).nodeType !== 1 ||\r\n      document.getElementById(this.props.table).nodeName !== \"TABLE\"\r\n    ) {\r\n      if (process.env.NODE_ENV !== \"production\") {\r\n        console.error(\"Provided table property is not html table element\");\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    const table = document.getElementById(this.props.table).outerHTML;\r\n    const sheet = String(this.props.sheet);\r\n    const filename = `${String(this.props.filename)}.xls`;\r\n\r\n    const uri = \"data:application/vnd.ms-excel;base64,\";\r\n    const template =\r\n      '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' +\r\n      'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' +\r\n      'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' +\r\n      \"lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>\" +\r\n      \"</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></\" +\r\n      \"xml><![endif]--></head><body>{table}</body></html>\";\r\n\r\n    const context = {\r\n      worksheet: sheet || \"Worksheet\",\r\n      table,\r\n    };\r\n\r\n    // If IE11\r\n    if (window.navigator.msSaveOrOpenBlob) {\r\n      const fileData = [\r\n        `${\r\n          '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' +\r\n          'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' +\r\n          'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' +\r\n          \"lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>\" +\r\n          \"</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></\" +\r\n          \"xml><![endif]--></head><body>\"\r\n        }${table}</body></html>`,\r\n      ];\r\n      const blobObject = new Blob(fileData);\r\n      document.getElementById(\"react-html-table-to-excel\").click()(() => {\r\n        window.navigator.msSaveOrOpenBlob(blobObject, filename);\r\n      });\r\n\r\n      return true;\r\n    }\r\n\r\n    const element = window.document.createElement(\"a\");\r\n    element.href =\r\n      uri +\r\n      ReactHTMLTableToExcel.base64(\r\n        ReactHTMLTableToExcel.format(template, context)\r\n      );\r\n    element.download = filename;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //   <button\r\n      //     id={this.props.id}\r\n      //     className={this.props.className}\r\n      //     type=\"button\"\r\n      //     onClick={this.handleDownload}\r\n      //   >\r\n      //     {this.props.buttonText}\r\n      //   </button>\r\n      <p\r\n        id={this.props.id}\r\n        onClick={this.handleDownload}\r\n        className={this.props.className}\r\n      >\r\n        {this.props.icon}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nReactHTMLTableToExcel.propTypes = propTypes;\r\nReactHTMLTableToExcel.defaultProps = defaultProps;\r\n\r\nexport default ReactHTMLTableToExcel;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport get from \"../../../../helpers/get\";\r\nimport remove from \"../../../../helpers/remove\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport ReactTableConvertToXl from \"../../ReactTableConvertToXl/ReactTableConvertToXl\";\r\nimport * as XLSX from \"xlsx/xlsx.mjs\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport LinkButton from \"../../Components/LinkButton\";\r\nimport ButtonForFunction from \"../../Components/ButtonForFunction\";\r\nimport { permissionList } from \"../../../../constants/AuthorizationConstant\";\r\nimport Loader from \"../../Search/Loader/Loader\";\r\n\r\nconst BranchList = () => {\r\n  const { addToast } = useToasts();\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [branchList, setBranchList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [serialNum, setSerialNum] = useState(1);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownOpen1, setDropdownOpen1] = useState(false);\r\n  const [delData, setDelData] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  // for hide/unhide table column\r\n  const [checkSlNo, setCheckSlNo] = useState(true);\r\n  const [checkName, setCheckName] = useState(true);\r\n  const [checkEmail, setCheckEmail] = useState(true);\r\n  const [checkPhn, setCheckPhn] = useState(true);\r\n  const [checkAction, setCheckAction] = useState(true);\r\n  const [buttonStatus,setButtonStatus] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const backToDashboard = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const permissions = JSON.parse(localStorage.getItem(\"permissions\"));\r\n\r\n  useEffect(() => {\r\n    get(`Branch/Index`).then((res) => {\r\n      setBranchList(res);\r\n      setLoading(false);\r\n    });\r\n  }, [success]);\r\n\r\n  // const handleLocalStorage = () => {\r\n  //   localStorage.removeItem(\"branchId\");\r\n  //   // localStorage.removeItem(\"branchManagerId\");\r\n  // };\r\n\r\n  const handleUpdate = (id) => {\r\n    history.push(`/branchInformation/${id}`);\r\n  };\r\n\r\n  const handleDeletebranch = () => {\r\n    setButtonStatus(true);\r\n    remove(`Branch/Delete/${delData}`).then((res) => {\r\n      setButtonStatus(false);\r\n      addToast(res, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n      setDeleteModal(false);\r\n\r\n      setSuccess(!success);\r\n    });\r\n  };\r\n\r\n  const toggleDanger = (id) => {\r\n    setDelData(id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  // on Close Delete Modal\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n  // toggle dropdown\r\n  const toggle = () => {\r\n    setDropdownOpen((prev) => !prev);\r\n  };\r\n\r\n  // toggle1 dropdown\r\n  const toggle1 = () => {\r\n    setDropdownOpen1((prev) => !prev);\r\n  };\r\n\r\n  const handleExportXLSX = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(branchList);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\");\r\n  };\r\n\r\n  const componentRef = useRef();\r\n\r\n  const redirectToBranchProfile = (branchId) => {\r\n    history.push(`/branchProfile/${branchId}`);\r\n  };\r\n\r\n  // for hide/unhide column\r\n\r\n  const handleCheckedSLNO = (e) => {\r\n    setCheckSlNo(e.target.checked);\r\n  };\r\n  const handleCheckedName = (e) => {\r\n    setCheckName(e.target.checked);\r\n  };\r\n  const handleCheckedEmail = (e) => {\r\n    setCheckEmail(e.target.checked);\r\n  };\r\n  const handleCheckedPhn = (e) => {\r\n    setCheckPhn(e.target.checked);\r\n  };\r\n  const handleCheckedAction = (e) => {\r\n    setCheckAction(e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     {\r\n      loading?\r\n      <Loader/>\r\n      :\r\n      <div>\r\n         <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Branch List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card className=\"uapp-employee-search\">\r\n        <CardBody>\r\n          <Row className=\"mb-3\">\r\n            <Col lg=\"6\" md=\"5\" sm=\"6\" xs=\"4\">\r\n              {permissions?.includes(permissionList?.Add_Branch) ? (\r\n                <LinkButton\r\n                  url={\"/branchInformation\"}\r\n                  //  func={handleLocalStorage}\r\n                  className={\"btn btn-uapp-add \"}\r\n                  icon={<i className=\"fas fa-plus\"></i>}\r\n                  name={\"Add New Branch\"}\r\n                />\r\n              ) : null}\r\n            </Col>\r\n\r\n            <Col lg=\"6\" md=\"7\" sm=\"6\" xs=\"8\">\r\n              <div className=\"d-md-flex justify-content-end\">\r\n                <div className=\"mr-3\">\r\n                  <Dropdown\r\n                    className=\"uapp-dropdown\"\r\n                    style={{ float: \"right\" }}\r\n                    isOpen={dropdownOpen}\r\n                    toggle={toggle}\r\n                  >\r\n                    <DropdownToggle caret>\r\n                      <i className=\"fas fa-print fs-7\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu className=\"bg-dd\">\r\n                      {/* <DropdownItem> */}\r\n                      <div className=\"d-flex justify-content-around align-items-center mt-2\">\r\n                        <div className=\"text-white cursor-pointer\">\r\n                          {/* <p onClick={handleExportXLSX}><i className=\"fas fa-file-excel\"></i></p> */}\r\n                          <ReactTableConvertToXl\r\n                            id=\"test-table-xls-button\"\r\n                            table=\"table-to-xls\"\r\n                            filename=\"tablexls\"\r\n                            sheet=\"tablexls\"\r\n                            icon={<i className=\"fas fa-file-excel\"></i>}\r\n                          />\r\n                        </div>\r\n                        <div className=\"text-white cursor-pointer\">\r\n                          <ReactToPrint\r\n                            trigger={() => (\r\n                              <p>\r\n                                <i className=\"fas fa-file-pdf\"></i>\r\n                              </p>\r\n                            )}\r\n                            content={() => componentRef.current}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className=\"download-table-xls-button\"\r\n                          table=\"table-to-xls\"\r\n                          filename=\"tablexls\"\r\n                          sheet=\"tablexls\"\r\n                          buttonText=\"Download as XLS\"/> */}\r\n\r\n                      {/* <Button onClick={onDownload}> Export excel </Button> */}\r\n\r\n                      {/* </DropdownItem> */}\r\n\r\n                      {/* <DropdownItem> */}\r\n\r\n                      {/* </DropdownItem> */}\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                {/* column hide unhide starts here */}\r\n\r\n                <div className=\"\">\r\n                  <Dropdown\r\n                    className=\"uapp-dropdown\"\r\n                    style={{ float: \"right\" }}\r\n                    isOpen={dropdownOpen1}\r\n                    toggle={toggle1}\r\n                  >\r\n                    <DropdownToggle caret>\r\n                      <i className=\"fas fa-bars\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu className=\"bg-dd-1\">\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">SL/NO</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              id=\"\"\r\n                              name=\"isAcceptHome\"\r\n                              onChange={(e) => {\r\n                                handleCheckedSLNO(e);\r\n                              }}\r\n                              defaultChecked={checkSlNo}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">Name</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                handleCheckedName(e);\r\n                              }}\r\n                              defaultChecked={checkName}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">Email</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                handleCheckedEmail(e);\r\n                              }}\r\n                              defaultChecked={checkEmail}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">Phone No</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                handleCheckedPhn(e);\r\n                              }}\r\n                              defaultChecked={checkPhn}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">Action</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                handleCheckedAction(e);\r\n                              }}\r\n                              defaultChecked={checkAction}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                {/* column hide unhide ends here */}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          {loading ? (\r\n            <h2 className=\"text-center\">Loading...</h2>\r\n          ) : (\r\n            <div className=\"table-responsive\" ref={componentRef}>\r\n              <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    {checkSlNo ? <th>SL/NO</th> : null}\r\n\r\n                    {checkName ? <th>Name</th> : null}\r\n                    {checkEmail ? <th>Email</th> : null}\r\n                    {checkPhn ? <th>Phone No</th> : null}\r\n\r\n                    {checkAction ? (\r\n                      <th style={{ width: \"8%\" }} className=\"text-center\">\r\n                        Action\r\n                      </th>\r\n                    ) : null}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {branchList?.map((singleBranch, i) => (\r\n                    <tr key={singleBranch?.id} style={{ textAlign: \"center\" }}>\r\n                      {checkSlNo ? <td>{serialNum + i}</td> : null}\r\n\r\n                      {checkName ? <td>{singleBranch?.name}</td> : null}\r\n                      {checkEmail ? <td>{singleBranch?.email}</td> : null}\r\n                      {checkPhn ? <td>{singleBranch?.phoneNumber}</td> : null}\r\n\r\n                      {checkAction ? (\r\n                        <td style={{ width: \"8%\" }} className=\"text-center\">\r\n                          <ButtonGroup variant=\"text\">\r\n                            <ButtonForFunction\r\n                              color={\"primary\"}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              func={() =>\r\n                                redirectToBranchProfile(singleBranch?.id)\r\n                              }\r\n                              icon={<i className=\"fas fa-eye\"></i>}\r\n                              permission={6}\r\n                            />\r\n\r\n                            {/* <LinkButton \r\n                            url={`/branchProfile/${singleBranch?.id}`}\r\n                            color={\"primary\"}\r\n                            className={\"mx-1 btn-sm\"}\r\n                            icon={<i className=\"fas fa-eye\"></i>}\r\n                            permission={6}\r\n                          /> */}\r\n                            {\r\n                              singleBranch?.email  !== 'info@smsheg.co.uk' ?\r\n                            <ButtonForFunction\r\n                              color={\"warning\"}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              func={() => handleUpdate(singleBranch?.id)}\r\n                              icon={<i className=\"fas fa-edit\"></i>}\r\n                              permission={6}\r\n                            />\r\n                            : \r\n                            null\r\n                            }\r\n\r\n                            {\r\n                              singleBranch?.email !== 'info@smsheg.co.uk'?\r\n                            <ButtonForFunction\r\n                              color={\"danger\"}\r\n                              func={() => toggleDanger(singleBranch?.id)}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                              permission={6}\r\n                              \r\n                              \r\n                            />\r\n                            :\r\n                              null\r\n                            }\r\n\r\n                            <Modal\r\n                              isOpen={deleteModal}\r\n                              toggle={closeDeleteModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={handleDeletebranch}\r\n                                  disabled={buttonStatus}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeDeleteModal} >NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </ButtonGroup>\r\n                        </td>\r\n                      ) : null}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n      </div>\r\n     }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BranchList;\r\n"],"sourceRoot":""}