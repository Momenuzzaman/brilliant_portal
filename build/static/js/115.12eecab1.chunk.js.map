{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardTitle.js","views/SMS/Configuration/Employees/EmployeeType.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","onClick","body","authToken","Axios","post","rootUrl","res","response","status","history","push","put","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","inverse","bool","outline","Card","CardHeader","CardTitle","connect","state","EmployeesTypeList","employeeTypeDataReducer","employeeType","myForm","createRef","useState","success","setSuccess","modalOpen","setModalOpen","employeesTypeName","setemployeesTypeName","selected","setSelected","addToast","useToasts","dispatch","useDispatch","deleteModal","setDeleteModal","useHistory","useEffect","get","then","data","StoreEmployeeTypeData","isOpen","toggle","onSubmit","event","preventDefault","subdata","Name","action","console","log","message","appearance","autoDismiss","id","hidden","row","md","value","placeholder","onChange","e","v","target","required","style","display","justifyContent","localStorage","removeItem","getItem","subData","Id","Ripple","map","etype","i","key","scope","pathname","employeeCount","p","setItem","remove"],"mappings":"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","file":"static/js/115.12eecab1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name}) => {\r\n    // const {className, icon} = props;\r\n\r\n    // console.log(className);\r\n    // console.log(url);\r\n\r\n    // console.log('Trying New Type of Props',func, className, icon, permission);\r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function put(url, body = {},authToken = \"\"){\r\n\r\n\r\n   \r\n   try {\r\n    const res = await Axios.put(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error.response.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n \r\n\r\n        throw error\r\n   }\r\n}\r\n\r\nexport default put\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import React, { createRef, useEffect, useState } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from 'reactstrap';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, Card, CardHeader, CardTitle, CardBody, } from 'reactstrap';\r\nimport { User } from \"react-feather\"\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { StoreEmployeeTypeData } from '../../../../redux/actions/SMS/Employees/EmployeesTypeAction'\r\nimport { useHistory } from 'react-router';\r\nimport get from '../../../../helpers/get';\r\n\r\nimport post from '../../../../helpers/post';\r\nimport remove from '../../../../helpers/remove';\r\nimport put from '../../../../helpers/put';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\nconst EmployeeType = (props) => {\r\n\r\n  const myForm = createRef();\r\n  const [success, setSuccess] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [employeesTypeName, setemployeesTypeName] = useState('');\r\n  const [selected, setSelected] = useState('');\r\n  const { addToast } = useToasts();\r\n  const dispatch = useDispatch();\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const EmployeesTypeList = props.EmployeesTypeList[0];\r\n  const history = useHistory();\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false)\r\n    setSelected('');\r\n    setemployeesTypeName('')\r\n    localStorage.removeItem('updateemployeesType')\r\n  }\r\n\r\n  useEffect(() => {\r\n    const returnValue = get(`EmployeType/Index`).then((data) => {\r\n     \r\n      dispatch(StoreEmployeeTypeData(data))\r\n    })\r\n  }, [dispatch])\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const subdata = {\r\n      Name: employeesTypeName\r\n    }\r\n\r\n\r\n    const returnValue = post(`EmployeType/Create`, subdata).then((action) => {\r\n      setSuccess(!success)\r\n      setModalOpen(false)\r\n      console.log(action)\r\n     \r\n      addToast(action?.data?.message, {\r\n        appearance: 'success',\r\n        autoDismiss: true,\r\n      })\r\n      setemployeesTypeName('')\r\n      setSelected('')\r\n      get(`EmployeType/Index`).then((data) => {\r\n     \r\n        dispatch(StoreEmployeeTypeData(data))\r\n      })\r\n    });\r\n  }\r\n\r\n\r\n  const handleUpdate = (p) => {\r\n    setModalOpen(true)\r\n    setSelected(p.name)\r\n    localStorage.setItem('updateemployeesType', p.id)\r\n  }\r\n\r\n  const changingemployeesType = (v) => {\r\n    setemployeesTypeName(v)\r\n    setSelected(v)\r\n  }\r\n  const toggleDanger = (p) => {\r\n    localStorage.setItem('employeesTypeId', p.id)\r\n    localStorage.setItem('employeesTypeName', p.name)\r\n    setDeleteModal(true)\r\n  }\r\n\r\n  const handleDeletePermission = (id) => {\r\n \r\n    const returnValue = remove(`EmployeType/Delete/${id}`).then((action) => {\r\n      setDeleteModal(false);\r\n      setSuccess(!success);\r\n      console.log(action);\r\n      \r\n        addToast(action, {\r\n          appearance:  'error',\r\n          autoDismiss: true,\r\n        })\r\n        localStorage.removeItem('employeesTypeId')\r\n        localStorage.removeItem('employeesTypeName')\r\n        get(`EmployeType/Index`).then((data) => {\r\n     \r\n          dispatch(StoreEmployeeTypeData(data))\r\n        })\r\n\r\n       \r\n    })\r\n  }\r\n\r\n  const handleUpdateSubmit = () => {\r\n\r\n    const id = localStorage.getItem('updateemployeesType');\r\n\r\n    const subData = {\r\n      Name: selected,\r\n      Id: id\r\n    }\r\n\r\n    const returnvalue = put(`EmployeType/Update`, subData).then((action) => {\r\n      setSuccess(!success)\r\n      setModalOpen(false)\r\n    \r\n      if(action?.status == 200){\r\n        addToast(action?.data?.message, {\r\n          appearance:  'success',\r\n          autoDismiss: true\r\n        })\r\n        setSelected('')\r\n        localStorage.removeItem('updateemployeesType')\r\n        get(`EmployeType/Index`).then((data) => {\r\n       \r\n          dispatch(StoreEmployeeTypeData(data))\r\n        })\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n  // employee count click\r\n  const handleEmpCount = (id,name) => {\r\n    history.push({\r\n      pathname: '/employeeList',\r\n      id: id,\r\n      name: name\r\n    })\r\n  }\r\n  // redirect to dashboard\r\n  const backToDashboard = () => {\r\n    history.push(\"/\")\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Card className='uapp-card-bg'>\r\n        <CardHeader className=\"page-header\">\r\n\r\n          <h3 className='text-light'>Employee Type </h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className='text-light'> <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard</span>\r\n          </div>\r\n\r\n        </CardHeader>\r\n      </Card>\r\n\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Employee Type</CardTitle>\r\n          \r\n          <ButtonForFunction\r\n            color={\"success\"}\r\n            func={() => setModalOpen(true)}\r\n            name={\"Add Employee Type\"}\r\n            permission={6}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n\r\n          <Modal isOpen={modalOpen} toggle={() => setModalOpen(!modalOpen)} className=\"uapp-modal\">\r\n            <ModalHeader>Add Employees Type</ModalHeader>\r\n            <ModalBody>\r\n              <Form ref={myForm} onSubmit={handleSubmit}>\r\n\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"Id\"\r\n                  id=\"Id\"\r\n                  hidden\r\n                />\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Add Employees Type</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"Name\"\r\n                      id=\"Name\"\r\n                      value={selected}\r\n                      placeholder=\"Employees Type\"\r\n                      onChange={(e) => changingemployeesType(e.target.value)}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                  <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={() => closeModal()}>Close</Button>\r\n\r\n                  {\r\n                    localStorage.getItem(\"updateemployeesType\") ?\r\n                      <Button color=\"warning\" className=\"mr-1 mt-3\" onClick={handleUpdateSubmit}>Update</Button> :\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-3\"\r\n\r\n                      >\r\n                        Submit\r\n                      </Button.Ripple>\r\n\r\n                  }\r\n\r\n                </FormGroup>\r\n\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>SL/NO</th>\r\n                <th>Name</th>\r\n                <th className=\"text-center\"> Total Employee</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                EmployeesTypeList?.map((etype, i) => <tr key={etype.id}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{etype.name}</td>\r\n                  <td className=\"text-center\">\r\n                    <span onClick={()=>handleEmpCount(etype.id, etype.name)} className=\"badge badge-pill badge-primary cursor-pointer\">  {etype.employeeCount} </span>\r\n                  </td>\r\n                  <td>\r\n\r\n                    {/* <Button onClick={() => toggleDanger(etype)} color=\"danger\" className=\"mr-2 btn-sm\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n\r\n                    <ButtonForFunction\r\n                      func={() => toggleDanger(etype)}\r\n                      color={\"danger\"}\r\n                      className={\"mr-2 btn-sm\"}\r\n                      icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                      permission={6}\r\n                    />\r\n\r\n                    {/* <Button onClick={() => handleUpdate(etype)} color=\"warning\" className=\" btn-sm\"> <i className=\"fas fa-edit\"></i> </Button> */}\r\n\r\n                    <ButtonForFunction\r\n                      func={() => handleUpdate(etype)}\r\n                      color={\"warning\"}\r\n                      className={\" btn-sm\"}\r\n                      icon={<i className=\"fas fa-edit\"></i>}\r\n                      permission={6}\r\n                    />\r\n\r\n                    <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this {localStorage.getItem('employeesTypeName')} ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button onClick={() => handleDeletePermission(localStorage.getItem('employeesTypeId'))} color=\"danger\">YES</Button>\r\n                        <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                    </Modal>\r\n                  </td>\r\n                </tr>\r\n\r\n                )}\r\n\r\n\r\n            </tbody>\r\n          </Table>\r\n\r\n        </CardBody>\r\n      </Card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n\r\n  EmployeesTypeList: state.employeeTypeDataReducer.employeeType,\r\n})\r\nexport default connect(mapStateToProps)(EmployeeType);\r\n"],"sourceRoot":""}