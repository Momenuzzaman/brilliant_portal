{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/put.js","helpers/post.js","views/SMS/Consultant/AddConsultantType.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","Axios","put","rootUrl","headers","res","response","status","history","push","axios","post","AddConsultantType","useHistory","useState","modalOpen","setModalOpen","success","setSuccess","consultants","setConsultants","setConsultantType","postId","setPostId","consName","setConsName","permissions","JSON","parse","addToast","useToasts","useEffect","get","then","console","log","closeModal","length","isOpen","toggle","onSubmit","event","preventDefault","subdata","FormData","target","data","message","appearance","autoDismiss","action","id","defaultValue","row","md","placeholder","style","display","justifyContent","Ripple","textAlign","map","consultant","i","key","scope","consultantCount","includes","permissionList","Edit_Consultant_type"],"mappings":"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","file":"static/js/203.62fdbe36.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error.response.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router';\r\nimport { Card, CardBody, CardHeader,   Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table } from 'reactstrap';\r\n\r\n\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport { StoreUniversitytypeData } from '../../../redux/actions/SMS/UniversityAction/UniversityTypeAction';\r\nimport { Link } from 'react-router-dom';\r\nimport get from '../../../helpers/get';\r\nimport post from '../../../helpers/post';\r\n\r\nimport remove from '../../../helpers/remove';\r\nimport put from '../../../helpers/put';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\nimport { permissionList } from '../../../constants/AuthorizationConstant';\r\n\r\nconst AddConsultantType = () => {\r\n\r\n    const history = useHistory();\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [consultants, setConsultants] = useState([]);\r\n    const [consultantType,setConsultantType] = useState('');\r\n    const [postId, setPostId] = useState(0);\r\n    const [consName,setConsName] = useState('');\r\n\r\n    const permissions = JSON.parse(localStorage.getItem(\"permissions\"));\r\n\r\n    const { addToast } = useToasts();\r\n\r\n    useEffect(()=>{\r\n        get('ConsultantType/Index').then(res=>{\r\n            console.log(\"consultantList\", res);\r\n            setConsultants(res);\r\n        })\r\n    },[success])\r\n\r\n    // on Close Modal\r\n    const closeModal = () => {\r\n      setModalOpen(false);\r\n    }\r\n\r\n    const toggleDanger = (name,id) => {\r\n        localStorage.setItem('consTypeName',name)\r\n        localStorage.setItem('consTypeId',id)\r\n       \r\n        setDeleteModal(true)\r\n       }\r\n\r\n    // on Close Delete Modal\r\n    const closeDeleteModal = () => {\r\n       setDeleteModal(false);\r\n       localStorage.removeItem('consTypeName')\r\n       localStorage.removeItem('consTypeId')\r\n    }\r\n\r\n    const handleDeleteUniType = (id) => {\r\n        const returnValue = remove(`ConsultantType/Delete/${id}`).then((action)=> {\r\n          console.log(\"delRes\",action);\r\n          setDeleteModal(false);\r\n          setSuccess(!success);\r\n          // console.log(action);\r\n           addToast(action, {\r\n             appearance: 'error',\r\n             autoDismiss: true,\r\n           })\r\n           localStorage.removeItem('delUniTypeName')\r\n           localStorage.removeItem('delUniTypeId')\r\n        })\r\n      }\r\n\r\n      const handleUpdate = (type) => {\r\n        setModalOpen(true);\r\n        setConsultantType(type.name);\r\n        // localStorage.setItem('updateUni',type.id)\r\n        // console.log(type);\r\n        get(`ConsultantType/Get/${type}`)\r\n        .then(res=> {\r\n          setPostId(res.id);\r\n          setConsName(res.name);\r\n        }) \r\n      }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const subdata = new FormData(event.target);\r\n        \r\n        if(postId === 0){\r\n            post(`ConsultantType/Create`,subdata)\r\n            .then(res => {\r\n              addToast(res?.data?.message, {\r\n                appearance: 'success',\r\n                autoDismiss: true,\r\n              })\r\n              setModalOpen(false);\r\n              setSuccess(!success);\r\n            })\r\n        }\r\n        else{\r\n            put(`ConsultantType/Update`,subdata).then((action)=> {\r\n                setSuccess(!success);\r\n                setModalOpen(false)\r\n                addToast(action?.data?.message, {\r\n                  appearance: 'success',\r\n                  autoDismiss: true,\r\n                })\r\n                setConsultantType('');\r\n                setConsName('');\r\n                setPostId(0);\r\n              })\r\n        }  \r\n      }\r\n\r\n    // redirect to dashboard\r\n    const backToDashboard = () => {\r\n     history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className='uapp-card-bg'>\r\n              <CardHeader className=\"page-header\">              \r\n                <h3 className=\"text-light\">Consultant Type</h3>\r\n                  <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard} className=\"text-light\">\r\n                    {\" \"} \r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                    </span>\r\n                  </div>             \r\n              </CardHeader>        \r\n            </Card>\r\n\r\n\r\n      <Card>\r\n        <CardHeader>\r\n\r\n          {/* <ButtonForFunction \r\n            className={\"btn btn-uapp-add\"}\r\n            func={() => {\r\n              setModalOpen(true);\r\n              setConsName('');\r\n              setPostId(0);\r\n            }}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={\" Add New\"}\r\n            permission={6}\r\n          /> */}\r\n\r\n          <br/>\r\n         \r\n          <div> <b> Total <span className=\"badge badge-primary\">{consultants?.length}</span> Consultant Type Found </b></div>\r\n        </CardHeader>\r\n        \r\n        <CardBody>\r\n\r\n          <div>\r\n\r\n            <Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n              <ModalHeader>Add Consultant Type</ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                     {\r\n                      postId>0 ?\r\n                      <Input\r\n                        type=\"hidden\"\r\n                        name=\"id\"\r\n                        id=\"id\"\r\n                        defaultValue={postId}\r\n                      />\r\n                      :\r\n                      null\r\n                     }\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>Consultant Type Name</span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        defaultValue={consName}\r\n                        \r\n                        placeholder=\"Create Consultant Type\"\r\n                        // onChange={(e) => setUniversityType(e.target.value)}\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                    <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={closeModal}>Close</Button>\r\n\r\n                    \r\n                    \r\n                      <Button.Ripple\r\n                        color=\"warning\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-3\"\r\n                       \r\n                      >\r\n                        Submit\r\n                      </Button.Ripple>\r\n\r\n                  \r\n\r\n                  </FormGroup>\r\n\r\n                </Form>\r\n              </ModalBody>\r\n\r\n            </Modal>\r\n            <div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"table-responsive\">\r\n          <Table className=\"table-sm table-bordered\" >\r\n          <thead className=\"thead-uapp-bg\">\r\n              <tr style={{ textAlign: \"center\" }}>\r\n                <th>SL/NO</th>\r\n                <th>Consultant Type Name</th>\r\n                <th>Count</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {\r\n                consultants?.map((consultant, i) => <tr key={consultant?.id} style={{ textAlign: \"center\" }}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{consultant?.name}</td>\r\n                  <td className=\"text-center\" >               \r\n                   {/* <Link to ={{\r\n                     pathname: '/universityList',\r\n                     universityType: uniType?.id,\r\n                     universityName: uniType?.name,\r\n\r\n                   }}> \r\n                   <span className=\"badge badge-pill badge-primary\"> {uniType?.universityCount} </span>\r\n                   </Link> */}\r\n                   <span className=\"badge badge-pill badge-primary\"> {consultant?.consultantCount} </span>\r\n                  </td>\r\n                  <td>\r\n                    \r\n                    {/* <ButtonForFunction \r\n                      className={\"mx-1 btn-sm\"}\r\n                      func={() => toggleDanger(consultant?.name, consultant?.id)}\r\n                      color={\"danger\"}\r\n                      icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                      permission={6}\r\n                    /> */}\r\n\r\n\r\n                   {\r\n                      permissions?.includes(permissionList?.Edit_Consultant_type) ?\r\n                     <ButtonForFunction \r\n                     func={()=> handleUpdate(consultant?.id)}\r\n                     className={\"mx-1 btn-sm\"}\r\n                     color={\"warning\"}\r\n                     icon={<i className=\"fas fa-edit\"></i>}\r\n                  \r\n                   />\r\n                   :\r\n                   null\r\n                   }\r\n\r\n\r\n                    {/* <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this <b>{localStorage.getItem('consTypeName')}</b> ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={() => handleDeleteUniType(localStorage.getItem('consTypeId'))}>YES</Button>\r\n                        <Button onClick={closeDeleteModal}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                    </Modal> */}\r\n                  </td>\r\n                </tr>)\r\n              }\r\n\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n\r\n        </CardBody>\r\n      </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddConsultantType;"],"sourceRoot":""}