{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","views/SMS/Components/LinkButton.js","views/SMS/Pagination/Pagination.jsx","views/SMS/Consultant/ConsultantByConsultant.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","LinkButton","props","target","activeStyle","to","Pagination","PageIndex","TotalPages","PreviousPage","NextPage","dataPerPage","totalData","paginate","currentPage","totalpages","Math","ceil","startpage","endpage","pageNumbers","i","push","md","style","cursor","map","number","key","textAlign","marginTop","paddingRight","ConsultantByConsultant","id","useParams","useState","consultantList","setConsultantList","entity","setEntity","callApi","setCallApi","serialNum","setSerialNum","loading","setLoading","setCurrentPage","setDataPerPage","dropdownOpen","setDropdownOpen","history","useToasts","addToast","useHistory","useEffect","get","then","res","console","log","models","totalEntity","firstSerialNumber","dataSizeName","dsn","label","value","componentRef","useRef","lg","sm","xs","options","onChange","opt","prev","float","isOpen","toggle","caret","wb","XLSX","book_new","ws","json_to_sheet","book_append_sheet","trigger","content","current","ref","width","consultant","e","scope","firstName","lastName","email","phoneNumber","branch","parentConsultantName","consultantType","createdOn","Date","toLocaleString","split","accountStatus","statusName","textDecoration","studentCount","childConsultantCount","variant","pageNumber"],"mappings":"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","file":"static/js/219.d3697c2a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import React from 'react'\r\nimport {Row,Col} from 'reactstrap'\r\nconst Pagination = ({ dataPerPage, totalData, paginate, currentPage }) => {\r\n\r\n    let PageIndex = 0;\r\n    let PageSize = 0;\r\n    let TotalCount = 0;\r\n    let TotalPages = 0;\r\n    let PreviousPage = 0;\r\n    let NextPage = 0;\r\n  \r\n    const totalpages = Math.ceil(totalData / dataPerPage);\r\n    let startpage = currentPage - 5;\r\n    let endpage = currentPage + 4;\r\n    if (startpage <= 0) {\r\n        endpage = endpage - (startpage - 1);\r\n        startpage = 1;\r\n    }\r\n    if (endpage > totalpages) {\r\n        endpage = totalpages;\r\n        if (endpage > 10) {\r\n            startpage = endpage - 9;\r\n        }\r\n    }\r\n    TotalCount = totalData;\r\n    PageIndex = currentPage;\r\n    PageSize = dataPerPage;\r\n    TotalPages = totalpages;\r\n    PreviousPage = startpage;\r\n    NextPage = endpage;\r\n\r\n\r\n    // const prev = currentPage > 1 ? (currentPage - 1) : 1;\r\n    // const last = Math.ceil(totalData / dataPerPage);\r\n    //     for (let i = 1; i <= Math.ceil(totalData/dataPerPage); i++) {\r\n\r\n    //         pageNumbers.push(i)\r\n    //     }\r\n\r\n    // let newPageNumbers;\r\n\r\n    // if(pageNumbers.length>10){\r\n    //  newPageNumbers = pageNumbers.slice(0,10)\r\n    // }\r\n    const pageNumbers = [];\r\n    const last = NextPage;\r\n    const next = (last === currentPage) ? currentPage : currentPage + 1;\r\n\r\n    const prev = PreviousPage;\r\n    \r\n    for (let i = PreviousPage; i <= NextPage; i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n        return (\r\n         <Row>\r\n             <Col md=\"6\">\r\n             <nav className=\"page navigation uapp-pagination\">\r\n                <ul className=\"pagination ml-2\">\r\n\r\n                    {\r\n                        PageIndex > 1 &&\r\n                        <>\r\n                  <li className=\"pagination-item pagination-First\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(1)} className=\"page-link\">\r\n                            First\r\n                        </p>\r\n                    </li>\r\n\r\n                    <li className=\"pagination-item\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(PageIndex - 1)} className=\"page-link\">\r\n                      <i className=\"fas fa-chevron-left\"></i>\r\n                        </p>\r\n                    </li>\r\n                        </>\r\n                    }\r\n\r\n                    \r\n\r\n                    {\r\n\r\n                        pageNumbers.map(number =>\r\n\r\n                            PageIndex==number ?\r\n                            <li key={number} className=\"pagination-item \">\r\n                                <p style={{ cursor: 'pointer' }} onClick={() => paginate(number)} className=\"page-link page-active\">\r\n                                    {number}\r\n                                </p>\r\n                            </li>\r\n                            :\r\n                            <li key={number} className=\"pagination-item\">\r\n                            <p style={{ cursor: 'pointer' }} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </p>\r\n                        </li>\r\n\r\n                        )\r\n                    }\r\n                    {\r\n                        PageIndex < TotalPages &&\r\n                        <>\r\n                        <li className=\"pagination-item\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(PageIndex + 1)} className=\"page-link\">\r\n                      <i className=\"fas fa-chevron-right\"></i>\r\n                        </p>\r\n                    </li>\r\n                  <li className=\"pagination-item pagination-Last\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(TotalPages)} className=\"page-link\">\r\n                            Last\r\n                        </p>\r\n                    </li>\r\n                        </>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n             </Col>\r\n\r\n             <Col md=\"6\" style={{textAlign: 'right', marginTop: '1.5%', paddingRight: '2.5%'}}>\r\n                 <h5>Total Results Found: {totalData}</h5>\r\n             </Col>\r\n         </Row>\r\n        )\r\n}\r\n\r\nexport default Pagination","import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  ButtonGroup,\r\n  Button,\r\n  Input,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport Pagination from \"../../SMS/Pagination/Pagination.jsx\";\r\nimport { useHistory, useLocation, useParams } from \"react-router\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport get from \"../../../helpers/get.js\";\r\nimport { rootUrl } from \"../../../constants/constants.js\";\r\nimport { useState } from \"react\";\r\n\r\nimport * as XLSX from \"xlsx/xlsx.mjs\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport remove from \"../../../helpers/remove.js\";\r\nimport LinkButton from \"../Components/LinkButton.js\";\r\nimport ButtonForFunction from \"../Components/ButtonForFunction.js\";\r\n\r\nconst ConsultantByConsultant = () => {\r\n  const { id } = useParams();\r\n\r\n  const [consultantList, setConsultantList] = useState([]);\r\n\r\n  const [entity, setEntity] = useState(0);\r\n  const [callApi, setCallApi] = useState(false);\r\n  const [serialNum, setSerialNum] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [dataPerPage, setDataPerPage] = useState(15);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    get(\r\n      `Consultant/GetAssociate?page=${currentPage}&pageSize=${dataPerPage}&id=${id}`\r\n    ).then((res) => {\r\n      console.log(\"wdwdwdwd\", res);\r\n      setConsultantList(res?.models);\r\n      setEntity(res?.totalEntity);\r\n      setSerialNum(res?.firstSerialNumber);\r\n      console.log(res?.models);\r\n      setLoading(false);\r\n    });\r\n  }, [id,currentPage,dataPerPage,callApi,entity,loading]);\r\n\r\n  // user select data per page\r\n  const dataSizeArr = [10, 15, 20, 30, 50, 100, 1000];\r\n  const dataSizeName = dataSizeArr.map((dsn) => ({ label: dsn, value: dsn }));\r\n\r\n  const selectDataSize = (value) => {\r\n    setLoading(true);\r\n    setDataPerPage(value);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n  // toggle dropdown\r\n  const toggle = () => {\r\n    setDropdownOpen((prev) => !prev);\r\n  };\r\n\r\n  //  change page\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n  // redirect to dashboard\r\n  const backToDashboard = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleDate = (e) => {\r\n    var datee = e;\r\n    var utcDate = new Date(datee);\r\n    var localeDate = utcDate.toLocaleString(\"en-CA\");\r\n    const x = localeDate.split(\",\")[0];\r\n    return x;\r\n  };\r\n\r\n  const handleExportXLSX = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(consultantList);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\");\r\n  };\r\n\r\n  const componentRef = useRef();\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-light\">Consultant list</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className=\"text-light\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card className=\"uapp-employee-search\">\r\n        <CardBody>\r\n          <Row className=\"mb-3\">\r\n            <Col lg=\"6\" md=\"5\" sm=\"6\" xs=\"4\">\r\n              {/* <LinkButton\r\n                url={\"/addConsultant\"}\r\n                className={\"btn btn-uapp-add \"}\r\n                name={\"Add New\"}\r\n                icon={<i className=\"fas fa-plus\"></i>}\r\n                permission={6}\r\n              /> */}\r\n            </Col>\r\n\r\n            <Col lg=\"6\" md=\"7\" sm=\"6\" xs=\"8\">\r\n              <Row>\r\n                <Col lg=\"5\" md=\"6\"></Col>\r\n                <Col lg=\"2\" md=\"3\" sm=\"5\" xs=\"5\" className=\"mt-2\">\r\n                  Showing\r\n                </Col>\r\n                <Col md=\"3\" sm=\"7\" xs=\"7\">\r\n                  <Select\r\n                    options={dataSizeName}\r\n                    value={{ label: dataPerPage, value: dataPerPage }}\r\n                    onChange={(opt) => selectDataSize(opt.value)}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"2\">\r\n                  <Dropdown\r\n                    className=\"uapp-dropdown\"\r\n                    style={{ float: \"right\" }}\r\n                    isOpen={dropdownOpen}\r\n                    toggle={toggle}\r\n                  >\r\n                    <DropdownToggle caret>\r\n                      <i className=\"fas fa-ellipsis-v\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu className=\"bg-dd\">\r\n                      <div className=\"d-flex justify-content-around align-items-center mt-2\">\r\n                        <div className=\"text-light cursor-pointer\">\r\n                          <p onClick={handleExportXLSX}>\r\n                            <i className=\"fas fa-file-excel\"></i>\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"text-light cursor-pointer\">\r\n                          <ReactToPrint\r\n                            trigger={() => (\r\n                              <p>\r\n                                <i className=\"fas fa-file-pdf\"></i>\r\n                              </p>\r\n                            )}\r\n                            content={() => componentRef.current}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className=\"download-table-xls-button\"\r\n                          table=\"table-to-xls\"\r\n                          filename=\"tablexls\"\r\n                          sheet=\"tablexls\"\r\n                          buttonText=\"Download as XLS\"/> */}\r\n\r\n                      {/* <Button onClick={onDownload}> Export excel </Button> */}\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          {loading ? (\r\n            <h2 className=\"text-center\">Loading...</h2>\r\n          ) : (\r\n            <div className=\"table-responsive mb-2\" ref={componentRef}>\r\n              <Table className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    <th>SL/NO</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone No</th>\r\n                    <th>Password</th>\r\n                    <th>Branch</th>\r\n                    <th>Parent Consultant</th>\r\n                    <th>Consultant Type</th>\r\n                    <th>Joining Date</th>\r\n                    <th>Account status</th>\r\n                    <th>Student</th>\r\n                    <th>Application</th>\r\n                    <th>Associates</th>\r\n                    <th style={{ width: \"8%\" }} className=\"text-center\">\r\n                      Action\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {consultantList?.map((consultant, i) => (\r\n                    <tr key={consultant?.id} style={{ textAlign: \"center\" }}>\r\n                      <th scope=\"row\">{serialNum + i}</th>\r\n\r\n                      <td style={{ width: \"10px\" }}>\r\n                        {consultant?.firstName} {consultant?.lastName}\r\n                      </td>\r\n                      <td>{consultant?.email}</td>\r\n                      <td>{consultant?.phoneNumber}</td>\r\n\r\n                      <td>\r\n                        <Link to=\"/\">Change</Link>\r\n                      </td>\r\n                      <td>{consultant?.branch?.name}</td>\r\n                      <td>{consultant?.parentConsultantName}</td>\r\n                      <td>{consultant?.consultantType?.name}</td>\r\n                      <td>{handleDate(consultant?.createdOn)}</td>\r\n                      <td>{consultant?.accountStatus?.statusName}</td>\r\n\r\n                      <td>\r\n                        <span\r\n                          className=\"badge badge-secondary\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          <Link\r\n                            style={{ textDecoration: \"none\" }}\r\n                            to={`/studentByConsultant/${consultant?.id}`}\r\n                          >\r\n                            {consultant?.studentCount}\r\n                          </Link>\r\n                        </span>\r\n                      </td>\r\n\r\n                      <td>\r\n                        {\" \"}\r\n                        <span\r\n                          className=\"badge badge-primary\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          {0}\r\n                        </span>{\" \"}\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <span\r\n                          className=\"badge badge-warning\"\r\n                          style={{ cursor: \"pointer\", textDecoration: \"none\" }}\r\n                        >\r\n                          <Link\r\n                            style={{ textDecoration: \"none\" }}\r\n                            to={`/associates/${consultant?.id}`}\r\n                          >\r\n                            {consultant?.childConsultantCount}\r\n                          </Link>\r\n                        </span>{\" \"}\r\n                      </td>\r\n\r\n                      <td style={{ width: \"8%\" }} className=\"text-center\">\r\n                        <ButtonGroup variant=\"text\">\r\n                          <LinkButton\r\n                            url={`/consultantProfile/${consultant?.id}`}\r\n                            color={\"primary\"}\r\n                            className={\"mx-1 btn-sm\"}\r\n                            icon={<i className=\"fas fa-eye\"></i>}\r\n                            permission={6}\r\n                          />\r\n\r\n                          <ButtonForFunction\r\n                            // func={()=>handleEdit(consultant)}\r\n                            color={\"dark\"}\r\n                            className={\"mx-1 btn-sm\"}\r\n                            icon={<i className=\"fas fa-edit\"></i>}\r\n                            permission={6}\r\n                          />\r\n\r\n                          {consultant?.id !== 1 ? (\r\n                            <ButtonForFunction\r\n                              color={\"danger\"}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              // func={()=> toggleDanger(consultant)}\r\n                              icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                              permission={6}\r\n                            />\r\n                          ) : // <Button color=\"danger\" className=\"mx-1 btn-sm\" disabled><i className=\"fas fa-trash-alt\"></i></Button>\r\n                          null}\r\n                        </ButtonGroup>\r\n                        {/* <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n                        <ModalBody>\r\n                          <p>Are You Sure to Delete this ? Once Deleted it can't be Undone!</p>\r\n                        </ModalBody>\r\n        \r\n                        <ModalFooter>\r\n                          <Button  color=\"danger\" onClick={handleDeleteData}>YES</Button>\r\n                          <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                        </ModalFooter>\r\n                     </Modal> */}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n\r\n          <Pagination\r\n            dataPerPage={dataPerPage}\r\n            totalData={entity}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConsultantByConsultant;\r\n"],"sourceRoot":""}