{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Consultant/AddConsultantType.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","onClick","body","authToken","Axios","post","rootUrl","res","response","status","history","push","put","AddConsultantType","useHistory","useState","modalOpen","setModalOpen","deleteModal","setDeleteModal","success","setSuccess","consultants","setConsultants","setConsultantType","postId","setPostId","consName","setConsName","addToast","useToasts","useEffect","get","then","console","log","closeModal","closeDeleteModal","localStorage","removeItem","length","isOpen","toggle","onSubmit","event","preventDefault","subdata","FormData","target","data","message","appearance","autoDismiss","action","id","defaultValue","row","md","placeholder","style","display","justifyContent","Ripple","textAlign","map","consultant","i","key","scope","consultantCount","setItem","getItem","remove"],"mappings":"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","file":"static/js/146.84ae45d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name}) => {\r\n    // const {className, icon} = props;\r\n\r\n    // console.log(className);\r\n    // console.log(url);\r\n\r\n    // console.log('Trying New Type of Props',func, className, icon, permission);\r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function put(url, body = {},authToken = \"\"){\r\n\r\n\r\n   \r\n   try {\r\n    const res = await Axios.put(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error.response.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n \r\n\r\n        throw error\r\n   }\r\n}\r\n\r\nexport default put\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router';\r\nimport { Card, CardBody, CardHeader,   Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table } from 'reactstrap';\r\n\r\n\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport { StoreUniversitytypeData } from '../../../redux/actions/SMS/UniversityAction/UniversityTypeAction';\r\nimport { Link } from 'react-router-dom';\r\nimport get from '../../../helpers/get';\r\nimport post from '../../../helpers/post';\r\n\r\nimport remove from '../../../helpers/remove';\r\nimport put from '../../../helpers/put';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\n\r\nconst AddConsultantType = () => {\r\n\r\n    const history = useHistory();\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [consultants, setConsultants] = useState([]);\r\n    const [consultantType,setConsultantType] = useState('');\r\n    const [postId, setPostId] = useState(0);\r\n    const [consName,setConsName] = useState('');\r\n\r\n    const { addToast } = useToasts();\r\n\r\n    useEffect(()=>{\r\n        get('ConsultantType/Index').then(res=>{\r\n            console.log(\"consultantList\", res);\r\n            setConsultants(res);\r\n        })\r\n    },[success])\r\n\r\n    // on Close Modal\r\n    const closeModal = () => {\r\n      setModalOpen(false);\r\n    }\r\n\r\n    const toggleDanger = (name,id) => {\r\n        localStorage.setItem('consTypeName',name)\r\n        localStorage.setItem('consTypeId',id)\r\n       \r\n        setDeleteModal(true)\r\n       }\r\n\r\n    // on Close Delete Modal\r\n    const closeDeleteModal = () => {\r\n       setDeleteModal(false);\r\n       localStorage.removeItem('consTypeName')\r\n       localStorage.removeItem('consTypeId')\r\n    }\r\n\r\n    const handleDeleteUniType = (id) => {\r\n        const returnValue = remove(`ConsultantType/Delete/${id}`).then((action)=> {\r\n          console.log(\"delRes\",action);\r\n          setDeleteModal(false);\r\n          setSuccess(!success);\r\n          // console.log(action);\r\n           addToast(action, {\r\n             appearance: 'error',\r\n             autoDismiss: true,\r\n           })\r\n           localStorage.removeItem('delUniTypeName')\r\n           localStorage.removeItem('delUniTypeId')\r\n        })\r\n      }\r\n\r\n      const handleUpdate = (type) => {\r\n        setModalOpen(true);\r\n        setConsultantType(type.name);\r\n        // localStorage.setItem('updateUni',type.id)\r\n        // console.log(type);\r\n        get(`ConsultantType/Get/${type}`)\r\n        .then(res=> {\r\n          setPostId(res.id);\r\n          setConsName(res.name);\r\n        }) \r\n      }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const subdata = new FormData(event.target);\r\n        \r\n        if(postId === 0){\r\n            post(`ConsultantType/Create`,subdata)\r\n            .then(res => {\r\n              addToast(res?.data?.message, {\r\n                appearance: 'success',\r\n                autoDismiss: true,\r\n              })\r\n              setModalOpen(false);\r\n              setSuccess(!success);\r\n            })\r\n        }\r\n        else{\r\n            put(`ConsultantType/Update`,subdata).then((action)=> {\r\n                setSuccess(!success);\r\n                setModalOpen(false)\r\n                addToast(action?.data?.message, {\r\n                  appearance: 'success',\r\n                  autoDismiss: true,\r\n                })\r\n                setConsultantType('');\r\n              })\r\n        }  \r\n      }\r\n\r\n    // redirect to dashboard\r\n    const backToDashboard = () => {\r\n     history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className='uapp-card-bg'>\r\n              <CardHeader className=\"page-header\">              \r\n                <h3 className=\"text-light\">Add Consultant Type</h3>\r\n                  <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard} className=\"text-light\">\r\n                    {\" \"} \r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                    </span>\r\n                  </div>             \r\n              </CardHeader>        \r\n            </Card>\r\n\r\n\r\n      <Card>\r\n        <CardHeader>\r\n\r\n          <ButtonForFunction \r\n            className={\"btn btn-uapp-add\"}\r\n            func={() => setModalOpen(true)}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={\" Add New\"}\r\n            permission={6}\r\n          />\r\n\r\n          <br/>\r\n         \r\n          <div> <b> Total <span className=\"badge badge-primary\">{consultants?.length}</span> Consultant Type Found </b></div>\r\n        </CardHeader>\r\n        \r\n        <CardBody>\r\n\r\n          <div>\r\n\r\n            <Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n              <ModalHeader>Add Consultant Type</ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                     <Input\r\n                        type=\"hidden\"\r\n                        name=\"id\"\r\n                        id=\"id\"\r\n                        defaultValue={postId}\r\n                      />\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>Consultant Type Name</span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        defaultValue={consName}\r\n                        \r\n                        placeholder=\"Create Consultant Type\"\r\n                        // onChange={(e) => setUniversityType(e.target.value)}\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                    <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={closeModal}>Close</Button>\r\n\r\n                    \r\n                    \r\n                      <Button.Ripple\r\n                        color=\"warning\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-3\"\r\n                       \r\n                      >\r\n                        Submit\r\n                      </Button.Ripple>\r\n\r\n                  \r\n\r\n                  </FormGroup>\r\n\r\n                </Form>\r\n              </ModalBody>\r\n\r\n            </Modal>\r\n            <div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"table-responsive\">\r\n          <Table className=\"table-sm table-bordered\" >\r\n          <thead className=\"thead-uapp-bg\">\r\n              <tr style={{ textAlign: \"center\" }}>\r\n                <th>SL/NO</th>\r\n                <th>Consultant Type Name</th>\r\n                <th>Count</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {\r\n                consultants?.map((consultant, i) => <tr key={consultant?.id} style={{ textAlign: \"center\" }}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{consultant?.name}</td>\r\n                  <td className=\"text-center\" >               \r\n                   {/* <Link to ={{\r\n                     pathname: '/universityList',\r\n                     universityType: uniType?.id,\r\n                     universityName: uniType?.name,\r\n\r\n                   }}> \r\n                   <span className=\"badge badge-pill badge-primary\"> {uniType?.universityCount} </span>\r\n                   </Link> */}\r\n                   <span className=\"badge badge-pill badge-primary\"> {consultant?.consultantCount} </span>\r\n                  </td>\r\n                  <td>\r\n                    \r\n                    <ButtonForFunction \r\n                      className={\"mx-1 btn-sm\"}\r\n                      func={() => toggleDanger(consultant?.name, consultant?.id)}\r\n                      color={\"danger\"}\r\n                      icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                      permission={6}\r\n                    />\r\n\r\n\r\n                    <ButtonForFunction \r\n                      func={()=> handleUpdate(consultant?.id)}\r\n                      className={\"mx-1 btn-sm\"}\r\n                      color={\"warning\"}\r\n                      icon={<i className=\"fas fa-edit\"></i>}\r\n                      permission={6}\r\n                    />\r\n\r\n\r\n                    <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this <b>{localStorage.getItem('consTypeName')}</b> ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={() => handleDeleteUniType(localStorage.getItem('consTypeId'))}>YES</Button>\r\n                        <Button onClick={closeDeleteModal}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                    </Modal>\r\n                  </td>\r\n                </tr>)\r\n              }\r\n\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n\r\n        </CardBody>\r\n      </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddConsultantType;"],"sourceRoot":""}