{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","views/SMS/Report/AgentReport.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AgentReport","JSON","parse","localStorage","getItem","useState","consultant","setConsultant","consultantLabel","setConsultantLabel","consultantValue","setConsultantValue","date","setDate","currentIntake","setCurrentIntake","intakeId","setIntakeId","reportData","setReportData","isShowCalender","setIsShowCalender","monthlyCardShow","setMonthlyCardShow","yearData","setYearData","yearLabel","setYearLabel","yearValue","setYearValue","history","useHistory","useEffect","get","then","res","console","log","id","yearOptions","map","year","label","value","consultantOption","c","Fragment","push","lg","md","sm","xs","options","onChange","opt","style","position","display","justifyContent","e","target","selectDate","intakeName","padding","fontSize","cursor","paddingRight","border","background","width","totalApplication","submittedToUniversity","unconditionalOffer","totalRegistered","totalRejected","paddingTop","consultantTotalAmount"],"mappings":"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","file":"static/js/296.6555b03c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  FormGroup,\r\n  Table,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Tooltip,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport ButtonForFunction from \"../Components/ButtonForFunction\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Select from \"react-select\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport get from \"../../../helpers/get\";\r\n\r\nconst AgentReport = () => {\r\n  const token = JSON.parse(localStorage.getItem(\"current_user\"));\r\n\r\n  const customStyles2 = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      background: \"#fff\",\r\n      borderColor: \"#9e9e9e\",\r\n      minHeight: \"33px\",\r\n      height: \"33px\",\r\n      boxShadow: state.isFocused ? null : null,\r\n      paddingBottom: \"20px\",\r\n    }),\r\n  };\r\n\r\n  const [month, setMonth] = useState([]);\r\n  const [monthLabel, setMonthLabel] = useState(\"Select Month\");\r\n  const [monthValue, setMonthValue] = useState(0);\r\n\r\n  // const [year, setYear] = useState([]);\r\n  // const [yearLabel, setYearLabel] = useState(\"Select Year\");\r\n  // const [yearValue, setYearValue] = useState(0);\r\n\r\n  const [consultant, setConsultant] = useState([]);\r\n  const [consultantLabel, setConsultantLabel] = useState(\"Select Consultant\");\r\n  const [consultantValue, setConsultantValue] = useState(0);\r\n\r\n  const [date, setDate] = useState('0001-01-01');\r\n  const [currentIntake, setCurrentIntake] = useState({});\r\n  const [intakeId, setIntakeId] = useState(0);\r\n  const [reportData, setReportData] = useState({});\r\n  const [isShowCalender, setIsShowCalender] = useState(false);\r\n  const [monthlyCardShow, setMonthlyCardShow] = useState(false);\r\n  const [yearData, setYearData] = useState([]);\r\n\r\n  const [yearLabel, setYearLabel] = useState(\r\n    \"Select Year\"\r\n  );\r\n  const [yearValue, setYearValue] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    get(\"ConsultantDD/index\").then((res) => {\r\n      setConsultant(res);\r\n      console.log(\"res\", res);\r\n    });\r\n\r\n    get(\"YearDD/Index\").then((res) => {\r\n      // setConsultant(res);\r\n      setYearData(res);\r\n      console.log(\"year\", res);\r\n    });\r\n\r\n    get(\"AccountIntake/GetCurrentAccountIntake\").then((res) => {\r\n      setCurrentIntake(res);\r\n      setIntakeId(res?.id);\r\n      console.log(\"intake\", res);\r\n    });\r\n\r\n    if(consultantValue != 0){\r\n      get(`Report/ProgressReport?consultantId=${consultantValue}&accountIntakeId=${intakeId}&day=${date}&MonthId=${0}&YearId=${0}`).then((res) => {\r\n        // setCurrentIntake(res);\r\n        setReportData(res);\r\n        console.log(\"reportttt\", res);\r\n      });\r\n    }\r\n  }, [consultantValue, intakeId, date]);\r\n\r\n  const yearOptions = yearData?.map((year) => ({\r\n    label: year.name,\r\n    value: year.id,\r\n  }));\r\n\r\n  const consultantOption = consultant?.map((c) => ({\r\n    label: c?.name,\r\n    value: c?.id,\r\n  }));\r\n\r\n  const selectConsultant = (label, value) => {\r\n    setConsultantLabel(label);\r\n    setConsultantValue(value);\r\n  };\r\n\r\n  // on clear\r\n  const handleClearSearch = () => {\r\n    setConsultantValue(0);\r\n    setConsultantLabel(\"Select Consultant\");\r\n    setReportData({});\r\n  };\r\n\r\n  const selectDate = (e) => {\r\n    setIsShowCalender(false);\r\n    console.log('selected date', e);\r\n    // const day = e.getDate();\r\n    // const month = e.getMonth() + 1;\r\n    // const year = e.getFullYear();\r\n  \r\n    console.log(\"dateee\", e.target.value);\r\n\r\n    setDate(e.target.value);\r\n\r\n    // const handleDate = e =>{\r\n    //   var datee = e;\r\n    //   console.log(\"dateeeeeee\", datee);\r\n    //   var utcDate = new Date(e);\r\n    //   var localeDate = utcDate.toLocaleString(\"en-CA\");\r\n    //   const x = localeDate.split(\",\")[0];\r\n    //   return x;\r\n    // }\r\n\r\n    // fetch('api/Report/DailyReport/' + this.state.agvalue + '/' + year + '/' + month + '/' + day)\r\n    //   .then(response => response.json())\r\n    //   .then(data => {\r\n    //     this.setState({ AppProgress: data, loading: false, date: e });\r\n    //     console.log('agent data by date', data)\r\n    //   });\r\n\r\n  }\r\n\r\n  const monthlyCardClose = () => {\r\n    setMonthlyCardShow(false);\r\n  }\r\n\r\n  // select Year\r\n  const selectYear = (label, value) => {\r\n    setYearLabel(label);\r\n    setYearValue(value);\r\n  };\r\n\r\n  const redirectToAddCommission = () => {\r\n    history.push(`/consultantCommission/${consultantValue}`);\r\n  }\r\n\r\n  const backToDashboard = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"animated fadeIn\">\r\n        <div className=\"uapp-dashboard\">\r\n          <div className=\"uapp-dashboard-activity\">\r\n            <Card className=\"uapp-card-bg\">\r\n              <CardHeader className=\"page-header\">\r\n                <h3 className=\"text-white\">Report</h3>\r\n                <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard} className=\"text-white\">\r\n                    {\" \"}\r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to\r\n                    Dashboard\r\n                  </span>\r\n                </div>\r\n              </CardHeader>\r\n            </Card>\r\n\r\n            <Card className=\"uapp-employee-search\">\r\n              <CardBody className=\"search-card-body\">\r\n                <Row className=\"mt-3\">\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                    <Select\r\n                      options={consultantOption}\r\n                      value={{\r\n                        label: consultantLabel,\r\n                        value: consultantValue,\r\n                      }}\r\n                      onChange={(opt) => selectConsultant(opt.label, opt.value)}\r\n                      name=\"consultantId\"\r\n                      id=\"consultantId\"\r\n                      // isDisabled={cId}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"calenderProperty\" style={{ position: 'relative' }}>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                    <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                      <div\r\n                        className=\"mt-1 mx-1 d-flex btn-clear\"\r\n                        onClick={handleClearSearch}\r\n                      >\r\n                        {/* <Icon.X  className='text-danger' />*/}\r\n                        <span className=\"text-danger\">\r\n                          <i className=\"fa fa-times\"></i> Clear\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            {/* Progress Report Card */}\r\n            {/* <div className=\"row\">\r\n              <div className=\"col-lg-12 col-md-12 col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <span>\r\n                      <h5 class=\"uapp-dachboard-head\">Progress Report</h5>\r\n                    </span>\r\n\r\n                    <Card className=\"mt-3\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between\">\r\n                        <div className=\"d-flex\">\r\n                          <span\r\n                            className=\"mt-1 me-1\"\r\n                            style={{ fontSize: \"16px\", fontWeight: \"500\" }}\r\n                          >\r\n                            Daily\r\n                          </span>\r\n                          <Input className=\"ms-1\" type=\"date\" />\r\n                        </div>\r\n\r\n                        <div className=\"d-flex\">\r\n                          <span\r\n                            className=\"mt-1 me-1\"\r\n                            style={{ fontSize: \"16px\", fontWeight: \"500\" }}\r\n                          >\r\n                            Monthly\r\n                          </span>\r\n                          <Select\r\n                            styles={customStyles2}\r\n                            value={{ label: monthLabel, value: monthValue }}\r\n                            className=\"ms-1\"\r\n                            name=\"UniversityTypeId\"\r\n                            id=\"UniversityTypeId\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"d-flex\">\r\n                          <span\r\n                            className=\"mt-1 me-1\"\r\n                            style={{ fontSize: \"16px\", fontWeight: \"500\" }}\r\n                          >\r\n                            Yearly\r\n                          </span>\r\n                          <Select\r\n                            styles={customStyles2}\r\n                            value={{ label: yearLabel, value: yearValue }}\r\n                            className=\"ms-1\"\r\n                            name=\"UniversityTypeId\"\r\n                            id=\"UniversityTypeId\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <hr />\r\n                    </Card>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n\r\n            <div className=\"row calenderProperty\" style={{ position: 'relative' }}>\r\n\r\n            <div className={isShowCalender === true ? 'calenderactive' : 'calenderdeactive'}>\r\n           \r\n              \r\n                <Row className=\"calender calender-repot-pop-up\">\r\n                  {/* <Col xs=\"12\" md=\"2\" className=\"mb-2\">\r\n                    <DatePicker\r\n                      id=\"selectbydate\" name=\"selectbydate\"\r\n                      placeholder=\"DD/MM/YYYY\"\r\n                      selected={date} \r\n                      placeholderText=\"Select by Date\"\r\n                      value={date}\r\n                      dateFormat='dd/MM/yyyy'\r\n                      onChange={(e) => selectDate(e)}\r\n                      // showYearDropdown\r\n                      //scrollableMonthYearDropdown\r\n                      peekNextMonth\r\n                      showMonthDropdown\r\n                      showYearDropdown\r\n                      dropdownMode=\"select\"\r\n                      inline\r\n                    />\r\n                  </Col> */}\r\n\r\n                        <FormGroup className=\"has-icon-left position-relative\">\r\n                            {/* <Col md=\"4\"> */}\r\n                            {/* <span>\r\n                            Start Date <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span> */}\r\n                            {/* </Col> */}\r\n                            {/* <Col md=\"8\"> */}\r\n                            <Input\r\n                            type='date'\r\n                            name='StartDate'\r\n                            id='StartDate'\r\n                            onChange={(e) => selectDate(e)}\r\n                            // defaultValue={handleDate(currUpdateData?.startDate)}\r\n                        \r\n                        \r\n                            />\r\n                            {/* </Col> */}\r\n                        </FormGroup>\r\n              \r\n                </Row>\r\n            </div>\r\n\r\n              <div className=\"col-lg-12 col-md-12 col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n\r\n                    {\r\n                      reportData !== false ?\r\n                      <div className=\"row\">\r\n                      <div className=\"col-lg-4\">\r\n                      <div className=\"uapp-progress-bar\">\r\n                            <Row>\r\n                              <Col>\r\n\r\n\r\n                                <div className=\"no-border\">\r\n                                  <div className=\"cardHeader1\">\r\n                                    <Row>\r\n                                      <Col>\r\n                                        <center>\r\n                                        <h5 \r\n                                        // onClick={() => this.selectbyIntake()} \r\n                                        className=\"uapp-dachboard-head\">\r\n                                           {\r\n                                            consultantValue != 0 ?\r\n                                              currentIntake?.intakeName\r\n                                              :\r\n                                              null\r\n                                           }\r\n                                          </h5>\r\n                                        </center>\r\n                                        </Col>\r\n                                      <Col>\r\n                                        <center>\r\n                                        <h5 \r\n                                          onClick={() => setIsShowCalender(!isShowCalender)}\r\n                                          className=\"uapp-dachboard-head\">Daily</h5>\r\n                                        </center>\r\n                                        </Col>\r\n                                      <Col>\r\n                                        <center>\r\n                                        <h5 \r\n                                        onClick={() => setMonthlyCardShow(true)}\r\n                                         className=\"uapp-dachboard-head\">Monthly</h5>\r\n                                        </center>\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </div>\r\n\r\n                                  {monthlyCardShow == true ?\r\n\r\n                                    <Card className=\"monthly-card\">\r\n                                      <div className=\"cardHeader1\" style={{ padding:\"5px 3px\"}}>\r\n                                        <Row>\r\n                                          <Col xs=\"8\">\r\n                                        <div className=\"controls app-search-filter\">\r\n                                          <Select \r\n                                            options={yearOptions}\r\n                                            value={{label: yearLabel, value: yearValue }}\r\n                                            onChange={opt => selectYear(opt.label, opt.value)}\r\n                                            />\r\n                                        </div>\r\n                                          </Col>\r\n                                          <Col xs=\"4\" className=\"text-right\">\r\n                                            <div onClick={monthlyCardClose} style={{ fontSize: \"27px\", color: \"#c10c0c\", cursor: \"pointer\", paddingRight:\"5px\" }}>\r\n                                              <i className=\"fa fa-times-circle\"></i>\r\n                                        </div>\r\n                                          </Col>\r\n                                          </Row>\r\n                                      </div>\r\n                                      <CardBody style={{border: \"1px solid #cbd4dd\"}}>\r\n                                        <div className=\"progress-month\">\r\n                                          <Nav className=\"row\">\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 1}\r\n                                                // onClick={() => { this.toggleMonth(1); }}\r\n                                              >\r\n                                                Jan\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 2}\r\n                                                // onClick={() => { this.toggleMonth(2); }}\r\n                                              >\r\n                                                Feb\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 3}\r\n                                                // onClick={() => { this.toggleMonth(3); }}\r\n                                              >\r\n                                                March\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 4}\r\n                                                // onClick={() => { this.toggleMonth(4); }}\r\n                                              >\r\n                                                April\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 5}\r\n                                                // onClick={() => { this.toggleMonth(5); }}\r\n                                              >\r\n                                                May\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 6}\r\n                                                // onClick={() => { this.toggleMonth(6); }}\r\n                                              >\r\n                                                June\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 7}\r\n                                                // onClick={() => { this.toggleMonth(7); }}\r\n                                              >\r\n                                                July\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 8}\r\n                                                // onClick={() => { this.toggleMonth(8); }}\r\n                                              >\r\n                                                Aug\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 9}\r\n                                                // onClick={() => { this.toggleMonth(9); }}\r\n                                              >\r\n                                                Sep\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 10}\r\n                                                // onClick={() => { this.toggleMonth(10); }}\r\n                                              >\r\n                                                Oct\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 11}\r\n                                                // onClick={() => { this.toggleMonth(11); }}\r\n                                              >\r\n                                                Nov\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                // active={this.state.activeMonth == 12}\r\n                                                // onClick={() => { this.toggleMonth(12); }}\r\n                                              >\r\n                                                Dec\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                          </Nav>\r\n                                        </div>\r\n                                      </CardBody>\r\n                                    </Card>\r\n                                     :\r\n                                    null\r\n                                    }\r\n\r\n                                  {/* {this.state.CardShow == true ?\r\n\r\n                                    <Card className=\"monthly-card\">\r\n                                      <CardHeader className=\"db-card-header no-border-bottom\" style={{ padding:\"5px 3px\"}}>\r\n                                        <Row>\r\n                                          <Col xs=\"8\">\r\n                                        <div className=\"controls app-search-filter\">\r\n                                          <Select \r\n                                            options={IntakeYear}\r\n                                            value={{label: this.state.ylable, value: this.state.yvalue }}\r\n                                            onChange={opt => this.selectyear(opt.label, opt.value)}\r\n                                            />\r\n                                        </div>\r\n                                          </Col>\r\n                                          <Col xs=\"4\" className=\"text-right\">\r\n                                            <div style={{ fontSize: \"27px\", color: \"#c10c0c\", cursor: \"pointer\", paddingRight:\"5px\" }}>\r\n                                              <i className=\"fa fa-times-circle\" onClick={this.monthlycardclose}></i>\r\n                                        </div>\r\n                                          </Col>\r\n                                          </Row>\r\n                                      </CardHeader>\r\n                                      <CardBody>\r\n                                        <div className=\"progress-month\">\r\n                                          <Nav className=\"row\">\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 1}\r\n                                                onClick={() => { this.toggleMonth(1); }}\r\n                                              >\r\n                                                Jan\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 2}\r\n                                                onClick={() => { this.toggleMonth(2); }}\r\n                                              >\r\n                                                Feb\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 3}\r\n                                                onClick={() => { this.toggleMonth(3); }}\r\n                                              >\r\n                                                March\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 4}\r\n                                                onClick={() => { this.toggleMonth(4); }}\r\n                                              >\r\n                                                April\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 5}\r\n                                                onClick={() => { this.toggleMonth(5); }}\r\n                                              >\r\n                                                May\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 6}\r\n                                                onClick={() => { this.toggleMonth(6); }}\r\n                                              >\r\n                                                June\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 7}\r\n                                                onClick={() => { this.toggleMonth(7); }}\r\n                                              >\r\n                                                July\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 8}\r\n                                                onClick={() => { this.toggleMonth(8); }}\r\n                                              >\r\n                                                Aug\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 9}\r\n                                                onClick={() => { this.toggleMonth(9); }}\r\n                                              >\r\n                                                Sep\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 10}\r\n                                                onClick={() => { this.toggleMonth(10); }}\r\n                                              >\r\n                                                Oct\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 11}\r\n                                                onClick={() => { this.toggleMonth(11); }}\r\n                                              >\r\n                                                Nov\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem className=\"col-6\">\r\n                                              <NavLink\r\n                                                active={this.state.activeMonth == 12}\r\n                                                onClick={() => { this.toggleMonth(12); }}\r\n                                              >\r\n                                                Dec\r\n                                              </NavLink>\r\n                                            </NavItem>\r\n                                          </Nav>\r\n                                        </div>\r\n                                      </CardBody>\r\n                                    </Card>\r\n                                     :\r\n                                    null\r\n                                  }  */}\r\n                                  \r\n                                  <CardBody>\r\n\r\n                                    <div className=\"mt-5\">\r\n                                      <div>\r\n\r\n                                        <div className='progress-chart'>\r\n                                          <div className='d-flex w-100'>\r\n                                            <div className=\"mr-2\" style={{ background: \"#24A1CD\", width: \"4%\" }}> </div>    <h6 className=\"mt-2 w-75\">   Total Application</h6> \r\n                                            <span className=\"w-20\"> {reportData.totalApplication}</span>\r\n                                          </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='progress-chart'>\r\n                                          <div className='d-flex w-100'>\r\n                                            <div className=\"mr-2\" style={{ background: \"#23CCB5\", width: \"4%\" }}> </div>    <h6 className=\"mt-2 w-75\">  Submitted to University  </h6> \r\n                                            <span className=\" w-20\"> {reportData.submittedToUniversity}</span>\r\n                                          </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='progress-chart'>\r\n                                          <div className='d-flex w-100'>\r\n                                            <div className=\"mr-2\" style={{ background: \"#AE75F8\", width: \"4%\" }}> </div>    <h6 className=\"mt-2 w-75\">  Unconditional Offer  </h6> \r\n                                            <span className=\"w-20\"> {reportData.unconditionalOffer}</span>\r\n                                          </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='progress-chart'>\r\n                                          <div className='d-flex w-100'>\r\n                                            <div className=\"mr-2\" style={{ background: \"#F7BD12\", width: \"4%\" }}> </div>\r\n                                            <h6 className=\"mt-2 w-75\"> Total Registered  </h6>\r\n                                            <span className=\"w-20\"> {reportData.totalRegistered}</span>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className='progress-chart'>\r\n                                          <div className='d-flex w-100'>\r\n                                            <div className=\"mr-2\" style={{ background: \"#F87675\", width: \"4%\" }}> </div>    <h6 className=\"mt-2 w-75\"> Total Rejected  </h6> \r\n                                            <span className=\"w-20\"> {reportData.totalRejected}</span>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                  </CardBody>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n                      </div>\r\n                      <div className=\"col-lg-4\">\r\n                            <div className=\"cardHeader1\">\r\n                            <center>\r\n                              <h5 \r\n                              // onClick={() => this.selectbyIntake()} \r\n                              className=\"uapp-dachboard-head\">Target Report</h5>\r\n                        </center>\r\n                            </div>\r\n                      </div>\r\n                      <div className=\"col-lg-4\">\r\n                       <div className=\"cardHeader1\">\r\n                        <center>\r\n                         <h5 \r\n                         // onClick={() => this.selectbyIntake()} \r\n                         className=\"uapp-dachboard-head\">Estimated Income</h5>\r\n                        </center>\r\n                       </div>\r\n\r\n                       <CardBody>\r\n                          <div className=\"text-center mb-3\">\r\n                            <h5 style={{ color: \"#1E98B0\" }}>\r\n                              {\r\n                               consultantValue !== 0 ?\r\n                                 currentIntake?.intakeName\r\n                                 :\r\n                                 null\r\n                              }\r\n                            </h5>\r\n                          </div>\r\n                          <div className=\"text-center posign-center\" style={{ paddingTop: \"30px\" }}>\r\n                            <div className=\"target-dot\">\r\n                              <span>&pound;  {\r\n                               consultantValue !== 0 ?\r\n                                 reportData?.consultantTotalAmount\r\n                                 :\r\n                                 0\r\n                              }</span>\r\n\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                        </CardBody>\r\n\r\n                      </div>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                      <center>\r\n                        <h6>The commission structure is not found for the selected consultant.</h6>\r\n                        <p className=\"mt-3\">Assign commission to the consultant :</p> \r\n                        <ButtonForFunction\r\n                          func={redirectToAddCommission}\r\n                          type={\"submit\"}\r\n                          className={\"mr-0 badge-primary\"}\r\n                          name={\"Assign Commission\"}\r\n                          // disable={buttonStatus}\r\n                    \r\n                         />\r\n                         \r\n                      </center>\r\n                    </div>\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AgentReport;\r\n"],"sourceRoot":""}