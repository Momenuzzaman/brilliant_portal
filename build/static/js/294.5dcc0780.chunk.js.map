{"version":3,"sources":["views/SMS/Demo/Demo.jsx","helpers/post.js"],"names":["Demo","useDispatch","useSelector","state","roleDataReducer","roles","useState","setFormType","label","options","value","useEffect","get","then","res","console","log","Axios","method","localStorage","getItem","values","map","x","c","Select","Option","OptGroup","className","style","width","AuthStr","url","body","axios","post","rootUrl","headers","response","status","history","push"],"mappings":";wNAwPeA,UAtOF,WACMC,cAEJC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBAAgBC,SAF1D,IAIA,EAAgCC,mBAAS,IAAzC,mBAAiBC,GAAjB,WAEA,EAA8CD,mBAC5C,0BADF,mBAGA,GAHA,UAGgDA,mBAAS,IAAzD,mBACA,GADA,UACqBA,mBAAS,CAC5B,CACEE,MAAO,UACPC,QAAS,CACP,CAAED,MAAO,oBAAqBE,MAAO,UACrC,CAAEF,MAAO,oBAAqBE,MAAO,YAGzC,CAAEF,MAAO,gBAAiBE,MAAO,UACjC,CAAEF,MAAO,sBAAuBE,MAAO,aATzC,6BAeAC,qBAAU,WAERC,YAAI,yBACHC,MAAK,SAAAC,GACJC,QAAQC,IAAI,eAAgBF,GAC5BP,EAAYO,MAGdG,IAAML,IAAN,uCAAiD,CAC/CM,OAAQ,MACV,QAAW,CAAE,cAAiBC,aAAaC,QAAQ,YAClDP,MAAK,SAAAC,GACJC,QAAQC,IAAI,WAAYF,QAkC1B,IA6DF,IAAML,EAAU,CACd,CACED,MAAO,KACPC,QAAS,CACP,CAAED,MAAO,QAASE,MAAO,KAI7B,CACEF,MAAO,MACPC,QAAS,CACP,CAAED,MAAO,SAAUE,MAAO,GAC1B,CAAEF,MAAO,UAAWE,MAAO,KAG/B,CACEF,MAAO,MACPC,QAAS,CACP,CAAED,MAAO,SAAUE,MAAO,MAO1BW,EAAM,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAASa,KAAI,SAACC,GAAD,YAAO,CACjCf,MAAK,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAGf,MACVE,MAAK,OAAEa,QAAF,IAAEA,GAAF,UAAEA,EAAGd,eAAL,aAAE,EAAYa,KAAI,SAACE,GAAD,MAAO,CAC5BhB,MAAK,OAAGgB,QAAH,IAAGA,OAAH,EAAGA,EAAGhB,MACXE,MAAK,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAGd,cAUdK,QAAQC,IAAI,+BAAgCK,GAMfI,IAArBC,OAAqBD,IAAbE,SAQhB,OAKD,yBAAKC,UAAU,iCAEhB,kBAAC,IAAD,CAAQnB,QAASA,EAASmB,UAAU,OAC/BC,MAAO,CACNC,MAAO,Y,s3MChNb,IAAMC,EAAUZ,aAAaC,QAAQ,S,4CAErC,WAAoBY,GAApB,8FAAyBC,EAAzB,+BAAgC,GAAhC,+BAAgD,GAAhD,kBAEsBC,IAAMC,KAAN,UAAcC,KAAd,OAAwBJ,GAAOC,EAAM,CACrDI,QAAS,CACP,cAAiBN,KAJzB,cAEUjB,EAFV,gBAOiBA,EAPjB,gFASoC,OAA5B,2CAAOwB,gBAAP,eAAiBC,SACnBC,IAAQC,KAAK,QAVnB,gE,sBAiBeN,I","file":"static/js/294.5dcc0780.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { UncontrolledTooltip, Button, Card, FormGroup } from 'reactstrap';\r\nimport get from '../../../helpers/get';\r\n\r\nimport post from '../../../helpers/post';\r\nimport { StoreCommentData } from '../../../redux/actions/SMS/DemoActions/DemoActions'\r\nimport { commentDataReducer } from '../../../redux/reducers/SMS/DemoReducers'\r\nimport { roleDataReducer } from '../../../redux/reducers/SMS/RoleReducer';\r\nimport rootUrl from '../../../constants/constants'\r\nimport { Select } from 'antd';\r\n\r\n\r\n\r\n\r\nconst Demo = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const role = useSelector((state) => state.roleDataReducer.roles)\r\n\r\n  const [formType, setFormType] = useState([]);\r\n\r\n  const [addressLineName, setAddressLineName] = useState(\r\n    \"Select Address Type...\"\r\n  );\r\n  const [addressLineValue, setAddressLineValue] = useState(0);\r\n  const [dat,setDat] = useState([\r\n    {\r\n      label: \"Group 1\",\r\n      options: [\r\n        { label: \"Group 1, option 1\", value: \"value1\" },\r\n        { label: \"Group 1, option 2\", value: \"value2\" }\r\n      ]\r\n    },\r\n    { label: \"A root option\", value: \"value3\" },\r\n    { label: \"Another root option\", value: \"value4\" }\r\n  ])\r\n\r\n\r\n \r\n  // Fetching get api\r\n  useEffect(()=>{\r\n\r\n    get('Practice/GetAttribute')\r\n    .then(res => {\r\n      console.log('dynamic form', res);\r\n      setFormType(res);\r\n    })\r\n\r\n    Axios.get(`http://192.168.0.10:45455/Test/index`,{ \r\n      method: 'GET',\r\n    'headers': { 'Authorization': localStorage.getItem('token') } })\r\n    .then(res => {\r\n      console.log('checking', res);\r\n    })\r\n\r\n\r\n  //   fetch('http://192.168.0.119:45455/Test/index',{\r\n  //     method: 'GET',\r\n  //     headers:{\r\n  //         'content-type' : 'application/json',\r\n  //         'token' : localStorage.getItem('token')\r\n\r\n  //     },\r\n    \r\n\r\n  // })\r\n  // .then(res => res.json())\r\n  // .then(data => {\r\n  //   console.log('checking', data);\r\n  // })\r\n\r\n//   fetch('http://192.168.0.119:45455/Account/GetCurrentUser',{\r\n//     method: 'GET',\r\n//     headers:{\r\n//         'content-type' : 'application/json',\r\n      \r\n\r\n//     }\r\n  \r\n\r\n// })\r\n// .then(res => res.json())\r\n// .then(data => {\r\n//   console.log('checking', data);\r\n// })\r\n  \r\n  },[]);\r\n\r\n  // const data = [\r\n    \r\n  //   {\r\n  //       id: 1,\r\n  //       name: 'Stokes'\r\n  //   },\r\n  //   {\r\n  //       id: 2,\r\n  //       name: 'butler'\r\n  //   },\r\n  //   {\r\n  //       id: 3,\r\n  //       name: 'root'\r\n  //   },\r\n  //   {\r\n  //       id: 4,\r\n  //       name: 'bairstow'\r\n  //   }\r\n    \r\n  //   ]\r\n\r\n    // const addressLineOpt = dat?.map((add) => ({\r\n    //   label: add.name,\r\n    //   value: add.id,\r\n    // }));\r\n\r\n\r\n      // select Address Line\r\n  // const selectAddressLine = (label, value) => {\r\n  //   setAddressLineName(label);\r\n  //   setAddressLineValue(value);\r\n\r\n  //   const newDat = dat.filter((label,value) => dat?.name !== label && dat?.id !== value );\r\n    \r\n  //   setDat(newDat);\r\n  //   console.log(newDat);\r\n \r\n   \r\n  \r\n\r\n  // console.log('Practising a new thing',dat);\r\n\r\n// const handleSubmit  = (event) => {\r\n\r\n//   event.preventDefault();\r\n\r\n//   const subdata = new FormData(event.target);\r\n\r\n//   for (var x of subdata.values()){\r\n//     console.log(x);\r\n//   }\r\n\r\n// }\r\n\r\n\r\n\r\n  // Fetching post api\r\n \r\n\r\n  const options = [\r\n    {\r\n      label: \"Bd\",\r\n      options: [\r\n        { label: \"Dhaka\", value: 1 },\r\n       \r\n      ]\r\n    },\r\n    {\r\n      label: \"Eng\",\r\n      options: [\r\n        { label: \"London\", value: 2 },\r\n        { label: \"Bristol\", value: 3}\r\n      ]\r\n    },\r\n    {\r\n      label: \"Aus\",\r\n      options: [\r\n        { label: \"Sydney\", value: 4 },\r\n        \r\n      ]\r\n    },\r\n   \r\n  ];\r\n\r\n  const values = options?.map((x)=> ({\r\n    label: x?.label,\r\n    value: x?.options?.map((c)=> ({\r\n      label : c?.label,\r\n      value: c?.value\r\n    }))\r\n  }))\r\n    \r\n\r\n  // const newValues = values.b.map((y) => ({\r\n  //   e: y.label,\r\n  //   f: y.value\r\n  // }))\r\n\r\n  console.log('mapping object from optGroup', values);\r\n\r\n  \r\n\r\n  // console.log('second mapping for inner array', values?.b);\r\n\r\n  const { Option, OptGroup } = Select;\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n   \r\n    \r\n <div className='d-flex justify-content-center'>\r\n\r\n<Select options={options} className='me-2'\r\n     style={{\r\n      width: '25%',\r\n   \r\n    }}\r\n    />\r\n\r\n\r\n\r\n{/* <Select\r\nclassName='ms-2'\r\n    defaultValue=\"lucy\"\r\n    style={{\r\n      width: '25%',\r\n   \r\n    }}\r\n    onChange={handleChange}\r\n  >\r\n    <OptGroup label=\"Manager\">\r\n      <Option value=\"jack\">Jack</Option>\r\n      <Option value=\"lucy\">Lucy</Option>\r\n    </OptGroup>\r\n    <OptGroup label=\"Engineer\">\r\n      <Option value=\"Yiminghe\">yiminghe</Option>\r\n    </OptGroup>\r\n  </Select> */}\r\n\r\n </div>\r\n    \r\n\r\n      \r\n      \r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Demo;\r\n","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n"],"sourceRoot":""}