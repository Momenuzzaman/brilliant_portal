{"version":3,"sources":["views/SMS/UniversitySubjects/ProgramLevel.jsx","redux/actions/SMS/UniversitySubject/ProgramLevelAction.js","views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Search/Loader/Loader.js"],"names":["connect","state","allprogramLevelList","programLevelDataReducer","programLevelList","props","history","useHistory","dispatch","useDispatch","useState","modalOpen","setModalOpen","deleteModal","setDeleteModal","success","setSuccess","addToast","useToasts","programLevel","setProgramLevel","description","setDescription","levelValue","setLevelValue","loading","setLoading","ProgramId","setProgramId","ProgramName","setProgramName","undefined","programLvlId","setProgramLvlId","buttonStatus","setButtonStatus","permissions","JSON","parse","localStorage","getItem","closeModal","useEffect","get","then","action","type","payload","closeDeleteModal","Loader","Card","className","CardHeader","onClick","push","includes","permissionList","Add_New_program_level","ButtonForFunction","func","icon","name","permission","length","CardBody","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","event","preventDefault","subData","FormData","target","put","data","message","appearance","autoDismiss","post","id","value","FormGroup","row","Col","md","Input","required","onChange","e","placeholder","rows","min","style","display","justifyContent","Button","color","disable","Table","textAlign","map","program","i","key","scope","ButtonGroup","Update_program_level_info","Delete_program_level","ModalFooter","remove","handleDeleteProgram","disabled","url","AuthStr","body","axios","rootUrl","headers","res","response","status","Axios","src","loader"],"mappings":"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","file":"static/js/252.2077247b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, ButtonGroup } from 'reactstrap';\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from 'react-redux';\r\nimport {StoreProgramLevelData} from '../../../redux/actions/SMS/UniversitySubject/ProgramLevelAction';\r\nimport post from '../../../helpers/post';\r\nimport get from '../../../helpers/get';\r\nimport remove from '../../../helpers/remove';\r\nimport put from '../../../helpers/put';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\nimport Loader from '../Search/Loader/Loader';\r\nimport { permissionList } from '../../../constants/AuthorizationConstant';\r\n\r\nconst ProgramLevel=(props)=>{\r\n    const programLevelList = props.allprogramLevelList[0];\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [programLevel,setProgramLevel] = useState('');\r\n    const [programValue,setProgramValue] = useState(0);\r\n    const [description,setDescription] = useState('');\r\n    const [levelValue, setLevelValue] = useState(\"Type Level Value\");\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    const [ProgramId, setProgramId] = useState(0);\r\n    const [ProgramName, setProgramName] = useState('');\r\n\r\n    const [programLvlId, setProgramLvlId] = useState(undefined);\r\n    const [buttonStatus,setButtonStatus] = useState(false);\r\n    const permissions = JSON.parse(localStorage.getItem('permissions')); \r\n    \r\n     // redirect to dashboard\r\n     const backToDashboard = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n// on Close Modal\r\nconst closeModal = () => {\r\n    setModalOpen(false);\r\n    setProgramLvlId(undefined);\r\n    // localStorage.removeItem('ProgramId');\r\n    setProgramLevel('');\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const subData = new FormData(event.target);\r\n\r\n    // for(var i of subData){\r\n\r\n    // }\r\n\r\n    // const subdata = {\r\n    //   name: programLevel,\r\n    //   description:description,\r\n    //   levelValue: levelValue\r\n    // }\r\n\r\n      \r\n        if(programLvlId != undefined){\r\n          setButtonStatus(true);\r\n          const returnvalue = put(`ProgramLevel/Update`,subData).then((action)=> {\r\n            setButtonStatus(false);\r\n            setSuccess(!success);\r\n            setModalOpen(false)\r\n            addToast(action?.data?.message, {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n            })\r\n            setProgramLevel('');\r\n            setDescription('');\r\n            setLevelValue(\"Type Level Value\");\r\n          //  localStorage.removeItem('ProgramName')\r\n          //  localStorage.removeItem('ProgramId')\r\n          setProgramLvlId(undefined);\r\n        \r\n          })\r\n        }\r\n        else{\r\n          setButtonStatus(true);\r\n          const returnValue = post(`ProgramLevel/Create`,subData).then((action)=>{\r\n            setButtonStatus(false);\r\n            setSuccess(!success)\r\n            setModalOpen(false)\r\n            addToast(action?.data?.message, {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n            })\r\n            setProgramLevel('');\r\n            setDescription('');\r\n            setLevelValue(\"Type Level Value\");\r\n        });\r\n        }\r\n      \r\n  }\r\n\r\n  useEffect(()=> {\r\n    const returnValue = get(`ProgramLevel/Index`).then((action)=>{\r\n    \r\n        dispatch(StoreProgramLevelData(action))\r\n        setLoading(false);\r\n      });\r\n  },[success])\r\n\r\n  \r\nconst handleUpdate = (type) => {\r\n    setModalOpen(true);\r\n    setProgramLevel(type?.name);\r\n    setDescription(type?.description);\r\n    setLevelValue(type?.levelValue);\r\n    setProgramLvlId(type?.id);\r\n    // localStorage.setItem('ProgramId',type?.id)   \r\n  }\r\n\r\n  const toggleDanger = (name,id) => {\r\n    setProgramName(name);\r\n    setProgramId(id);\r\n    setDeleteModal(true)\r\n   }\r\n   // on Close Delete Modal\r\nconst closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    setProgramName('');\r\n    setProgramId(0);\r\n  \r\n  }\r\n\r\n  const handleDeleteProgram = (id) => {\r\n    setButtonStatus(true);\r\n    const returnValue = remove(`ProgramLevel/Delete/${id}`).then((action)=> {\r\n      setButtonStatus(false);\r\n      setDeleteModal(false);\r\n      setSuccess(!success);\r\n      \r\n       addToast(action, {\r\n         appearance:  'error',\r\n         autoDismiss: true,\r\n       })\r\n       setProgramName('');\r\n       setProgramId(0);\r\n    })\r\n  }\r\n\r\n  // const handleUpdateSubmit = () => {\r\n  //   const id = localStorage.getItem('ProgramId');\r\n  //   const subData = {\r\n  //     id: id,\r\n  //     name: programLevel,\r\n  //     description:description,\r\n  //     levelValue: levelValue\r\n  //   }\r\n  //  const returnvalue = put(`ProgramLevel/Update`,subData).then((action)=> {\r\n  //     setSuccess(!success);\r\n  //     setModalOpen(false)\r\n  //     addToast(action?.data?.message, {\r\n  //       appearance: 'success',\r\n  //       autoDismiss: true,\r\n  //     })\r\n  //     setProgramLevel('');\r\n  //     setDescription('');\r\n  //     setLevelValue(\"Type Level Value\");\r\n  //    localStorage.removeItem('ProgramName')\r\n  //    localStorage.removeItem('ProgramId')\r\n  \r\n  //   })\r\n  \r\n  \r\n  // }\r\n\r\n\r\nconst AddModalOpen= () => {\r\n    setModalOpen(true);\r\n    setProgramLevel('');\r\n    setDescription('');\r\n    setLevelValue(\"Type Level Value\");\r\n    setProgramLvlId(undefined);\r\n    // localStorage.removeItem('ProgramId')\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        {\r\n          loading ?\r\n          <Loader/>\r\n          :\r\n          <>\r\n          <Card className=\"uapp-card-bg\">\r\n          <CardHeader className=\"page-header\">             \r\n             <h3 className=\"text-white\">Program Level List</h3>\r\n              <div className=\"page-header-back-to-home\">\r\n                 <span onClick={backToDashboard} className=\"text-white\"> <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard</span>\r\n              </div>             \r\n          </CardHeader>      \r\n        </Card>\r\n\r\n\r\n    <Card>\r\n        <CardHeader>\r\n\r\n          {\r\n            permissions?.includes(permissionList?.Add_New_program_level) ?\r\n            <ButtonForFunction\r\n            className={\"btn btn-uapp-add\"}\r\n            func={AddModalOpen}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={\" Add Program Level\"}\r\n            permission={6}\r\n          />\r\n          :null\r\n          }\r\n\r\n              <div> <b> Total <span className=\"badge badge-primary\"> {programLevelList?.length}</span> Program Level  Found </b></div>\r\n        </CardHeader>\r\n         <CardBody>\r\n\r\n         <div>\r\n\r\n<Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n<ModalHeader>Program Level </ModalHeader>\r\n<ModalBody>\r\n<Form onSubmit={handleSubmit}>\r\n\r\n  {\r\n    programLvlId != undefined ?\r\n    <input\r\n      type='hidden'\r\n      name='id'\r\n      id='id'\r\n      value={programLvlId}\r\n    />\r\n        :\r\n        null\r\n  }\r\n\r\n  <FormGroup row className=\"has-icon-left position-relative\">\r\n    <Col md=\"4\">\r\n      <span>Program Level Name <span className=\"text-danger\">*</span>{\" \"}</span>\r\n    </Col>\r\n    <Col md=\"8\">\r\n      <Input\r\n        type=\"text\"\r\n        required\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={programLevel}\r\n        onChange={(e) => \r\n          setProgramLevel(e.target.value)\r\n        }\r\n        placeholder=\"Enter Program Level\"\r\n      />\r\n\r\n    </Col>\r\n  </FormGroup>\r\n  <FormGroup row className=\"has-icon-left position-relative\">\r\n              <Col md=\"4\">\r\n              <span>Description <span className=\"text-danger\">*</span>{\" \"}</span>\r\n              </Col>\r\n              <Col md=\"8\">\r\n                   <Input\r\n                   type=\"textarea\"\r\n                   required\r\n                  name=\"Description\"\r\n                  id=\"Description\"\r\n                  rows=\"3\"\r\n                  value={description}\r\n                  placeholder=\"Enter Description\"\r\n                   onChange={e => \r\n                    setDescription(e.target.value)\r\n                  }\r\n                />\r\n                \r\n             </Col>\r\n      </FormGroup>\r\n\r\n      <FormGroup row className=\"has-icon-left position-relative\">\r\n    <Col md=\"4\">\r\n      <span>Level Value <span className=\"text-danger\">*</span>{\" \"}</span>\r\n    </Col>\r\n    <Col md=\"8\">\r\n      <Input\r\n        type=\"number\"\r\n        min=\"0\"\r\n        name=\"levelValue\"\r\n        id=\"levelValue\"\r\n        placeholder='Enter Level Value'\r\n        value={levelValue}\r\n        onChange={(e) => \r\n          setLevelValue(e.target.value)\r\n        }\r\n       \r\n      />\r\n\r\n    </Col>\r\n  </FormGroup>\r\n\r\n  <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n    <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={closeModal}>Close</Button>\r\n\r\n    {/* {\r\n    localStorage.getItem(\"ProgramId\") ?\r\n      <Button color=\"primary\" onClick={handleUpdateSubmit}  className=\"mr-1 mt-3\">Update</Button> : */}\r\n      {/* <Button.Ripple\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        className=\"mr-1 mt-3\"\r\n      >\r\n        Submit\r\n      </Button.Ripple> */}\r\n\r\n      <ButtonForFunction\r\n        color={\"primary\"}\r\n        type={\"submit\"}\r\n        className={\"mr-1 mt-3\"}\r\n        name={\"Submit\"}\r\n        permission={6}\r\n        disable={buttonStatus}\r\n      />\r\n\r\n  {/* } */}\r\n\r\n  </FormGroup>\r\n\r\n</Form>\r\n</ModalBody>\r\n\r\n</Modal>\r\n<div>\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n<div className=\"table-responsive\">\r\n      <Table className=\"table-sm table-bordered\">\r\n      <thead className=\"thead-uapp-bg\">\r\n          <tr style={{ textAlign: \"center\" }}>\r\n            <th>SL/NO</th>\r\n            <th>Name</th>\r\n            <th>Description</th>            \r\n            <th>Level Value</th>            \r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n          {\r\n            programLevelList?.map(( program, i) => <tr key={ program.id} style={{ textAlign: \"center\" }}>\r\n              <th scope=\"row\">{i + 1}</th>\r\n              <td>{ program?.name}</td>\r\n              <td>{ program?.description}</td>\r\n              <td>{ program?.levelValue}</td>\r\n              <td>\r\n\r\n                <ButtonGroup>\r\n\r\n                {/* <Button className=\"mx-1 btn-sm\" onClick={() => toggleDanger( program.name,  program.id)} color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n\r\n                {\r\n            permissions?.includes(permissionList?.Update_program_level_info) ?\r\n                <ButtonForFunction\r\n                  func={()=> handleUpdate( program)}\r\n                  className={\"mx-1 btn-sm\"}\r\n                  color={\"warning\"}\r\n                  icon={<i className=\"fas fa-edit\"></i>}\r\n                  permission={6}\r\n                />\r\n                :\r\n                null}\r\n                \r\n                {\r\n            permissions?.includes(permissionList?.Delete_program_level) ?\r\n                <ButtonForFunction\r\n                  className={\"mx-1 btn-sm\"}\r\n                  func={() => toggleDanger( program?.name,  program?.id)}\r\n                  color={\"danger\"}\r\n                  icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                  permission={6}\r\n                />\r\n                :\r\n                null}\r\n\r\n                {/* <Button onClick={()=> handleUpdate( program)} className=\"mx-1 btn-sm\" color=\"warning\"><i className=\"fas fa-edit\"></i></Button> */}\r\n\r\n              \r\n\r\n               </ButtonGroup>\r\n\r\n\r\n                <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n\r\n                  <ModalBody>\r\n                    <p>Are You Sure to Delete this <b>{ProgramName}</b> ? Once Deleted it can't be Undone!</p>\r\n                  </ModalBody>\r\n\r\n                  <ModalFooter>\r\n                    <Button color=\"danger\" onClick={() => handleDeleteProgram(ProgramId)} disabled={buttonStatus}>YES</Button>\r\n                    <Button onClick={closeDeleteModal}>NO</Button>\r\n                  </ModalFooter>\r\n\r\n                </Modal>\r\n              </td>\r\n            </tr>)\r\n          }\r\n\r\n        </tbody>\r\n      </Table>\r\n      </div>\r\n\r\n     </CardBody>\r\n  </Card>\r\n          </>\r\n        }\r\n    </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    allprogramLevelList: state.programLevelDataReducer.programLevelList\r\n  \r\n})\r\nexport default connect(mapStateToProps)(ProgramLevel);","import React from 'react'\r\n\r\n\r\nexport const StoreProgramLevelData = (data) => {\r\n\r\n  return {\r\n    type: 'StoreProgramLevelData',\r\n    payload: data\r\n  }\r\n}","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport loader from '../../../../assets/img/load.gif'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <img className='img-fluid' src={loader} />\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;"],"sourceRoot":""}