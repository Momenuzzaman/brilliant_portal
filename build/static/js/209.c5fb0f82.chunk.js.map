{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Components/LinkSpanButton.js","views/SMS/University/AddUniversityType.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","LinkSpanButton","props","data","datass","includes","to","connect","state","univerSityTypeList","universityTypeDataReducer","universityTypes","console","log","useState","setUniTypeId","setUniversityType","useHistory","dispatch","useDispatch","modalOpen","setModalOpen","success","setSuccess","addToast","useToasts","universityList","setUniversityList","updateState","setUpdateState","useEffect","get","then","action","id","StoreUniversitytypeData","closeModal","length","isOpen","toggle","onSubmit","event","preventDefault","subdata","FormData","target","message","appearance","autoDismiss","row","defaultValue","md","placeholder","onChange","e","value","style","display","justifyContent","Ripple","textAlign","map","uniType","i","key","scope","pathname","universityType","universityName","universityCount"],"mappings":"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","file":"static/js/209.c5fb0f82.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error.response.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkSpanButton = (props) => {\r\n    const {url, className, icon, permission, name, data} = props;\r\n    \r\n\r\n    const datass = [1,2,3,4,6];\r\n\r\n    return (\r\n        <>\r\n          {\r\n            datass?.includes(permission) ?\r\n            <Link className={className} to={url}>\r\n                <span>\r\n                   {data}\r\n                </span>\r\n            </Link>\r\n            :\r\n            null\r\n          }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkSpanButton;","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router';\r\nimport { Card, CardBody, CardHeader,   Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table } from 'reactstrap';\r\n\r\n\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport { StoreUniversitytypeData } from '../../../redux/actions/SMS/UniversityAction/UniversityTypeAction';\r\nimport { Link } from 'react-router-dom';\r\nimport get from '../../../helpers/get';\r\nimport post from '../../../helpers/post';\r\n\r\nimport remove from '../../../helpers/remove';\r\nimport put from '../../../helpers/put';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\nimport LinkSpanButton from '../Components/LinkSpanButton';\r\n\r\n\r\nconst AddUniversityType = (props) => {\r\n\r\n  const universityTypes = props.univerSityTypeList[0];\r\n  console.log(\"uniType\", universityTypes);\r\n  const [uniTypeId, setUniTypeId] = useState(0);\r\n  const [universityType,setUniversityType] = useState('');\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const [universityList, setUniversityList] = useState([]);\r\n  // const [postId, setPostId] = useState(0);\r\n  const [updateState, setUpdateState] = useState({});\r\n\r\n  // const [uName,setUName] = useState('');\r\n\r\n\r\n//  const onEditorStateChange = (editorState) => {\r\n\r\n//     setEditorState(editorState)\r\n//     setRawContent(convertToRaw(editorState.getCurrentContent()).blocks[0].text);\r\n//     setRawContent(draftToHtml(convertToRaw(editorState.getCurrentContent())))\r\n//   };\r\n\r\n\r\n\r\nuseEffect(()=> {\r\n   get(`UniversityType/Index`).then((action)=>{\r\n    \r\n    setUniversityList(action);\r\n    setUniTypeId(action?.id);\r\n   \r\n      dispatch(StoreUniversitytypeData(action))\r\n    });\r\n\r\n\r\n\r\n},[success])\r\n\r\nconst handleSubmit = (event) => {\r\n\r\n\r\n  event.preventDefault();\r\n\r\n  // const subdata = {\r\n  //   name: universityType\r\n  // }\r\n\r\n\r\n  const subdata = new FormData(event.target);\r\n  // for (const vale of subdata.values())\r\n  // {\r\n  //   console.log(vale);\r\n\r\n  // }\r\n  \r\n  if(!updateState?.id){\r\n    // setUName('');\r\n    setUpdateState({});\r\n    post(`UniversityType/Create`,subdata)\r\n  .then(res => {\r\n    setSuccess(!success);\r\n    addToast(res?.data?.message, {\r\n      appearance: 'success',\r\n      autoDismiss: true,\r\n    })\r\n    setModalOpen(false);\r\n    setUniversityType('');\r\n    setUpdateState({});\r\n  })\r\n  }\r\n\r\n  else{\r\n    // setUName('');\r\n    put(`UniversityType/Update`,subdata).then((action)=> {\r\n      setSuccess(!success);\r\n      setModalOpen(false)\r\n      addToast(action?.data?.message, {\r\n        appearance: 'warning',\r\n        autoDismiss: true,\r\n      })\r\n      setUpdateState({});\r\n      // setPostId(0);\r\n    //  localStorage.removeItem('updateUni')\r\n  \r\n    })\r\n  }\r\n}\r\n\r\nconst handleUpdate = (type) => {\r\n  setModalOpen(true);\r\n  setUniversityType(type.name);\r\n  // localStorage.setItem('updateUni',type.id)\r\n  console.log(type);\r\n  setUpdateState(type);\r\n   \r\n}\r\n\r\nconst handleUpdateSubmit = (e) => {\r\n  e.preventDefault();\r\n\r\n  // const id = localStorage.getItem('updateUni');\r\n\r\n  // const subData = {\r\n    \r\n  //   name: universityType\r\n  // }\r\n  const subData = new FormData(e.target)\r\n  // for (const val of subData.values()){\r\n  //   console.log(val);\r\n\r\n  // }\r\n\r\n\r\n\r\n  post(`UniversityType/Update`,subData).then((action)=> {\r\n    setSuccess(!success);\r\n    setModalOpen(false)\r\n    addToast(action, {\r\n      appearance: action == 'University Type Updated Successfully' ? 'success': 'error',\r\n      autoDismiss: true,\r\n    })\r\n    setUniversityType('');\r\n  //  localStorage.removeItem('updateUni')\r\n\r\n  })\r\n\r\n\r\n}\r\n\r\nconst handleDeleteUniType = (id) => {\r\n  const returnValue = remove(`UniversityType/Delete/${id}`).then((action)=> {\r\n    setDeleteModal(false);\r\n    setSuccess(!success);\r\n    // console.log(action);\r\n     addToast(action, {\r\n       appearance: 'error',\r\n       autoDismiss: true,\r\n     })\r\n     localStorage.removeItem('delUniTypeName')\r\n     localStorage.removeItem('delUniTypeId')\r\n  })\r\n}\r\n\r\n\r\nconst toggleDanger = (name,id) => {\r\n localStorage.setItem('delUniTypeName',name)\r\n localStorage.setItem('delUniTypeId',id)\r\n\r\n setDeleteModal(true)\r\n}\r\n\r\n// on Close Modal\r\nconst closeModal = () => {\r\n  setModalOpen(false);\r\n  setUpdateState({});\r\n}\r\n\r\n// on Close Delete Modal\r\nconst closeDeleteModal = () => {\r\n  setDeleteModal(false);\r\n  localStorage.removeItem('delUniTypeName')\r\n     localStorage.removeItem('delUniTypeId')\r\n\r\n}\r\n\r\n     // redirect to dashboard\r\n   const backToDashboard = () => {\r\n    history.push(\"/\")\r\n}\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Card className='uapp-card-bg'>\r\n              <CardHeader className=\"page-header\">              \r\n                <h3 className=\"text-light\">University Types</h3>\r\n                  <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard} className=\"text-light\">\r\n                    {\" \"} \r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                    </span>\r\n                  </div>             \r\n              </CardHeader>        \r\n            </Card>\r\n\r\n          {/* old header design if need future */}\r\n            {/* <Card>\r\n              <CardHeader className=\"page-header\">              \r\n                <h3>Add University Type</h3>\r\n                  <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard}> <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard</span>\r\n                  </div>             \r\n              </CardHeader>        \r\n            </Card> */}\r\n         \r\n\r\n\r\n            {/* <Card>\r\n\r\n                <CardBody>\r\n\r\n                <Form>\r\n\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n\r\n\r\n                    <Col md=\"2\">\r\n                      <span>University Description</span>\r\n                    </Col>\r\n\r\n                  \r\n                    <Col md=\"12\">\r\n\r\n                    <Editor\r\n                    \r\n                        editorState={editorState}\r\n                        wrapperClassName=\"demo-wrapper\"\r\n                        editorClassName=\"demo-editor\"\r\n                        onEditorStateChange={onEditorStateChange}\r\n                        toolbarClassName=\"toolbar-class\"\r\n                    />\r\n                    <textarea\r\n                        disabled\r\n                        value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n                        />\r\n\r\n                    </Col>\r\n\r\n                  </FormGroup>\r\n\r\n\r\n                  </Form>\r\n\r\n                </CardBody>\r\n\r\n            </Card> */}\r\n\r\n      <Card>\r\n        <CardHeader>\r\n\r\n          {/* <ButtonForFunction\r\n            className={\"btn btn-uapp-add\"}\r\n            func={() => setModalOpen(true)}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={\" Add New\"}\r\n            permission={6}\r\n          /> */}\r\n\r\n          <br/>\r\n         \r\n          <div> <b> Total <span className=\"badge badge-primary\">{universityList.length}</span> University Type Found </b></div>\r\n        </CardHeader>\r\n        \r\n        <CardBody>\r\n        <Link to ='/newform'>\r\n        {/* <Button className=\"btn btn-danger mt-2 mb-4\" > <i className=\"fas fa-plus\"></i>  Add New Page</Button> */}\r\n        </Link>\r\n\r\n          <div>\r\n\r\n            <Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n              <ModalHeader>Add University Type</ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                   \r\n                  \r\n                      {\r\n                        (updateState?.id) ?\r\n                        <Input\r\n                        type=\"hidden\"\r\n                        name=\"id\"\r\n                        id=\"id\"\r\n                        defaultValue={updateState?.id} \r\n                      />\r\n                      :\r\n                      null\r\n                      }\r\n\r\n                   \r\n                  </FormGroup>\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>Name</span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        defaultValue={updateState?.name}\r\n                        \r\n                        placeholder=\"Create University Type\"\r\n                        onChange={(e) => setUniversityType(e.target.value)}\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                    <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={closeModal}>Close</Button>\r\n\r\n                    \r\n                    {/* localStorage.getItem(\"updateUni\") ? */}\r\n                      {/* <Button color=\"warning\" className=\"mr-1 mt-3\" onClick={handleUpdateSubmit}>Update</Button> : */}\r\n                      <Button.Ripple\r\n                        color=\"warning\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-3\"\r\n                       \r\n                      >\r\n                        Submit\r\n                      </Button.Ripple>\r\n\r\n                  \r\n\r\n                  </FormGroup>\r\n\r\n                </Form>\r\n              </ModalBody>\r\n\r\n            </Modal>\r\n            <div>\r\n\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"table-responsive\">\r\n          <Table className=\"table-sm table-bordered\" >\r\n          <thead className=\"thead-uapp-bg\">\r\n              <tr style={{ textAlign: \"center\" }}>\r\n                <th>SL/NO</th>\r\n                <th>Name</th>\r\n                <th className=\"text-center\" >Universities</th>\r\n                {/* <th>Action</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {\r\n                universityTypes?.map((uniType, i) => <tr key={uniType.id} style={{ textAlign: \"center\" }}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{uniType?.name}</td>\r\n                  <td className=\"text-center\" >               \r\n                   {/* <Link to ={{\r\n                     pathname: '/universityList',\r\n                     universityType: uniType?.id,\r\n                     universityName: uniType?.name,\r\n\r\n                   }}> \r\n                   <span className=\"badge badge-pill badge-primary\"> {uniType?.universityCount} </span>\r\n                   </Link> */}\r\n\r\n                    <LinkSpanButton\r\n                      url={\r\n                        {\r\n                          pathname: '/universityList',\r\n                          universityType: uniType?.id,\r\n                          universityName: uniType?.name,\r\n                        }\r\n                      }\r\n                      className={\"badge badge-pill badge-primary\"}\r\n                      data={uniType?.universityCount}\r\n                      permission={6}\r\n                    />\r\n\r\n                  </td>\r\n                  {/* <td> */}\r\n                  \r\n                     {/* <ButtonForFunction\r\n                      className={\"mx-1 btn-sm\"}\r\n                      func={() => toggleDanger(uniType?.name, uniType?.id)}\r\n                      color={\"danger\"}\r\n                      icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                      permission={6}\r\n                     />  */}\r\n\r\n                    {/* <Button onClick={()=> handleUpdate(uniType?.id)} className=\"mx-1 btn-sm\" color=\"warning\"><i className=\"fas fa-edit\"></i></Button> */}\r\n\r\n                    {/* <ButtonForFunction\r\n                      func={()=> handleUpdate(uniType)}\r\n                      className={\"mx-1 btn-sm\"}\r\n                      color={\"warning\"}\r\n                      icon={<i className=\"fas fa-edit\"></i>}\r\n                      permission={6}\r\n                    /> */}\r\n\r\n\r\n                    {/* <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this <b>{localStorage.getItem('delUniTypeName')}</b> ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={() => handleDeleteUniType(localStorage.getItem('delUniTypeId'))}>YES</Button>\r\n                        <Button onClick={closeDeleteModal}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                    </Modal>\r\n                  </td> */}\r\n                </tr>)\r\n              }\r\n\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n\r\n        </CardBody>\r\n      </Card>\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n\r\n  univerSityTypeList: state.universityTypeDataReducer.universityTypes\r\n\r\n})\r\nexport default connect(mapStateToProps)(AddUniversityType);\r\n"],"sourceRoot":""}