{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Components/LinkButton.js","views/SMS/Branches/IndividualComponent/Manager.js","views/SMS/Branches/IndividualComponent/Team.js","views/SMS/Branches/IndividualComponent/AssignTeam.js","views/SMS/Branches/Branch/BranchProfile.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","LinkButton","props","target","activeStyle","to","Manager","useState","branchManager","setBranchManager","id","success","setSuccess","useEffect","get","then","console","log","nameTittleId","Card","src","managerImageMedia","thumbnailUrl","alt","nameTittle","firstName","lastName","tittle","email","phoneNumber","Button","class","Team","teammodalOpen","setteamModalOpen","addToast","useToasts","teamInfo","setTeamInfo","branchTeamEmployee","setBranchTeamEmployee","teamName","setTeamName","isUpdate","setIsUpdate","deleteModal","setDeleteModal","useHistory","delData","setDelData","buttonStatus","setButtonStatus","closeDeleteTeamModal","handleDeletebranchTeam","remove","appearance","autoDismiss","closeModal","e","preventDefault","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","teamData","FormData","values","data","message","action","value","FormGroup","row","Col","md","Input","defaultValue","placeholder","style","display","justifyContent","length","Table","textAlign","map","btEmployee","key","cursor","employeeCount","ButtonGroup","handleTeamUpdate","toggleDeleteTeam","ModalFooter","AssignTeam","customStyles","control","provided","state","background","borderColor","minHeight","height","boxShadow","isFocused","menu","overflowY","branchEmployee","setBranchEmployee","serialNum","employeeModal","setEmployeeModal","menus","setMenus","checked","setChecked","branchTeamLabel","setBranchTeamLabel","branchTeamValue","setBranchTeamValue","branchTeam","setBranchTeam","deleteId","setDeleteId","closeDeleteEmployeeModal","handleDeleteBranchEmployee","closeEmployeeModal","branchTeamName","branch","label","employee","i","variant","branchId","employeeId","toggleDeleteEmployee","CardHeader","CardBody","subdata","append","sm","lg","styles","options","onChange","opt","defaultChecked","isChecked","toString","Row","newChecked","val","menuId","document","getElementById","handleSelectAll","htmlFor","xs","index","indexOf","splice","handleCheck","BranchProfile","useParams","branchInfo","setBranchInfo","addressLine","country"],"mappings":"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","file":"static/js/214.84328136.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card } from 'reactstrap';\r\nimport { rootUrl } from '../../../../constants/constants';\r\nimport get from '../../../../helpers/get';\r\nimport { Image } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport LinkButton from '../../Components/LinkButton';\r\nconst Manager = (props) => {\r\n\r\n    const [branchManager, setBranchManager] = useState({});\r\n    const {id, success,setSuccess} = props;\r\n   \r\n\r\n    useEffect(()=>{\r\n        get(`BranchManager/GetbyBranch/${id}`).then((res) => {\r\n           \r\n            console.log('ManagerInfo',res);\r\n            setBranchManager(res);\r\n          });\r\n\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n                {branchManager?.nameTittleId && (\r\n              <Card>\r\n                <div className=' pl-3 mt-2'> <span className='branch-title-style'>Branch Manager</span></div>\r\n                <div className=\"uapp-circle-image margin-top-minus mt-3\">\r\n                  <img className=\"p-1\" src={rootUrl+branchManager?.managerImageMedia?.thumbnailUrl} alt=\"provider_image\" />\r\n                </div>\r\n                <h5 className=\"pt-2 h3 text-center mb-4\">\r\n                  {\" \"}\r\n                  <span className='pe-1'>{branchManager?.nameTittle?.name}</span>\r\n                  <span className=\"pe-1\">{branchManager?.firstName}</span>\r\n                  <span className=\" ps-1\">{branchManager?.lastName}</span>\r\n                </h5>\r\n\r\n                <div className=\"container text-center mb-4\">\r\n              \r\n                  <LinkButton\r\n                  name={'Edit'}\r\n                  url={`/updateBranchManagerInformation/${id}/${branchManager?.id}`}\r\n                  className={\"btn btn-primary px-lg-5 px-md-3 px-sm-1 py-2\"}\r\n                  \r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center pb-3\">\r\n                    <h5 className=\"py-b\">\r\n                      <span>{branchManager?.tittle}</span>{\" \"}\r\n                    </h5>\r\n\r\n                    <h5 className=\"py-b\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.email}</span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.phoneNumber}</span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </Card>\r\n            )}\r\n\r\n            {!branchManager.nameTittleId && (\r\n              <Card>\r\n                <div className=\"container py-3\">\r\n                  <Link to={`/addBranchManager/${id}`}>\r\n                    \r\n                    <Button className=\"btn btn-uapp-add \"\r\n                    // onClick={localStorage.removeItem('branchManagerId')}\r\n                    >\r\n                      {\" \"}\r\n                      <i class=\"fas fa-plus\"></i> Add Branch Manager{\" \"}\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Manager;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, ButtonGroup, Card, Col, Form, FormGroup, Input, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\r\nimport get from '../../../../helpers/get';\r\nimport remove from '../../../../helpers/remove';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport post from '../../../../helpers/post';\r\nimport put from '../../../../helpers/put';\r\n\r\nconst Team = (props) => {\r\n\r\n  const {id,success,setSuccess} = props;\r\n\r\n\r\n    const [teammodalOpen, setteamModalOpen] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [branchTeam, setBranchTeam] = useState([]);\r\n    const [teamInfo, setTeamInfo] = useState({});\r\n    const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n    const [teamName, setTeamName] = useState(\"\");\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const history = useHistory();\r\n    const [delData,setDelData] = useState({});\r\n    const [buttonStatus,setButtonStatus] = useState(false);\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n        get(`BranchTeamEmployee/Count/${id}`).then((res) => {\r\n           \r\n            setBranchTeamEmployee(res);\r\n          });\r\n    },[ success, id])\r\n   \r\n   \r\n    const functionimplement = () => {\r\n        setteamModalOpen(true);\r\n    \r\n      };\r\n\r\n      const toggleDeleteTeam = (id) => {\r\n        setDelData(id);\r\n        setDeleteModal(true);\r\n      };\r\n\r\n      const handleTeamUpdate = (id) => {\r\n        get(`BranchTeam/Get/${id}`).then((res) => {\r\n          \r\n          setTeamInfo(res);\r\n          setTeamName(res?.name);\r\n          setIsUpdate(true);\r\n          setteamModalOpen(true);\r\n        });\r\n      };\r\n\r\n      const closeDeleteTeamModal = () => {\r\n        setDeleteModal(false);\r\n      };\r\n    \r\n      const handleDeletebranchTeam = () => {\r\n        setButtonStatus(true);\r\n        remove(`BranchTeam/Delete/${delData?.id}`).then((res) => {\r\n          setButtonStatus(false);\r\n          setSuccess(!success);\r\n          setDeleteModal(false);\r\n          addToast(res, {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n          });\r\n          setSuccess(!success);\r\n        });\r\n         \r\n    \r\n      };\r\n\r\n      function closeModal(e) {\r\n        e.preventDefault();\r\n        setteamModalOpen(false);\r\n      }\r\n\r\n      const handleTeamSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        const teamData = new FormData(e.target);\r\n        // for(let  value of teamData.values()){\r\n        \r\n        // }\r\n        if (!isUpdate) {\r\n          setButtonStatus(true);\r\n          post(`BranchTeam/Create`, teamData).then((action) => {\r\n            setButtonStatus(false);\r\n            setSuccess(!success);\r\n            setteamModalOpen(false);\r\n            addToast(action?.data?.message, {\r\n              appearance: \"success\",\r\n              autoDismiss: true,\r\n            });\r\n            // history.push(`/branchProfile/${branchId}`);\r\n          });\r\n        } else {\r\n          for (let val of teamData.values()) {\r\n           \r\n          }\r\n          setButtonStatus(true);\r\n          put(`BranchTeam/Update`, teamData).then((res) => {\r\n           setButtonStatus(false);\r\n            setIsUpdate(false);\r\n            setSuccess(!success);\r\n            setteamModalOpen(false);\r\n            addToast(res.data?.message, {\r\n              appearance: \"success\",\r\n              autoDismiss: true,\r\n            });\r\n    \r\n            // history.push(`/branchProfile/${branchId}`);\r\n          });\r\n        }\r\n        // setTeamName('');\r\n      };\r\n\r\n      const showTeamInfo = (data) => {\r\n        history.push(`/teamEmployee/${id}/${data}`);\r\n      }\r\n\r\n    return (\r\n        <div>\r\n             <div>\r\n        <Modal isOpen={teammodalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n          \r\n          <ModalHeader>Team Information</ModalHeader>\r\n        \r\n         \r\n          <ModalBody>\r\n            <Form onSubmit={handleTeamSubmit}>\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"branchId\"\r\n                id=\"branchId\"\r\n                value={id}\r\n              />\r\n              {isUpdate ? (\r\n                <input type=\"hidden\" name=\"id\" id=\"id\" value={teamInfo?.id} />\r\n              ) : null}\r\n              {isUpdate ? (\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Team Name</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      defaultValue={teamName}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              ) : (\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Team Name</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Enter Team Name\"\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              )}\r\n\r\n              <FormGroup\r\n                className=\"has-icon-left position-relative\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Button\r\n                  color=\"danger\"\r\n                  className=\"mr-1 mt-3\"\r\n                  onClick={closeModal}\r\n                >\r\n                  Close\r\n                </Button>\r\n\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-3\"\r\n                  disabled={buttonStatus}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n            <Card>\r\n              <div className=\"container mt-3 d-flex justify-content-between\">\r\n\r\n              <div>\r\n                <span className='branch-title-style'>\r\n                  Branch Team\r\n                </span>\r\n                </div>\r\n                \r\n                <div>\r\n                <Button\r\n                  onClick={functionimplement}\r\n                  className=\"btn btn-uapp-add \"\r\n                  disabled={buttonStatus}\r\n                >\r\n                  {\" \"}\r\n                  <i class=\"fas fa-plus\"></i> Add Team{\" \"}\r\n                </Button>\r\n                </div>\r\n\r\n               \r\n              </div>\r\n\r\n              {branchTeamEmployee.length > 0 && (\r\n                <div className=\"table-responsive container mt-3\">\r\n                  <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                      <tr style={{ textAlign: \"center\" }}>\r\n                        <th>Name</th>\r\n                        <th>Employees</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {branchTeamEmployee?.map((btEmployee) => (\r\n                        <tr key={btEmployee.id} style={{ textAlign: \"center\" }}>\r\n                          <td>{btEmployee?.teamName}</td>\r\n                       \r\n                            <td>\r\n                              <span className='badge badge-primary'\r\n                              style={{ cursor: 'pointer'}}\r\n                              onClick={()=>showTeamInfo(btEmployee?.id)}\r\n                              >\r\n                              \r\n                              {btEmployee?.employeeCount}\r\n                              </span>\r\n                            </td>\r\n                   \r\n                          <td>\r\n                          \r\n                            \r\n                               <ButtonGroup>\r\n                                 <Button color='warning' className='btn-sm mr-1'>\r\n                                 {\" \"}\r\n                                  <i class=\"fas fa-edit\"\r\n                                  onClick={() => handleTeamUpdate(btEmployee?.id)}\r\n                                  ></i>{\" \"}\r\n                                 </Button>\r\n                              \r\n                        \r\n                              \r\n                                <Button className='btn-sm' color='danger ml-1'>\r\n                                <i class=\"fas fa-trash-alt\"\r\n                                   onClick={() => toggleDeleteTeam(btEmployee)}\r\n                                  ></i>\r\n                                </Button>\r\n                               </ButtonGroup>\r\n                           \r\n                          \r\n                            <Modal\r\n                              isOpen={deleteModal}\r\n                              toggle={closeDeleteTeamModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={handleDeletebranchTeam}\r\n                                  disabled={buttonStatus}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeDeleteTeamModal}>NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              )}\r\n\r\n              {branchTeamEmployee.length <= 0 && (\r\n                <h5 className=\"text-center mt-3 mb-4\">Team Data Not Found</h5>\r\n              )}\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Team;","import React from 'react';\r\nimport  { useEffect, useState } from \"react\";\r\nimport { Button, ButtonGroup, Card, CardBody, CardHeader, Col, Form, FormGroup, Modal, ModalBody, ModalFooter, Row, Table } from 'reactstrap';\r\nimport Select from \"react-select\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport remove from '../../../../helpers/remove';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport get from '../../../../helpers/get';\r\nimport post from '../../../../helpers/post';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\nimport LinkButton from '../../Components/LinkButton';\r\n\r\nconst AssignTeam = (props) => {\r\n\r\n\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      background: '#fff',\r\n      borderColor: '#9e9e9e',\r\n      minHeight: '30px',\r\n      height: '40px',\r\n      boxShadow: state.isFocused ? null : null,\r\n      \r\n    }),\r\n\r\n    menu: () => ({\r\n      \r\n      overflowY: 'auto'\r\n      \r\n    }),\r\n   \r\n   \r\n\r\n    // valueContainer: (provided, state) => ({\r\n    //   ...provided,\r\n    //   height: '30px',\r\n    //   padding: '0 6px'\r\n    // }),\r\n\r\n    // input: (provided, state) => ({\r\n    //   ...provided,\r\n    //   margin: '0px',\r\n    // }),\r\n    // indicatorSeparator: state => ({\r\n    //   display: 'none',\r\n    // }),\r\n    // indicatorsContainer: (provided, state) => ({\r\n    //   ...provided,\r\n    //   height: '30px',\r\n    // }),\r\n  };\r\n\r\n    const {id, success, setSuccess} = props;\r\n    const history = useHistory();\r\n    const [branchEmployee, setBranchEmployee] = useState([]);\r\n    const [serialNum,setSerialNum] = useState(1);\r\n  \r\n    const [employeeModal, setEmployeeModal] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [menus, setMenus] = useState([]);\r\n    let [checked, setChecked] = useState([]);\r\n    const [branchTeamLabel, setBranchTeamLabel] = useState(\"Select team\");\r\n    const [branchTeamValue, setBranchTeamValue] = useState();\r\n    const [branchTeam, setBranchTeam] = useState([]);\r\n    const [branchEmployeeCheckbox, setBranchEmployeeCheckbox] = useState([]);\r\n    const [deleteId, setDeleteId] = useState('');\r\n    const [buttonStatus,setButtonStatus] = useState(false);\r\n      \r\n   \r\n    \r\n\r\n    const handleAddBranchEmployee = () => {\r\n        \r\n        history.push(`/branchEmployeeInformation/${id}`);\r\n      };\r\n\r\n      useEffect(()=>{\r\n        get(`BranchTeam/GetbyBranch/${id}`).then((res) => {\r\n            \r\n            setBranchTeam(res);\r\n          });\r\n\r\n          get(`BranchEmployee/GetbyBranch/${id}`).then((res) => {\r\n        \r\n            setBranchEmployee(res);\r\n        \r\n          });\r\n      \r\n      },[success, id])\r\n\r\n      const handleEditBranchEmployee = (id) => {\r\n        history.push(`branchEmployeeInformation/${id}`);\r\n      };\r\n\r\n      const toggleDeleteEmployee = (id) => {\r\n        setDeleteId(id?.id);\r\n        setEmployeeModal(true);\r\n      }\r\n\r\n      const closeDeleteEmployeeModal = () => {\r\n        setEmployeeModal(false);\r\n      }\r\n\r\n      // const handleDeleteEmployee = (id) =>{\r\n      //   handleDeleteBranchEmployee(id);\r\n    \r\n      // }\r\n\r\n      const handleDeleteBranchEmployee = () => {\r\n        setButtonStatus(true);\r\n        remove(`BranchEmployee/Delete/${deleteId}`).then((res) => {\r\n          setButtonStatus(false);\r\n          addToast(res, {\r\n            appearance: \"error\",\r\n            autoDismiss: true\r\n          });\r\n         setSuccess(!success);\r\n         setEmployeeModal(false);\r\n        });\r\n        \r\n      };\r\n\r\n      const closeEmployeeModal = () => {\r\n        setEmployeeModal(false);\r\n      }\r\n\r\n\r\n      const gotoEmployeeProfile = (data) => {\r\n\r\n     \r\n        history.push(`/branchEmployeeProfile/${id}/${data?.id}`);\r\n        \r\n  \r\n      }\r\n\r\n\r\n       // on Select Role\r\n  const selectBranchTeamName = (label, value) => {\r\n    setMenus([]);\r\n    checked = [];\r\n    setBranchTeamLabel(label);\r\n    setBranchTeamValue(value);\r\n    \r\n\r\n    get(`BranchTeamEmployee/GetUnassigned/${value}`).then((action) => {\r\n     \r\n      setMenus(action);\r\n      setSuccess(!success);\r\n      let defaultChecked = checked;\r\n      if (action.length > 0) {\r\n        for (let i = 0; i < action.length; i++) {\r\n          const menu = action[i];\r\n          if (menu.isChecked === true) {\r\n            const id = menu.id.toString();\r\n            defaultChecked.push(id);\r\n            setChecked([...defaultChecked]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n  \r\n    const subdata = new FormData(e.target);\r\n    subdata.append('teamId',branchTeamValue);\r\n    subdata.append('checkedArray',checked);\r\n   \r\n    // for( let val of subData.values()){\r\n  \r\n    // }\r\n    setButtonStatus(true);\r\n    post('BranchTeamEmployee/Create',subdata)\r\n    .then(res => {\r\n     setButtonStatus(false);\r\n      history.push(`/branchProfile/${id}`);\r\n      addToast(res?.data?.message,{\r\n        appearance: 'success',\r\n        autoDismiss: true\r\n      })\r\n      setSuccess(!success);\r\n      setMenus([]);\r\n    checked = [];\r\n      setBranchTeamLabel('Select Team');\r\n      \r\n    })\r\n\r\n  }\r\n\r\n    // handling checkbox\r\n    const handleCheck = (e) => {\r\n        let id = e.target.id;\r\n        let val = e.target.checked;\r\n    \r\n        if (val === true) {\r\n          setChecked([...checked, id]);\r\n        } else {\r\n          const index = checked.indexOf(id);\r\n          if (index > -1) {\r\n            checked.splice(index, 1);\r\n          }\r\n        }\r\n      };\r\n\r\n      const branchTeamName = branchTeam?.map((branch) => ({\r\n        label: branch.name,\r\n        value: branch.id,\r\n      }));\r\n    \r\n      // on Select All Checkbox\r\n  const handleSelectAll = (e) => {\r\n    let newChecked = [];\r\n    const val = e.target.checked;\r\n    if (val === true) {\r\n      menus.map((menu) => {\r\n        const menuId = menu.id.toString();\r\n        newChecked.push(menuId);\r\n        document.getElementById(menu.id).checked = true;\r\n      });\r\n      setChecked([...newChecked]);\r\n    }\r\n\r\n    if (val === false) {\r\n      {\r\n        menus.map((menu) => {\r\n          document.getElementById(menu.id).checked = false;\r\n        });\r\n        setChecked([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const redirectToUpdateBranchEmployee = (branchId, employeeId) => {\r\n    history.push(`/branchEmployeeInformation/${branchId}/${employeeId}`);\r\n  }\r\n\r\n\r\n    return (\r\n        <div>\r\n              <Card>\r\n              <div className=\"container mt-3 d-flex justify-content-between\">\r\n\r\n                <div>\r\n\r\n                     <span className='branch-title-style'>Branch Employee</span>\r\n                </div>\r\n\r\n               <div>\r\n               <Button\r\n                  onClick={handleAddBranchEmployee}\r\n                  className=\"btn btn-uapp-add \"\r\n                >\r\n                  {\" \"}\r\n                  <i class=\"fas fa-plus\"></i> Add New Employee{\" \"}\r\n                </Button>\r\n               </div>\r\n\r\n                {/* <ButtonForFunction \r\n                className={\"btn btn-uapp-add \"} /> */}\r\n\r\n\r\n              </div>\r\n\r\n              {branchEmployee.length > 0 ? (\r\n                <div className=\"table-responsive container mt-3\">\r\n                  <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                      <tr style={{ textAlign: \"center\" }}>\r\n                        <th>SL/NO</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone Number</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {branchEmployee?.map((employee, i) => (\r\n                        <tr key={employee.id} style={{ textAlign: \"center\" }}>\r\n                          <td>{serialNum + i}</td>\r\n                          <td>{employee?.firstName}</td>\r\n                          <td>{employee?.lastName}</td>\r\n                          <td>{employee?.email}</td>\r\n                          <td>{employee?.phoneNumber}</td>\r\n                          <td>\r\n                            <ButtonGroup variant=\"text\">\r\n\r\n                            <Button color='primary' className='mx-1 btn-sm' onClick={()=>gotoEmployeeProfile(employee)}>\r\n                            <i className=\"fas fa-eye\"></i>\r\n                            </Button>\r\n\r\n                              <Button\r\n                                color=\"warning\"\r\n                                onClick={() =>\r\n                                  redirectToUpdateBranchEmployee(id, employee?.id)\r\n                                }\r\n                                className=\"mx-1 btn-sm\"\r\n                              >\r\n                                <i class=\"fas fa-edit\"></i>\r\n                              </Button>\r\n                              \r\n                              {/* <LinkButton\r\n                              icon={ <i class=\"fas fa-edit\"></i>}\r\n                              className={\"mr-1 btn-sm\"}\r\n                              color={\"warning\"}\r\n                              url={`/branchEmployeeInformation/${id}/${employee?.id}`}\r\n                              /> */}\r\n\r\n                              <Button\r\n                                color=\"danger\"\r\n                                onClick={() =>\r\n                                  toggleDeleteEmployee(employee)\r\n                                }\r\n                                className=\"mx-1 btn-sm\"\r\n                              >\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                            <Modal\r\n                              isOpen={employeeModal}\r\n                              toggle={closeDeleteEmployeeModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={handleDeleteBranchEmployee}\r\n                                  disabled={buttonStatus}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeEmployeeModal}>NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              ) : (\r\n                <h5 className=\"text-center mt-3\">Employee Data Not Found</h5>\r\n              )}\r\n\r\n             \r\n            </Card>\r\n\r\n            <Card>\r\n                <CardHeader>\r\n                    <p className='fw-bold'>Assign Team Employee</p>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    <FormGroup row>\r\n                            <Col sm=\"6\" md=\"4\" lg=\"3\">\r\n                                <Select\r\n                                    styles={customStyles}\r\n                                    options={branchTeamName}\r\n                                    value={{label: branchTeamLabel, value: branchTeamValue }}\r\n                                    onChange={opt => selectBranchTeamName(opt.label, opt.value)}\r\n                                    name=\"type\"\r\n                                    id=\"type\"\r\n                                />\r\n                                </Col>\r\n                    </FormGroup>\r\n\r\n\r\n                    <FormGroup>\r\n\r\n                                <Row>\r\n                                <Col sm=\"12\">\r\n                                {\r\n                                    menus.length > 0 &&\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" onChange={(e)=>handleSelectAll(e)} type=\"checkbox\" name=\"\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"\">Select All</label>\r\n                                    </div>\r\n                                }\r\n                        \r\n                                </Col>\r\n                                {\r\n                                    branchTeamValue &&\r\n                                    menus?.map(menu =>\r\n                                    \r\n                                    <Col xs=\"6\" sm=\"4\" md=\"3\" key={menu.id}>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" onChange={(e)=>handleCheck(e)} name=\"\" id={menu.id} defaultChecked={menu.isChecked}  />\r\n                                        <label className=\"form-check-label\" htmlFor=\"\">{menu.firstName}{' '}{menu.lastName}</label>\r\n                                    </div>\r\n                                    </Col>\r\n                                    )\r\n                                }\r\n                                </Row>\r\n                        </FormGroup>\r\n                \r\n\r\n                    <FormGroup style={{display: 'flex',justifyContent: 'space-between'}}>\r\n                            <Row>\r\n\r\n                                <Col>\r\n                                <Button\r\n                                type=\"submit\"\r\n                                className=\"mr-1 mt-3 badge-primary\"\r\n                                disabled={buttonStatus}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                  \r\n                </CardBody>\r\n\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignTeam;","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport get from \"../../../../helpers/get\";\r\nimport remove from \"../../../../helpers/remove\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Select from \"react-select\";\r\nimport post from \"../../../../helpers/post\";\r\n\r\nimport put from \"../../../../helpers/put\";\r\nimport Manager from \"../IndividualComponent/Manager\";\r\nimport Team from \"../IndividualComponent/Team\";\r\nimport AssignTeam from \"../IndividualComponent/AssignTeam\";\r\n\r\nconst BranchProfile = (props) => {\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n  const { id } = useParams();\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [branchInfo, setBranchInfo] = useState({});\r\n  const [branchManager, setBranchManager] = useState({});\r\n  \r\n  const [serialNum, setSerialNum] = useState(1);\r\n\r\n\r\n  const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [teamInfo, setTeamInfo] = useState({});\r\n\r\n  const [success, setSuccess] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n\r\n  // add on close\r\n\r\n  // add on extra\r\n\r\n  // submitting form\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   setModalOpen(true);\r\n  //   // //  watch form data values\r\n  //   // for (var value of subData.values()) {\r\n\r\n  //   //  }\r\n\r\n  // }\r\n\r\n\r\n\r\n  //\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    get(`Branch/Get/${id}`).then((res) => {\r\n     \r\n      setBranchInfo(res);\r\n    });\r\n\r\n    \r\n  }, [id]);\r\n\r\n  const backToBranchList = () => {\r\n    history.push(\"/branchList\");\r\n  };\r\n  function closeModal(e) {\r\n    e.preventDefault();\r\n    setModalOpen(false);\r\n  }\r\n\r\n\r\n  const handleTeamUpdate = (id) => {\r\n    get(`BranchTeam/Get/${id}`).then((res) => {\r\n    \r\n      setTeamInfo(res);\r\n      setTeamName(res?.name);\r\n      setIsUpdate(true);\r\n      setModalOpen(true);\r\n    });\r\n  };\r\n  const handleTeamSubmit = (e) => {\r\n    e.preventDefault();\r\n    const teamData = new FormData(e.target);\r\n    // for(let  value of teamData.values()){\r\n   \r\n    // }\r\n    if (!isUpdate) {\r\n      post(`BranchTeam/Create`, teamData).then((action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        history.push(\"/branchList\");\r\n      });\r\n    } else {\r\n      for (let val of teamData.values()) {\r\n        \r\n      }\r\n      put(`BranchTeam/Update`, teamData).then((res) => {\r\n        \r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(res.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n\r\n        history.push(\"/branchList\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const functionimplement = () => {\r\n    setModalOpen(true);\r\n\r\n  };\r\n\r\n  const toggleDeleteTeam = (id) => {\r\n    localStorage.setItem(\"teamId\", id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n \r\n\r\n  // const handleDeletebranchTeam = () => {\r\n  //   const id = localStorage.getItem(\"teamId\");\r\n  //   remove(`BranchTeam/Delete/${id}`).then((res) => {\r\n  //     setDeleteModal(false);\r\n  //     addToast(res?.data?.message, {\r\n  //       appearance: \"error\",\r\n  //       autoDismiss: true,\r\n  //     });\r\n     \r\n  //   });\r\n  //    const newTeamData = branchTeam.filter((team) => team?.id != id);\r\n  \r\n  //     setBranchTeam(newTeamData);\r\n\r\n  // };\r\n\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Branch Details</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToBranchList} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Branch List\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n    \r\n\r\n      <div className=\"uapp-employee-profile\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"uapp-employee-profile-right\">\r\n              <div className=\"uapp-profile-CardHeader\">\r\n                {/* <div className=\"uapp-circle-image margin-top-minus\">\r\n                  <img  alt='provider_image' />\r\n                </div>     */}\r\n                <div className=\"py-3\">\r\n                  <h5 className=\"py-1\">\r\n                    Branch Name:{\" \"}\r\n                    <span className=\"text-primary\">{branchInfo?.name}</span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    Branch Address:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.addressLine}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Email:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.email}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Phone Number:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.phoneNumber}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <CardBody>\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center\">\r\n                    <h5>\r\n                      {\" \"}\r\n                      Country:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.country?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5>\r\n                      {\" \"}\r\n                      State:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.state?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"8\">\r\n\r\n            <AssignTeam\r\n            id ={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            >\r\n\r\n            </AssignTeam>\r\n          \r\n          </Col>\r\n\r\n          <Col md=\"4\">\r\n            <Manager \r\n            id={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            ></Manager>\r\n        \r\n            <Team\r\n            id={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            \r\n            />\r\n           \r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BranchProfile;\r\n"],"sourceRoot":""}