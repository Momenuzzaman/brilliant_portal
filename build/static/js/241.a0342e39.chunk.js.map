{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Card.js","views/SMS/Provider/AdmissionManager/AdmissionManagerSubjects.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardHeader","inverse","bool","outline","Card","AdmissionManagerSubjects","useParams","managerId","universityId","useHistory","useState","subject","setSubject","permissions","JSON","parse","addToast","useToasts","success","setSuccess","useEffect","get","then","id","style","textAlign","map","sub","i","key","scope","subjectName","isAssigned","includes","permissionList","Assign_AdmissionManager_Subject","data","remove","subjectId","appearance","autoDismiss","Delete_AdmissionManager_Subject","admissionManagerId","isSuccess","message"],"mappings":"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","file":"static/js/241.a0342e39.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { Button, ButtonGroup, Card, CardBody, CardHeader, Table } from 'reactstrap';\r\nimport { permissionList } from '../../../../constants/AuthorizationConstant';\r\nimport get from '../../../../helpers/get';\r\nimport post from '../../../../helpers/post';\r\nimport remove from '../../../../helpers/remove';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\n\r\nconst AdmissionManagerSubjects = () => {\r\n\r\n    \r\n    const {managerId, universityId} = useParams();\r\n    const history = useHistory();\r\n    const [subject,setSubject] = useState([]);\r\n    const permissions = JSON.parse(localStorage.getItem('permissions'));\r\n    const {addToast} = useToasts();\r\n    const [success,setSuccess] = useState(false);\r\n \r\n\r\n    useEffect(()=> {\r\n        get(`AdmissionManagerSubject/AssignedSubjects/${universityId}/${managerId}`)\r\n        .then(res => {\r\n          \r\n            setSubject(res);\r\n        })\r\n\r\n    },[success])\r\n\r\n     const backToDashboard = () => {\r\n        history.push(`/universityAdmissionManagers/${universityId}`);\r\n     }\r\n\r\n     const assignSubject = (data) => {\r\n\r\n        post(`AdmissionManagerSubject/Create`,{\r\n            admissionManagerId: managerId,\r\n            subjectId: data?.subjectId\r\n        })\r\n        .then(res => {\r\n            if(res?.status == 200 && res?.data?.isSuccess == true){\r\n                addToast(res?.data?.message,{\r\n                    appearance: 'success',\r\n                    autoDismiss: true\r\n                })\r\n                setSuccess(!success);\r\n\r\n            }\r\n            else{\r\n                addToast(res?.data?.message,{\r\n                    appearance: 'error',\r\n                    autoDismiss: true\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n     }\r\n\r\n     const removeSubject = (data) => {\r\n        remove(`AdmissionManagerSubject/Remove/${data?.subjectId}/${managerId}`)\r\n        .then(res => {\r\n            addToast(res,{\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n            setSuccess(!success);\r\n        })\r\n\r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Admission Manager Subject List </h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i>{\" \"}\r\n              Back to Assigned Admission Managers\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardBody>\r\n        <div className=\"table-responsive\">\r\n              <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                        \r\n                        <th>SL/NO</th> \r\n                          <th>Subject</th> \r\n\r\n                        <th>Action</th>\r\n                   \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {subject?.map((sub, i) => (\r\n                    <tr key={sub?.id} style={{ textAlign: \"center\" }}>\r\n                        <th scope=\"row\">{1 + i}</th> \r\n\r\n                        <td>\r\n                         {sub?.subjectName} \r\n                        </td>\r\n                 \r\n            \r\n                    \r\n                    <td>\r\n                   \r\n                   {\r\n                    (sub?.isAssigned) ? \r\n         \r\n                       <>\r\n                        {\r\n                            permissions?.includes(permissionList.Assign_AdmissionManager_Subject) ?\r\n                            <Button color='danger' onClick={()=> removeSubject(sub)}>\r\n                            Remove\r\n        \r\n                          </Button>\r\n                          :\r\n                          null\r\n                        }</>\r\n\r\n                      :\r\n                 \r\n                   <>\r\n                   {\r\n                   permissions?.includes(permissionList.Delete_AdmissionManager_Subject) ?\r\n                   <Button color='primary' onClick={()=> assignSubject(sub)}>\r\n                    Assign\r\n  \r\n                   </Button>\r\n                   :\r\n                   null\r\n                    }\r\n                   </>\r\n                   }\r\n               \r\n                \r\n                   \r\n\r\n                 </td>\r\n                  \r\n                     \r\n                     \r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n        </CardBody>\r\n      </Card>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdmissionManagerSubjects;"],"sourceRoot":""}