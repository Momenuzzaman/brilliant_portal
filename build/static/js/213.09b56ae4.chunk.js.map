{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Students/StudentType.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","StudentType","useHistory","useDispatch","useState","modalOpen","setModalOpen","success","setSuccess","addToast","useToasts","studentTypeInfo","setStudentTypeInfo","info","useEffect","get","then","console","log","closeModal","length","isOpen","toggle","onSubmit","e","preventDefault","subdata","FormData","target","id","data","isSuccess","message","appearance","autoDismiss","row","md","value","defaultValue","placeholder","style","display","justifyContent","Ripple","textAlign","map","index","key","scope","cursor","gotoList","studentCount"],"mappings":"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","file":"static/js/213.09b56ae4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, ButtonGroup, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from 'react-redux';\r\nimport {CreateDepartment, DeleteDepartment, GetDepartments, UpdateDepartment} from '../../../redux/actions/SMS/UniversitySubject/DepartmentAction';\r\nimport get from '../../../helpers/get';\r\nimport post from '../../../helpers/post';\r\n\r\nimport remove from '../../../helpers/remove';\r\nimport put from '../../../helpers/put';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\n\r\nconst StudentType = () => {\r\n\r\n    const history = useHistory();\r\n\r\n  \r\n    const dispatch = useDispatch();\r\n    \r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [department,setdepartment] = useState('');\r\n    const [description,setDescription] = useState('');\r\n    const [departmentInfo, setDepartmentInfo] = useState([]);\r\n    const [studentTypeInfo, setStudentTypeInfo] = useState([]);\r\n    const [info, setInfo] = useState({});\r\n   \r\n \r\n    const [id,setId] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n        get('StudentType/Index')\r\n        .then(res => {\r\n            console.log(res);\r\n            setStudentTypeInfo(res);\r\n\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n      // redirect to dashboard\r\n      const backToDashboard = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    \r\n// on Close Modal\r\n   const closeModal = () => {\r\n    setModalOpen(false);\r\n \r\n  }\r\n\r\n  const gotoList = (id) => {\r\n    history.push(`/studentListByType/${id}`);\r\n  }\r\n\r\n  const AddModalOpen= (id) => {\r\n  \r\n    console.log(id);\r\n    \r\n   if(id !=='add'){\r\n    get(`StudentType/Get/${id}`)\r\n    .then(res => {\r\n      console.log(res);\r\n        setInfo(res);\r\n    })\r\n\r\n   }\r\n  else{\r\n   setInfo({});\r\n  }\r\n\r\n  \r\n  setModalOpen(true);\r\n}\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const subdata = new FormData(e.target);\r\n   \r\n   if(!info?.id){\r\n    post(`StudentType/Create`,subdata).then((res)=>{\r\n      setSuccess(!success)\r\n      setModalOpen(false)\r\n   \r\n      addToast(res?.data?.message, {\r\n        appearance:  'success',\r\n        autoDismiss: true,\r\n      })\r\n      get(`StudentType/index`)\r\n      .then(res =>{\r\n        \r\n        setStudentTypeInfo(res);\r\n      } )\r\n    \r\n  });\r\n   }\r\n\r\n   else{\r\n     put('StudentType/Update',subdata)\r\n     .then(res => {\r\n       console.log(res);\r\n       if(res?.status == 200 && res?.data?.isSuccess == true){\r\n        setSuccess(!success)\r\n        setModalOpen(false)\r\n     \r\n        addToast(res?.data?.message, {\r\n          appearance:  'success',\r\n          autoDismiss: true,\r\n        })\r\n        get(`StudentType/index`)\r\n        .then(res =>{\r\n          \r\n          setStudentTypeInfo(res);\r\n        } )\r\n       }\r\n       else{\r\n        addToast(res?.data?.message, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n     \r\n\r\n     })\r\n   }\r\n\r\n\r\n      \r\n  }\r\n\r\n\r\n  const handleUpdateSubmit = () => {\r\n    const id = localStorage.getItem('updatedep');\r\n    const subData = {\r\n      id: id,\r\n      name: department\r\n    }\r\n  //  const returnvalue = update(`${rootUrl}/Department/Update`,subData).then((action)=> {\r\n  //     setSuccess(!success);\r\n  //     setModalOpen(false)\r\n  //     addToast(action, {\r\n  //       appearance: action =='Department updated successfully.' ? 'success': 'error',\r\n  //       autoDismiss: true,\r\n  //     })\r\n  //     setdepartment('');\r\n  //    localStorage.removeItem('depName')\r\n  \r\n  //   })\r\n\r\n    dispatch(UpdateDepartment(subData, (action) => {\r\n      setSuccess(!success);\r\n      setModalOpen(false)\r\n      addToast(action, {\r\n        appearance: action =='Department updated successfully.' ? 'success': 'error',\r\n        autoDismiss: true,\r\n      })\r\n      setdepartment('');\r\n     localStorage.removeItem('depName')\r\n    }))\r\n  \r\n  \r\n  }\r\n\r\n\r\nconst toggleDanger = (id) => {\r\n    localStorage.setItem('studentTypeId',id)\r\n  \r\n    setDeleteModal(true)\r\n   }\r\n   \r\n   // on Close Delete Modal\r\nconst closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    localStorage.removeItem('studentTypeId')\r\n   \r\n  \r\n  }\r\n\r\n  const handleDelete = (id) =>{\r\n      \r\n    remove(`StudentType/Delete/${id}`)\r\n    .then(res => {\r\n     \r\n      addToast(res, {\r\n        appearance:  'error',\r\n        autoDismiss: true,\r\n      })\r\n      const newState = studentTypeInfo.filter(data => data.id != id);\r\n      setStudentTypeInfo(newState);\r\n      setDeleteModal(false);\r\n\r\n    })\r\n  }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Card className=\"uapp-card-bg\">\r\n              <CardHeader className=\"page-header\">\r\n                <h3 className=\"text-white\">Student Type List</h3>\r\n                <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard} className=\"text-white\">\r\n                    {\" \"}\r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                  </span>\r\n                </div>\r\n              </CardHeader>\r\n            </Card>\r\n\r\n\r\n        <Card>\r\n            <CardHeader>\r\n       \r\n            \r\n\r\n            {/* <ButtonForFunction\r\n            name={' Add New'}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            className={\"btn btn-uapp-add\"}\r\n            func={()=>AddModalOpen('add')}\r\n\r\n            /> */}\r\n\r\n\r\n                  <div className='ms-auto'> <b> Total <span className=\"badge badge-primary\"> {studentTypeInfo.length}</span> Student Type  Found </b></div>\r\n            </CardHeader>\r\n             <CardBody>\r\n\r\n             <div>\r\n\r\n<Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n  <ModalHeader>Add Student Type </ModalHeader>\r\n  <ModalBody>\r\n    <Form onSubmit={handleSubmit}>\r\n     \r\n      <FormGroup row className=\"has-icon-left position-relative\">\r\n        <Col md=\"4\">\r\n          <span>Student Type</span>\r\n        </Col>\r\n        <Col md=\"8\">\r\n\r\n            {\r\n                info.id ? \r\n                <input\r\n                type='hidden'\r\n                name='id'\r\n                id='id'\r\n                value={info?.id}\r\n                />\r\n                :\r\n                null\r\n            }\r\n\r\n\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            defaultValue={info?.name}\r\n          \r\n            placeholder=\"Create Student Type\"\r\n          />\r\n\r\n        </Col>\r\n      </FormGroup>\r\n     \r\n\r\n      <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n        <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={closeModal}>Close</Button>\r\n\r\n   \r\n          <Button.Ripple\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"mr-1 mt-3\"\r\n           \r\n          >\r\n            Submit\r\n          </Button.Ripple>\r\n\r\n      \r\n\r\n      </FormGroup>\r\n\r\n    </Form>\r\n  </ModalBody>\r\n\r\n</Modal>\r\n<div>\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n<div className=\"table-responsive\">\r\n          <Table className=\"table-sm table-bordered text-center\" >\r\n          <thead className=\"thead-uapp-bg\">\r\n              <tr style={{ textAlign: \"center\" }}>\r\n                <th>SL/NO</th>\r\n                <th> Name</th>\r\n                <th> Student Count</th>\r\n                {/* <th>Action</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                studentTypeInfo.map((type,index) =><tr key={index}\r\n                type ={type}\r\n                >\r\n                  \r\n                  <th scope='row'>{index+1}</th>\r\n                  <td>{type?.name}</td>\r\n                  <td>\r\n                  <span className='badge badge-pill badge-primary' style={{cursor: 'pointer'}} onClick={()=> gotoList(type?.id)}>{type?.studentCount}</span> \r\n                  </td>\r\n                  {/* <td>\r\n                  <ButtonGroup variant=\"text\">\r\n\r\n                         <ButtonForFunction\r\n                         className={\"btn-sm mx-2\"}\r\n                         func={() => toggleDanger(type?.id)}\r\n                         color={'danger'}\r\n                         icon={<i className=\"fas fa-trash-alt\"></i>}\r\n\r\n                         />\r\n                       \r\n                      \r\n                         <ButtonForFunction\r\n                         className={\"btn-sm\"}\r\n                         color={\"warning\"}\r\n                         func={()=> AddModalOpen(type?.id)}\r\n                         icon={<i className=\"fas fa-edit\"></i>}\r\n                         />\r\n                          \r\n                          </ButtonGroup>\r\n\r\n                  \r\n                  <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this {localStorage.getItem('depName')} ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={() => handleDelete(localStorage.getItem('studentTypeId'))}>YES</Button>\r\n                        <Button onClick={closeDeleteModal}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                  </Modal>\r\n\r\n\r\n                  </td> */}\r\n                    \r\n                \r\n\r\n\r\n\r\n\r\n                </tr>)\r\n              }\r\n\r\n              \r\n\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n\r\n         </CardBody>\r\n      </Card>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentType;"],"sourceRoot":""}