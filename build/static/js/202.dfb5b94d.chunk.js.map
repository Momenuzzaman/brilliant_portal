{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","../node_modules/reactstrap/es/ModalFooter.js","views/SMS/Search/Loader/Loader.js","views/SMS/Components/LinkButton.js","../node_modules/reactstrap/es/ButtonGroup.js","views/SMS/UniversitySubjects/Department.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","ModalFooter","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","Loader","src","loader","LinkButton","target","activeStyle","to","role","size","vertical","bool","ButtonGroup","Department","useHistory","useDispatch","useState","modalOpen","setModalOpen","deleteModal","setDeleteModal","success","setSuccess","addToast","useToasts","department","setdepartment","description","setDescription","departmentInfo","setDepartmentInfo","depId","setDepId","depName","setDepName","loading","setLoading","buttonStatus","setButtonStatus","buttonStatus1","setButtonStatus1","useEffect","get","then","closeModal","closeDeleteModal","length","isOpen","toggle","onSubmit","e","preventDefault","subdata","data","message","appearance","autoDismiss","row","md","id","required","onChange","value","placeholder","rows","style","display","justifyContent","Ripple","textAlign","map","dept","index","key","scope","variant","deptId","toggleDanger","remove","newState","filter","handleDelete"],"mappings":"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","file":"static/js/202.dfb5b94d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;","import React from 'react';\r\nimport loader from '../../../../assets/img/load.gif'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <img className='img-fluid' src={loader} />\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'group'\n};\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      vertical = props.vertical,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  Table,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  CreateDepartment,\r\n  DeleteDepartment,\r\n  GetDepartments,\r\n  UpdateDepartment,\r\n} from \"../../../redux/actions/SMS/UniversitySubject/DepartmentAction\";\r\nimport get from \"../../../helpers/get\";\r\nimport post from \"../../../helpers/post\";\r\nimport { Link } from \"react-router-dom\";\r\nimport remove from \"../../../helpers/remove\";\r\nimport ButtonForFunction from \"../Components/ButtonForFunction\";\r\nimport LinkButton from \"../Components/LinkButton\";\r\nimport Loader from \"../Search/Loader/Loader\";\r\n\r\nconst Department = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const [department, setdepartment] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [departmentInfo, setDepartmentInfo] = useState([]);\r\n  const [depId, setDepId] = useState(0);\r\n  const [depName, setDepName] = useState(\"\");\r\n  const [loading,setLoading] = useState(true);\r\n  const [buttonStatus, setButtonStatus] = useState(false);\r\n  const [buttonStatus1, setButtonStatus1] = useState(false);\r\n\r\n  const [id, setId] = useState(\"\");\r\n\r\n  // redirect to dashboard\r\n  const backToDashboard = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    get(`Department/index`).then((res) => {\r\n       \r\n      setDepartmentInfo(res);\r\n      setLoading(false);\r\n    });\r\n  }, [success]);\r\n\r\n  // on Close Modal\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    // localStorage.removeItem(\"depId\");\r\n    setdepartment(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const subdata = {\r\n      name: department,\r\n      description: description,\r\n    };\r\n\r\n    setButtonStatus(true);\r\n    post(`Department/Create`, subdata).then((res) => {\r\n      setSuccess(!success);\r\n      setModalOpen(false);\r\n      setButtonStatus(false); \r\n      addToast(res?.data?.message, {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n      get(`Department/index`).then((res) => {\r\n         \r\n        setDepartmentInfo(res);\r\n      });\r\n      setdepartment(\"\");\r\n    });\r\n  };\r\n\r\n  const toggleDanger = (name, id) => {\r\n    setDepName(name);\r\n    setDepId(id);\r\n    setDeleteModal(true);\r\n  };\r\n  // on Close Delete Modal\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    setDepName(\"\");\r\n    setDepId(0);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setButtonStatus1(true);\r\n    remove(`Department/Delete/${id}`).then((res) => {\r\n      setButtonStatus1(false);\r\n      setDeleteModal(false);\r\n      addToast(res, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n      const newState = departmentInfo.filter((data) => data.id != id);\r\n      setDepartmentInfo(newState);\r\n      setDepName(\"\");\r\n      setDepId(0);\r\n    });\r\n  };\r\n\r\n  // const handleUpdateSubmit = () => {\r\n  //   const id = localStorage.getItem('updatedep');\r\n  //   const subData = {\r\n  //     id: id,\r\n  //     name: department\r\n  //   }\r\n  //  const returnvalue = update(`${rootUrl}/Department/Update`,subData).then((action)=> {\r\n  //     setSuccess(!success);\r\n  //     setModalOpen(false)\r\n  //     addToast(action, {\r\n  //       appearance: action =='Department updated successfully.' ? 'success': 'error',\r\n  //       autoDismiss: true,\r\n  //     })\r\n  //     setdepartment('');\r\n  //    localStorage.removeItem('depName')\r\n\r\n  //   })\r\n\r\n  //   dispatch(UpdateDepartment(subData, (action) => {\r\n  //     setSuccess(!success);\r\n  //     setModalOpen(false)\r\n  //     addToast(action, {\r\n  //       appearance: action =='Department updated successfully.' ? 'success': 'error',\r\n  //       autoDismiss: true,\r\n  //     })\r\n  //     setdepartment('');\r\n  //    localStorage.removeItem('depName')\r\n  //   }))\r\n  // }\r\n\r\n  const AddModalOpen = () => {\r\n    setModalOpen(true);\r\n    setdepartment(\"\");\r\n    // localStorage.removeItem('updatedep')\r\n  };\r\n\r\n  const redirectToEditDepartment = deptId => {\r\n    history.push(`/editDepartment/${deptId}`)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading?\r\n        <Loader/>\r\n        :\r\n        <div>\r\n          <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Department List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <ButtonForFunction\r\n            func={AddModalOpen}\r\n            className={\"btn btn-uapp-add\"}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={\" Add Department\"}\r\n            permission={6}\r\n          />\r\n\r\n          <div>\r\n            {\" \"}\r\n            <b>\r\n              {\" \"}\r\n              Total{\" \"}\r\n              <span className=\"badge badge-primary\">\r\n                {\" \"}\r\n                {departmentInfo.length}\r\n              </span>{\" \"}\r\n              Department Found{\" \"}\r\n            </b>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div>\r\n            <Modal\r\n              isOpen={modalOpen}\r\n              toggle={closeModal}\r\n              className=\"uapp-modal\"\r\n            >\r\n              <ModalHeader>Add Department </ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>\r\n                        Department Name <span className=\"text-danger\">*</span>{\" \"}\r\n                      </span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        required\r\n                        onChange={(e) => setdepartment(e.target.value)}\r\n                        placeholder=\"Create Department\"\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>\r\n                        Description <span className=\"text-danger\">*</span>{\" \"}\r\n                      </span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        required\r\n                        rows=\"4\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        placeholder=\"Add Description\"\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup\r\n                    className=\"has-icon-left position-relative\"\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button\r\n                      color=\"danger\"\r\n                      className=\"mr-1 mt-3\"\r\n                      onClick={closeModal}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n\r\n                    {/* {\r\n        localStorage.getItem(\"updatedep\") ?\r\n          <Button color=\"warning\" onClick={handleUpdateSubmit}  className=\"mr-1 mt-3\">Update</Button> : */}\r\n                    <Button.Ripple\r\n                      disabled={buttonStatus}\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mr-1 mt-3\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n\r\n                    {/* } */}\r\n                  </FormGroup>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n            <div></div>\r\n          </div>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table className=\"table-sm table-bordered\">\r\n              <thead className=\"thead-uapp-bg\">\r\n                <tr style={{ textAlign: \"center\" }}>\r\n                  <th>SL/NO</th>\r\n                  <th>Name</th>\r\n                  <th>Description</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {departmentInfo.map((dept, index) => (\r\n                  <tr key={index} dept={dept} style={{ textAlign: \"center\" }}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{dept?.name}</td>\r\n                    <td>{dept?.description}</td>\r\n                    <td>\r\n                      <ButtonGroup variant=\"text\">\r\n                        {/* <Button  color=\"danger\" onClick={()=>handleDelete(dept?.id)}   className=\"mr-2 btn-sm\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n\r\n                        {/* <Button className=\"btn-sm mx-2\" onClick={() => toggleDanger(dept.name, dept.id)} color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n                        \r\n                        <ButtonForFunction\r\n                          func={() => redirectToEditDepartment(dept?.id)}\r\n                          className={\"btn-sm\"}\r\n                          color={\"warning\"}\r\n                          icon={<i className=\"fas fa-edit\"></i>}\r\n                          permission={6}\r\n                        />\r\n\r\n                        <ButtonForFunction\r\n                          func={() => toggleDanger(dept.name, dept.id)}\r\n                          className={\"btn-sm mx-2\"}\r\n                          color={\"danger\"}\r\n                          icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                          permission={6}\r\n                        />\r\n\r\n                        {/* <Link to={`editDepartment/${dept?.id}`}>\r\n                         <Button color=\"warning\" className=\" btn-sm\"> <i className=\"fas fa-edit\"></i> </Button>\r\n                         </Link> */}\r\n\r\n                        {/* <LinkButton\r\n                          url={`editDepartment/${dept?.id}`}\r\n                          color={\"warning\"}\r\n                          className={\"btn-sm\"}\r\n                          icon={<i className=\"fas fa-edit\"></i>}\r\n                          permission={6}\r\n                        /> */}\r\n\r\n                      </ButtonGroup>\r\n\r\n                      {/* modal for delete */}\r\n                      <Modal\r\n                        isOpen={deleteModal}\r\n                        toggle={closeDeleteModal}\r\n                        className=\"uapp-modal\"\r\n                      >\r\n                        <ModalBody>\r\n                          <p>\r\n                            Are You Sure to Delete this <b>{depName}</b> ? Once\r\n                            Deleted it can't be Undone!\r\n                          </p>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                          \r\n                          <Button onClick={closeDeleteModal}>\r\n                            NO\r\n                          </Button>\r\n                          \r\n                          <Button\r\n                            color=\"danger\"\r\n                            onClick={() => handleDelete(depId)}\r\n                            disabled={buttonStatus1}\r\n                          >\r\n                            YES\r\n                          </Button>\r\n\r\n                        </ModalFooter>\r\n                      </Modal>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n"],"sourceRoot":""}