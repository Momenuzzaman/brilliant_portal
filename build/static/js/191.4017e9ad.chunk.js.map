{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/put.js","helpers/post.js","views/SMS/Components/LinkButton.js","views/SMS/Branches/IndividualComponent/Manager.js","views/SMS/Branches/IndividualComponent/Team.js","views/SMS/Branches/IndividualComponent/AssignTeam.js","views/SMS/Branches/Branch/BranchProfile.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","Axios","put","rootUrl","headers","res","response","status","history","push","axios","post","LinkButton","props","target","activeStyle","to","Manager","useState","branchManager","setBranchManager","id","success","setSuccess","useEffect","get","then","nameTittleId","Card","src","managerImageMedia","fileUrl","alt","firstName","lastName","tittle","email","phoneNumber","Button","class","Team","teammodalOpen","setteamModalOpen","addToast","useToasts","teamInfo","setTeamInfo","branchTeamEmployee","setBranchTeamEmployee","teamName","setTeamName","isUpdate","setIsUpdate","deleteModal","setDeleteModal","useHistory","delData","setDelData","closeDeleteTeamModal","handleDeletebranchTeam","remove","appearance","autoDismiss","closeModal","e","preventDefault","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","teamData","FormData","values","data","message","action","value","FormGroup","row","Col","md","Input","defaultValue","placeholder","style","display","justifyContent","Ripple","length","Table","textAlign","map","btEmployee","key","cursor","employeeCount","handleTeamUpdate","toggleDeleteTeam","ModalFooter","AssignTeam","customStyles","control","provided","state","background","borderColor","minHeight","height","boxShadow","isFocused","menu","overflowY","branchEmployee","setBranchEmployee","serialNum","employeeModal","setEmployeeModal","menus","setMenus","checked","setChecked","branchTeamLabel","setBranchTeamLabel","branchTeamValue","setBranchTeamValue","branchTeam","setBranchTeam","deleteId","setDeleteId","closeDeleteEmployeeModal","handleDeleteBranchEmployee","closeEmployeeModal","branchTeamName","branch","label","employee","i","ButtonGroup","variant","toggleDeleteEmployee","CardHeader","CardBody","subdata","append","sm","lg","styles","options","onChange","opt","defaultChecked","isChecked","toString","Row","newChecked","val","menuId","document","getElementById","handleSelectAll","htmlFor","xs","index","indexOf","splice","handleCheck","BranchProfile","useParams","branchInfo","setBranchInfo","addressLine","country"],"mappings":"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","file":"static/js/191.4017e9ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error.response.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card } from 'reactstrap';\r\nimport { rootUrl } from '../../../../constants/constants';\r\nimport get from '../../../../helpers/get';\r\nimport { Image } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport LinkButton from '../../Components/LinkButton';\r\nconst Manager = (props) => {\r\n\r\n    const [branchManager, setBranchManager] = useState({});\r\n    const {id, success,setSuccess} = props;\r\n   \r\n\r\n    useEffect(()=>{\r\n        get(`BranchManager/GetbyBranch/${id}`).then((res) => {\r\n           \r\n      \r\n            setBranchManager(res);\r\n          });\r\n\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n                {branchManager?.nameTittleId && (\r\n              <Card>\r\n                <div className=' ps-3 mt-2'> <span className='branch-title-style'>Branch Manager</span></div>\r\n                <div className=\"uapp-circle-image margin-top-minus mt-3\">\r\n                  <img className=\"p-1\" src={rootUrl+branchManager?.managerImageMedia?.fileUrl} alt=\"provider_image\" />\r\n                </div>\r\n                <h5 className=\"pt-2 h3 text-center mb-4\">\r\n                  {\" \"}\r\n                  <span className=\"pe-1\">{branchManager?.firstName}</span>\r\n                  <span className=\" ps-1\">{branchManager?.lastName}</span>\r\n                </h5>\r\n\r\n                <div className=\"container text-center mb-4\">\r\n              \r\n                  <LinkButton\r\n                  name={'Edit'}\r\n                  url={`/updateBranchManagerInformation/${id}/${branchManager?.id}`}\r\n                  className={\"btn btn-primary px-lg-5 px-md-3 px-sm-1 py-2\"}\r\n                  \r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center pb-3\">\r\n                    <h5 className=\"py-b\">\r\n                      <span>{branchManager?.tittle}</span>{\" \"}\r\n                    </h5>\r\n\r\n                    <h5 className=\"py-b\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.email}</span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.phoneNumber}</span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </Card>\r\n            )}\r\n\r\n            {!branchManager.nameTittleId && (\r\n              <Card>\r\n                <div className=\"container py-3\">\r\n                  <Link to={`/addBranchManager/${id}`}>\r\n                    \r\n                    <Button className=\"btn btn-uapp-add \"\r\n                    // onClick={localStorage.removeItem('branchManagerId')}\r\n                    >\r\n                      {\" \"}\r\n                      <i class=\"fas fa-plus\"></i> Add Branch Manager{\" \"}\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Manager;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, ButtonGroup, Card, Col, Form, FormGroup, Input, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\r\nimport get from '../../../../helpers/get';\r\nimport remove from '../../../../helpers/remove';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport post from '../../../../helpers/post';\r\nimport put from '../../../../helpers/put';\r\n\r\nconst Team = (props) => {\r\n\r\n  const {id,success,setSuccess} = props;\r\n\r\n\r\n    const [teammodalOpen, setteamModalOpen] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [branchTeam, setBranchTeam] = useState([]);\r\n    const [teamInfo, setTeamInfo] = useState({});\r\n    const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n    const [teamName, setTeamName] = useState(\"\");\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const history = useHistory();\r\n    const [delData,setDelData] = useState({});\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n        get(`BranchTeamEmployee/Count/${id}`).then((res) => {\r\n           \r\n            setBranchTeamEmployee(res);\r\n          });\r\n    },[ success, id])\r\n   \r\n   \r\n    const functionimplement = () => {\r\n        setteamModalOpen(true);\r\n    \r\n      };\r\n\r\n      const toggleDeleteTeam = (id) => {\r\n        setDelData(id);\r\n        setDeleteModal(true);\r\n      };\r\n\r\n      const handleTeamUpdate = (id) => {\r\n        get(`BranchTeam/Get/${id}`).then((res) => {\r\n       \r\n          setTeamInfo(res);\r\n          setTeamName(res?.name);\r\n          setIsUpdate(true);\r\n          setteamModalOpen(true);\r\n        });\r\n      };\r\n\r\n      const closeDeleteTeamModal = () => {\r\n        setDeleteModal(false);\r\n      };\r\n    \r\n      const handleDeletebranchTeam = () => {\r\n        \r\n        remove(`BranchTeam/Delete/${delData?.id}`).then((res) => {\r\n          setSuccess(!success);\r\n          setDeleteModal(false);\r\n          addToast(res, {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n          });\r\n          setSuccess(!success);\r\n        });\r\n         \r\n    \r\n      };\r\n\r\n      function closeModal(e) {\r\n        e.preventDefault();\r\n        setteamModalOpen(false);\r\n      }\r\n\r\n      const handleTeamSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        const teamData = new FormData(e.target);\r\n        // for(let  value of teamData.values()){\r\n        \r\n        // }\r\n        if (!isUpdate) {\r\n          post(`BranchTeam/Create`, teamData).then((action) => {\r\n            setSuccess(!success);\r\n            setteamModalOpen(false);\r\n            addToast(action?.data?.message, {\r\n              appearance: \"success\",\r\n              autoDismiss: true,\r\n            });\r\n            // history.push(`/branchProfile/${branchId}`);\r\n          });\r\n        } else {\r\n          for (let val of teamData.values()) {\r\n           \r\n          }\r\n          put(`BranchTeam/Update`, teamData).then((res) => {\r\n           \r\n            setIsUpdate(false);\r\n            setSuccess(!success);\r\n            setteamModalOpen(false);\r\n            addToast(res.data?.message, {\r\n              appearance: \"success\",\r\n              autoDismiss: true,\r\n            });\r\n    \r\n            // history.push(`/branchProfile/${branchId}`);\r\n          });\r\n        }\r\n        // setTeamName('');\r\n      };\r\n\r\n      const showTeamInfo = (data) => {\r\n        history.push(`/teamEmployee/${id}/${data}`);\r\n      }\r\n\r\n    return (\r\n        <div>\r\n             <div>\r\n        <Modal isOpen={teammodalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n          {isUpdate ? (\r\n            <ModalHeader>Update Team Name</ModalHeader>\r\n          ) : (\r\n            <ModalHeader>Create a New Team</ModalHeader>\r\n          )}\r\n          <ModalBody>\r\n            <Form onSubmit={handleTeamSubmit}>\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"branchId\"\r\n                id=\"branchId\"\r\n                value={id}\r\n              />\r\n              {isUpdate ? (\r\n                <input type=\"hidden\" name=\"id\" id=\"id\" value={teamInfo?.id} />\r\n              ) : null}\r\n              {isUpdate ? (\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Team Name</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      defaultValue={teamName}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              ) : (\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Team Name</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Add team name\"\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              )}\r\n\r\n              <FormGroup\r\n                className=\"has-icon-left position-relative\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Button\r\n                  color=\"danger\"\r\n                  className=\"mr-1 mt-3\"\r\n                  onClick={closeModal}\r\n                >\r\n                  Close\r\n                </Button>\r\n\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-3\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n            <Card>\r\n              <div className=\"container mt-3 d-flex justify-content-between\">\r\n\r\n              <div>\r\n                <span className='branch-title-style'>\r\n                  Branch Team\r\n                </span>\r\n                </div>\r\n                \r\n                <div>\r\n                <Button\r\n                  onClick={functionimplement}\r\n                  className=\"btn btn-uapp-add \"\r\n                >\r\n                  {\" \"}\r\n                  <i class=\"fas fa-plus\"></i> Add Team{\" \"}\r\n                </Button>\r\n                </div>\r\n\r\n               \r\n              </div>\r\n\r\n              {branchTeamEmployee.length > 0 && (\r\n                <div className=\"table-responsive container mt-3\">\r\n                  <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                      <tr style={{ textAlign: \"center\" }}>\r\n                        <th>Name</th>\r\n                        <th>Employees</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {branchTeamEmployee?.map((btEmployee) => (\r\n                        <tr key={btEmployee.id} style={{ textAlign: \"center\" }}>\r\n                          <td>{btEmployee?.teamName}</td>\r\n                       \r\n                            <td>\r\n                              <span className='badge badge-primary'\r\n                              style={{ cursor: 'pointer'}}\r\n                              onClick={()=>showTeamInfo(btEmployee?.id)}\r\n                              >\r\n                              \r\n                              {btEmployee?.employeeCount}\r\n                              </span>\r\n                            </td>\r\n                   \r\n                          <td>\r\n                          \r\n                            \r\n                                {\" \"}\r\n                                <i class=\"fas fa-edit warning icon-hover-style\"\r\n                                onClick={() => handleTeamUpdate(btEmployee?.id)}\r\n                                ></i>{\" \"}\r\n                             \r\n\r\n                             \r\n                                <i class=\"fas fa-trash-alt text-danger icon-hover-style\"\r\n                                 onClick={() => toggleDeleteTeam(btEmployee)}\r\n                                ></i>\r\n                           \r\n                          \r\n                            <Modal\r\n                              isOpen={deleteModal}\r\n                              toggle={closeDeleteTeamModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={handleDeletebranchTeam}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeDeleteTeamModal}>NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              )}\r\n\r\n              {branchTeamEmployee.length <= 0 && (\r\n                <h5 className=\"text-center mt-3 mb-4\">Team Data Not Found</h5>\r\n              )}\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Team;","import React from 'react';\r\nimport  { useEffect, useState } from \"react\";\r\nimport { Button, ButtonGroup, Card, CardBody, CardHeader, Col, Form, FormGroup, Modal, ModalBody, ModalFooter, Row, Table } from 'reactstrap';\r\nimport Select from \"react-select\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport remove from '../../../../helpers/remove';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport get from '../../../../helpers/get';\r\nimport post from '../../../../helpers/post';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\nimport LinkButton from '../../Components/LinkButton';\r\n\r\nconst AssignTeam = (props) => {\r\n\r\n\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      background: '#fff',\r\n      borderColor: '#9e9e9e',\r\n      minHeight: '30px',\r\n      height: '40px',\r\n      boxShadow: state.isFocused ? null : null,\r\n      \r\n    }),\r\n\r\n    menu: () => ({\r\n      \r\n      overflowY: 'auto'\r\n      \r\n    }),\r\n   \r\n   \r\n\r\n    // valueContainer: (provided, state) => ({\r\n    //   ...provided,\r\n    //   height: '30px',\r\n    //   padding: '0 6px'\r\n    // }),\r\n\r\n    // input: (provided, state) => ({\r\n    //   ...provided,\r\n    //   margin: '0px',\r\n    // }),\r\n    // indicatorSeparator: state => ({\r\n    //   display: 'none',\r\n    // }),\r\n    // indicatorsContainer: (provided, state) => ({\r\n    //   ...provided,\r\n    //   height: '30px',\r\n    // }),\r\n  };\r\n\r\n    const {id, success, setSuccess} = props;\r\n    const history = useHistory();\r\n    const [branchEmployee, setBranchEmployee] = useState([]);\r\n    const [serialNum,setSerialNum] = useState(1);\r\n  \r\n    const [employeeModal, setEmployeeModal] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [menus, setMenus] = useState([]);\r\n    let [checked, setChecked] = useState([]);\r\n    const [branchTeamLabel, setBranchTeamLabel] = useState(\"Select team\");\r\n    const [branchTeamValue, setBranchTeamValue] = useState();\r\n    const [branchTeam, setBranchTeam] = useState([]);\r\n    const [branchEmployeeCheckbox, setBranchEmployeeCheckbox] = useState([]);\r\n    const [deleteId, setDeleteId] = useState('');\r\n      \r\n   \r\n    \r\n\r\n    const handleAddBranchEmployee = () => {\r\n        \r\n        history.push(`/branchEmployeeInformation/${id}`);\r\n      };\r\n\r\n      useEffect(()=>{\r\n        get(`BranchTeam/GetbyBranch/${id}`).then((res) => {\r\n            \r\n            setBranchTeam(res);\r\n          });\r\n\r\n          get(`BranchEmployee/GetbyBranch/${id}`).then((res) => {\r\n        \r\n            setBranchEmployee(res);\r\n        \r\n          });\r\n      \r\n      },[success, id])\r\n\r\n      const handleEditBranchEmployee = (id) => {\r\n        history.push(`branchEmployeeInformation/${id}`);\r\n      };\r\n\r\n      const toggleDeleteEmployee = (id) => {\r\n        setDeleteId(id?.id);\r\n        setEmployeeModal(true);\r\n      }\r\n\r\n      const closeDeleteEmployeeModal = () => {\r\n        setEmployeeModal(false);\r\n      }\r\n\r\n      // const handleDeleteEmployee = (id) =>{\r\n      //   handleDeleteBranchEmployee(id);\r\n    \r\n      // }\r\n\r\n      const handleDeleteBranchEmployee = () => {\r\n      \r\n        remove(`BranchEmployee/Delete/${deleteId}`).then((res) => {\r\n          addToast(res, {\r\n            appearance: \"error\",\r\n            autoDismiss: true\r\n          });\r\n         setSuccess(!success);\r\n         \r\n        });\r\n        setEmployeeModal(false);\r\n      };\r\n\r\n      const closeEmployeeModal = () => {\r\n        setEmployeeModal(false);\r\n      }\r\n\r\n\r\n      const gotoEmployeeProfile = (data) => {\r\n\r\n     \r\n        history.push(`/branchEmployeeProfile/${id}/${data?.id}`);\r\n        \r\n  \r\n      }\r\n\r\n\r\n       // on Select Role\r\n  const selectBranchTeamName = (label, value) => {\r\n    setMenus([]);\r\n    checked = [];\r\n    setBranchTeamLabel(label);\r\n    setBranchTeamValue(value);\r\n    \r\n\r\n    get(`BranchTeamEmployee/GetUnassigned/${value}`).then((action) => {\r\n     \r\n      setMenus(action);\r\n      setSuccess(!success);\r\n      let defaultChecked = checked;\r\n      if (action.length > 0) {\r\n        for (let i = 0; i < action.length; i++) {\r\n          const menu = action[i];\r\n          if (menu.isChecked === true) {\r\n            const id = menu.id.toString();\r\n            defaultChecked.push(id);\r\n            setChecked([...defaultChecked]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n  \r\n    const subdata = new FormData(e.target);\r\n    subdata.append('teamId',branchTeamValue);\r\n    subdata.append('checkedArray',checked);\r\n   \r\n    // for( let val of subData.values()){\r\n  \r\n    // }\r\n    post('BranchTeamEmployee/Create',subdata)\r\n    .then(res => {\r\n     \r\n      history.push(`/branchProfile/${id}`);\r\n      addToast(res?.data?.message,{\r\n        appearance: 'success',\r\n        autoDismiss: true\r\n      })\r\n      setSuccess(!success);\r\n      setMenus([]);\r\n    checked = [];\r\n      setBranchTeamLabel('Select Team');\r\n      \r\n    })\r\n\r\n  }\r\n\r\n    // handling checkbox\r\n    const handleCheck = (e) => {\r\n        let id = e.target.id;\r\n        let val = e.target.checked;\r\n    \r\n        if (val === true) {\r\n          setChecked([...checked, id]);\r\n        } else {\r\n          const index = checked.indexOf(id);\r\n          if (index > -1) {\r\n            checked.splice(index, 1);\r\n          }\r\n        }\r\n      };\r\n\r\n      const branchTeamName = branchTeam?.map((branch) => ({\r\n        label: branch.name,\r\n        value: branch.id,\r\n      }));\r\n    \r\n      // on Select All Checkbox\r\n  const handleSelectAll = (e) => {\r\n    let newChecked = [];\r\n    const val = e.target.checked;\r\n    if (val === true) {\r\n      menus.map((menu) => {\r\n        const menuId = menu.id.toString();\r\n        newChecked.push(menuId);\r\n        document.getElementById(menu.id).checked = true;\r\n      });\r\n      setChecked([...newChecked]);\r\n    }\r\n\r\n    if (val === false) {\r\n      {\r\n        menus.map((menu) => {\r\n          document.getElementById(menu.id).checked = false;\r\n        });\r\n        setChecked([]);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        <div>\r\n              <Card>\r\n              <div className=\"container mt-3 d-flex justify-content-between\">\r\n\r\n                <div>\r\n\r\n                     <span className='branch-title-style'>Branch Employee</span>\r\n                </div>\r\n\r\n               <div>\r\n               <Button\r\n                  onClick={handleAddBranchEmployee}\r\n                  className=\"btn btn-uapp-add \"\r\n                >\r\n                  {\" \"}\r\n                  <i class=\"fas fa-plus\"></i> Add New Employee{\" \"}\r\n                </Button>\r\n               </div>\r\n\r\n                {/* <ButtonForFunction \r\n                className={\"btn btn-uapp-add \"} /> */}\r\n\r\n\r\n              </div>\r\n\r\n              {branchEmployee.length > 0 ? (\r\n                <div className=\"table-responsive container mt-3\">\r\n                  <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                      <tr style={{ textAlign: \"center\" }}>\r\n                        <th>SL/NO</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone Number</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {branchEmployee?.map((employee, i) => (\r\n                        <tr key={employee.id} style={{ textAlign: \"center\" }}>\r\n                          <td>{serialNum + i}</td>\r\n                          <td>{employee?.firstName}</td>\r\n                          <td>{employee?.lastName}</td>\r\n                          <td>{employee?.email}</td>\r\n                          <td>{employee?.phoneNumber}</td>\r\n                          <td>\r\n                            <ButtonGroup variant=\"text\">\r\n\r\n                            <Button color='primary' className='me-1 btn-sm' onClick={()=>gotoEmployeeProfile(employee)}>\r\n                            <i className=\"fas fa-eye\"></i>\r\n                            </Button>\r\n                              \r\n                              <LinkButton\r\n                              icon={ <i class=\"fas fa-edit\"></i>}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              color={\"warning\"}\r\n                              url={`/branchEmployeeInformation/${id}/${employee?.id}`}\r\n                              />\r\n\r\n                             \r\n\r\n                              <Button\r\n                                color=\"danger\"\r\n                                onClick={() =>\r\n                                  toggleDeleteEmployee(employee)\r\n                                }\r\n                                className=\"mx-1 btn-sm\"\r\n                              >\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                            <Modal\r\n                              isOpen={employeeModal}\r\n                              toggle={closeDeleteEmployeeModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={handleDeleteBranchEmployee}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeEmployeeModal}>NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              ) : (\r\n                <h5 className=\"text-center mt-3\">Employee Data Not Found</h5>\r\n              )}\r\n\r\n             \r\n            </Card>\r\n\r\n            <Card>\r\n                <CardHeader>\r\n                    <p className='fw-bold'>Assign Team Employee</p>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    <FormGroup row>\r\n                            <Col sm=\"6\" md=\"4\" lg=\"3\">\r\n                                <Select\r\n                                    styles={customStyles}\r\n                                    options={branchTeamName}\r\n                                    value={{label: branchTeamLabel, value: branchTeamValue }}\r\n                                    onChange={opt => selectBranchTeamName(opt.label, opt.value)}\r\n                                    name=\"type\"\r\n                                    id=\"type\"\r\n                                />\r\n                                </Col>\r\n                    </FormGroup>\r\n\r\n\r\n                    <FormGroup>\r\n\r\n                                <Row>\r\n                                <Col sm=\"12\">\r\n                                {\r\n                                    menus.length > 0 &&\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" onChange={(e)=>handleSelectAll(e)} type=\"checkbox\" name=\"\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"\">Select All</label>\r\n                                    </div>\r\n                                }\r\n                        \r\n                                </Col>\r\n                                {\r\n                                    branchTeamValue &&\r\n                                    menus?.map(menu =>\r\n                                    \r\n                                    <Col xs=\"6\" sm=\"4\" md=\"3\" key={menu.id}>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" onChange={(e)=>handleCheck(e)} name=\"\" id={menu.id} defaultChecked={menu.isChecked}  />\r\n                                        <label className=\"form-check-label\" htmlFor=\"\">{menu.firstName}{' '}{menu.lastName}</label>\r\n                                    </div>\r\n                                    </Col>\r\n                                    )\r\n                                }\r\n                                </Row>\r\n                        </FormGroup>\r\n                \r\n\r\n                    <FormGroup style={{display: 'flex',justifyContent: 'space-between'}}>\r\n                            <Row>\r\n\r\n                                <Col>\r\n                                <Button.Ripple\r\n                                type=\"submit\"\r\n                                className=\"mr-1 mt-3 badge-primary\"\r\n                            >\r\n                                Submit\r\n                            </Button.Ripple>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                  \r\n                </CardBody>\r\n\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignTeam;","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport get from \"../../../../helpers/get\";\r\nimport remove from \"../../../../helpers/remove\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Select from \"react-select\";\r\nimport post from \"../../../../helpers/post\";\r\n\r\nimport put from \"../../../../helpers/put\";\r\nimport Manager from \"../IndividualComponent/Manager\";\r\nimport Team from \"../IndividualComponent/Team\";\r\nimport AssignTeam from \"../IndividualComponent/AssignTeam\";\r\n\r\nconst BranchProfile = (props) => {\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n  const { id } = useParams();\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [branchInfo, setBranchInfo] = useState({});\r\n  const [branchManager, setBranchManager] = useState({});\r\n  \r\n  const [serialNum, setSerialNum] = useState(1);\r\n\r\n\r\n  const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [teamInfo, setTeamInfo] = useState({});\r\n\r\n  const [success, setSuccess] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n\r\n  // add on close\r\n\r\n  // add on extra\r\n\r\n  // submitting form\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   setModalOpen(true);\r\n  //   // //  watch form data values\r\n  //   // for (var value of subData.values()) {\r\n\r\n  //   //  }\r\n\r\n  // }\r\n\r\n\r\n\r\n  //\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    get(`Branch/Get/${id}`).then((res) => {\r\n     \r\n      setBranchInfo(res);\r\n    });\r\n\r\n    \r\n  }, [id]);\r\n\r\n  const backToBranchList = () => {\r\n    history.push(\"/branchList\");\r\n  };\r\n  function closeModal(e) {\r\n    e.preventDefault();\r\n    setModalOpen(false);\r\n  }\r\n\r\n\r\n  const handleTeamUpdate = (id) => {\r\n    get(`BranchTeam/Get/${id}`).then((res) => {\r\n    \r\n      setTeamInfo(res);\r\n      setTeamName(res?.name);\r\n      setIsUpdate(true);\r\n      setModalOpen(true);\r\n    });\r\n  };\r\n  const handleTeamSubmit = (e) => {\r\n    e.preventDefault();\r\n    const teamData = new FormData(e.target);\r\n    // for(let  value of teamData.values()){\r\n   \r\n    // }\r\n    if (!isUpdate) {\r\n      post(`BranchTeam/Create`, teamData).then((action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        history.push(\"/branchList\");\r\n      });\r\n    } else {\r\n      for (let val of teamData.values()) {\r\n        \r\n      }\r\n      put(`BranchTeam/Update`, teamData).then((res) => {\r\n        \r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(res.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n\r\n        history.push(\"/branchList\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const functionimplement = () => {\r\n    setModalOpen(true);\r\n\r\n  };\r\n\r\n  const toggleDeleteTeam = (id) => {\r\n    localStorage.setItem(\"teamId\", id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n \r\n\r\n  // const handleDeletebranchTeam = () => {\r\n  //   const id = localStorage.getItem(\"teamId\");\r\n  //   remove(`BranchTeam/Delete/${id}`).then((res) => {\r\n  //     setDeleteModal(false);\r\n  //     addToast(res?.data?.message, {\r\n  //       appearance: \"error\",\r\n  //       autoDismiss: true,\r\n  //     });\r\n     \r\n  //   });\r\n  //    const newTeamData = branchTeam.filter((team) => team?.id != id);\r\n  \r\n  //     setBranchTeam(newTeamData);\r\n\r\n  // };\r\n\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-light\">Branch Details</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToBranchList} className=\"text-light\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Branch List\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n    \r\n\r\n      <div className=\"uapp-employee-profile\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"uapp-employee-profile-right\">\r\n              <div className=\"uapp-profile-CardHeader\">\r\n                {/* <div className=\"uapp-circle-image margin-top-minus\">\r\n                  <img  alt='provider_image' />\r\n                </div>     */}\r\n                <div className=\"py-3\">\r\n                  <h5 className=\"py-1\">\r\n                    Branch Name:{\" \"}\r\n                    <span className=\"text-primary\">{branchInfo?.name}</span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    Branch Address:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.addressLine}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Email:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.email}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Phone Number:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.phoneNumber}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <CardBody>\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center\">\r\n                    <h5>\r\n                      {\" \"}\r\n                      Country:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.country?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5>\r\n                      {\" \"}\r\n                      State:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.state?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"8\">\r\n\r\n            <AssignTeam\r\n            id ={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            >\r\n\r\n            </AssignTeam>\r\n          \r\n          </Col>\r\n\r\n          <Col md=\"4\">\r\n            <Manager \r\n            id={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            ></Manager>\r\n        \r\n            <Team\r\n            id={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            \r\n            />\r\n           \r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BranchProfile;\r\n"],"sourceRoot":""}