{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","views/SMS/Components/CustomButtonRipple.js","views/SMS/UniversitySubjects/SubjectIntake.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","CustomButtonRipple","isDisabled","Ripple","SubjectIntake","camId","useParams","subbId","useState","intake","setIntake","setStatus","intakeLabel","setIntakeLabel","intakeValue","setIntakeValue","statusLabel","setStatusLabel","statusValue","setStatusValue","statusError","setStatusError","subIntake","setSubIntake","success","setSuccess","serialNum","deleteModal","setDeleteModal","permissions","JSON","parse","setIntId","intName","setIntName","intakeError","setIntakeError","buttonStatus","setButtonStatus","buttonStatus1","setButtonStatus1","useHistory","addToast","useLocation","useToasts","useEffect","get","then","intakes","map","intakeOptions","label","value","id","statuss","statusOptions","closeDeleteModal","md","onSubmit","e","preventDefault","subData","FormData","target","data","isSuccess","message","appearance","autoDismiss","row","options","onChange","opt","defaultValue","style","display","justifyContent","includes","permissionList","Add_New_subject_intake","textAlign","int","i","key","scope","intakeStatus","width","Delete_subject_intake","isOpen","toggle","remove","action","handleDelete"],"mappings":"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","file":"static/js/273.19b56f7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst CustomButtonRipple = ({isDisabled, className, icon,color, permission, type,url, func, name}) => {\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n         \r\n            <Button.Ripple\r\n               disabled={isDisabled}\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {name}\r\n            </Button.Ripple>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomButtonRipple;","import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport get from \"../../../helpers/get\";\r\nimport { useState } from \"react\";\r\nimport { borderRadius } from \"@mui/system\";\r\nimport post from \"../../../helpers/post\";\r\nimport remove from \"../../../helpers/remove\";\r\nimport CustomButtonRipple from \"../Components/CustomButtonRipple\";\r\nimport ButtonForFunction from \"../Components/ButtonForFunction\";\r\nimport { permissionList } from \"../../../constants/AuthorizationConstant\";\r\n\r\nconst SubjectIntake = () => {\r\n  const { camId } = useParams();\r\n  const { subbId } = useParams();\r\n\r\n\r\n\r\n  const [intake, setIntake] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n\r\n  const [intakeLabel, setIntakeLabel] = useState(\"Select Intake\");\r\n  const [intakeValue, setIntakeValue] = useState(0);\r\n  const [statusLabel, setStatusLabel] = useState(\"Select Status\");\r\n  const [statusValue, setStatusValue] = useState(0);\r\n  const [statusError, setStatusError] = useState(false);\r\n  const [subIntake, setSubIntake] = useState([]);\r\n  const [success, setSuccess] = useState(false);\r\n  const [serialNum, setSerialNum] = useState(1);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const permissions = JSON.parse(localStorage.getItem('permissions'));\r\n\r\n  const [intId, setIntId] = useState(0);\r\n  const [intName, setIntName] = useState('');\r\n\r\n  const [intakeError, setIntakeError] = useState(false);\r\n\r\n  const [buttonStatus,setButtonStatus] = useState(false);\r\n  const [buttonStatus1,setButtonStatus1] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { addToast } = useToasts();\r\n\r\n\r\n\r\n  // localStorage.setItem(\"camppId\", location?.campusId);\r\n  // localStorage.setItem(\"subbId\", location?.subjectId);\r\n\r\n  useEffect(() => {\r\n    get(\"Intake/Index\").then((res) => {\r\n     \r\n      setIntake(res);\r\n    });\r\n\r\n    get(\"IntakeStatus/GetAll\").then((res) => {\r\n     \r\n      setStatus(res);\r\n    });\r\n\r\n    get(\r\n      `SubjectIntake/GetAllSubjectIntake?subjectId=${subbId}&campusId=${camId}`\r\n    ).then((res) => {\r\n     \r\n      setSubIntake(res);\r\n    });\r\n  }, [success]);\r\n\r\n  const intakes = intake.map((intakeOptions) => ({\r\n    label: intakeOptions?.name,\r\n    value: intakeOptions?.id,\r\n  }));\r\n  const statuss = status.map((statusOptions) => ({\r\n    label: statusOptions?.name,\r\n    value: statusOptions?.id,\r\n  }));\r\n\r\n  const selectIntake = (label, value) => {\r\n    setIntakeError(false);\r\n    setIntakeLabel(label);\r\n    setIntakeValue(value);\r\n  };\r\n\r\n  const selectStatus = (label, value) => {\r\n    setStatusError(false);\r\n    setStatusLabel(label);\r\n    setStatusValue(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const subData = new FormData(e.target);\r\n    // for (var x of subData) {\r\n     \r\n    // }\r\n\r\n    if (intakeValue === 0) {\r\n      setIntakeError(true);\r\n    }\r\n    else if (statusValue === 0) {\r\n      setStatusError(true);\r\n    } else {\r\n      setButtonStatus(true);\r\n      post(`SubjectIntake/AssignToSubject`, subData).then((res) => {\r\n        setButtonStatus(false);\r\n        if (res.status === 200 && res.data.isSuccess === true) {\r\n          addToast(res?.data?.message, {\r\n            appearance: \"success\",\r\n            autoDismiss: true,\r\n          });\r\n          setSuccess(!success);\r\n          setIntakeLabel(\"Select Intake\");\r\n          setIntakeValue(0);\r\n          setStatusLabel(\"Select Status\");\r\n          setStatusValue(0);\r\n        } else {\r\n          addToast(res?.data?.message, {\r\n            appearance: \"warning\",\r\n            autoDismiss: true,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleDanger = (name, id) => {\r\n    setIntName(name);\r\n    setIntId(id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    setIntName('');\r\n    setIntId(0);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setButtonStatus1(true);\r\n    const returnValue = remove(`SubjectIntake/DeleteById/${id}`).then(\r\n      (action) => {\r\n        setButtonStatus1(false);\r\n        setSuccess(!success);\r\n        setDeleteModal(false);\r\n        addToast(action, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n        setIntName('');\r\n        setIntId(0);\r\n      }\r\n    );\r\n  };\r\n\r\n  const backToList = () => {\r\n    history.push(`/campusSubjectList/${camId}`);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIntakeLabel(\"Select Intake\");\r\n    setIntakeValue(0);\r\n    setStatusLabel(\"Select Status\");\r\n    setStatusValue(0);\r\n    setIntakeError(false);\r\n    setStatusError(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Subject Intake List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span className=\"text-white\" onClick={backToList}>\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Campus Subject List\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <div className=\"\">\r\n        <Card>\r\n          <Row className=\"pt-3 gx-4\">\r\n            <Col md=\"4\">\r\n            <div className=\"hedding-titel d-flex justify-content-between ml-3 mb-4\">\r\n                  <div>\r\n                    <h5>\r\n                      {\" \"}\r\n                      <b>Add Subject Intake</b>{\" \"}\r\n                    </h5>\r\n\r\n                    <div className=\"bg-h\"></div>\r\n                  </div>\r\n                  {/* <div className=\"text-right edit-style  p-3\">\r\n                 <span> <i className=\"fas fa-pencil-alt pencil-style\"></i> </span>\r\n               </div> */}\r\n                </div>\r\n\r\n              <Form className=\"mt-2 ml-4\" onSubmit={handleSubmit}>\r\n                <input\r\n                  type=\"hidden\"\r\n                  name=\"campusId\"\r\n                  id=\"campusId\"\r\n                  value={camId}\r\n                />\r\n\r\n                <input\r\n                  type=\"hidden\"\r\n                  name=\"subjectId\"\r\n                  id=\"subjectId\"\r\n                  value={subbId}\r\n                />\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>\r\n                      Name <span className=\"text-danger\">*</span>{\" \"}\r\n                    </span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Select\r\n                      options={intakes}\r\n                      value={{ label: intakeLabel, value: intakeValue }}\r\n                      onChange={(opt) => selectIntake(opt.label, opt.value)}\r\n                      defaultValue={intakeValue}\r\n                      name=\"intakeId\"\r\n                      id=\"intakeId\"\r\n                    />\r\n\r\n                    {intakeError && (\r\n                      <span className=\"text-danger\">\r\n                        Intake is required\r\n                      </span>\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>\r\n                      Status <span className=\"text-danger\">*</span>{\" \"}\r\n                    </span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Select\r\n                      options={statuss}\r\n                      value={{ label: statusLabel, value: statusValue }}\r\n                      onChange={(opt) => selectStatus(opt.label, opt.value)}\r\n                      name=\"statusId\"\r\n                      id=\"statusId\"\r\n                    />\r\n\r\n                    {statusError && (\r\n                      <span className=\"text-danger\">\r\n                        Status is required\r\n                      </span>\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                  className=\"has-icon-left position-relative\"\r\n                  style={{ display: \"flex\", justifyContent: \"end\" }}\r\n                >\r\n\r\n                  <Button \r\n                    color=\"danger\"\r\n                    className={\"mr-0 mt-3\"}\r\n                    onClick={handleReset}\r\n                    >Reset\r\n                  </Button>\r\n\r\n                  {\r\n                    permissions?.includes(permissionList.Add_New_subject_intake) ? \r\n                    <CustomButtonRipple\r\n                    type={\"submit\"}\r\n                    className={\"mr-0 mt-3 ml-1 badge-primary\"}\r\n                    name={\"Submit\"}\r\n                    permission={6}\r\n                    isDisabled={buttonStatus}\r\n                  />\r\n                  :\r\n                  null\r\n                  }\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n            <Col md=\"8\">\r\n            <div className=\"hedding-titel d-flex justify-content-between ml-3 mb-4\">\r\n                  <div>\r\n                    <h5>\r\n                      {\" \"}\r\n                      <b>Intake List</b>{\" \"}\r\n                    </h5>\r\n\r\n                    <div className=\"bg-h\"></div>\r\n                  </div>\r\n                  {/* <div className=\"text-right edit-style  p-3\">\r\n                 <span> <i className=\"fas fa-pencil-alt pencil-style\"></i> </span>\r\n               </div> */}\r\n                </div>\r\n              <div className=\"table-responsive page-header \">\r\n                <Table className=\"table-sm table-bordered rounded\">\r\n                  <thead className=\"thead-uapp-bg\">\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                      <th>SL/NO</th>\r\n                      <th>Name</th>\r\n                      <th>Status</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {subIntake?.map((int, i) => (\r\n                      <tr key={int?.id} style={{ textAlign: \"center\" }}>\r\n                        <th scope=\"row\">{serialNum + i}</th>\r\n                        <td>{int?.intake?.name}</td>\r\n                        <td>{int?.intakeStatus?.name}</td>\r\n\r\n                        <td style={{ width: \"8%\" }} className=\"text-center\">\r\n                          {/* <ButtonGroup variant=\"text\">\r\n                        <Link to= \"\">\r\n                          <Button color=\"primary\" className=\"mx-1 btn-sm\">\r\n                            {\" \"}\r\n                            <i className=\"fas fa-eye\"></i>{\" \"}\r\n                          </Button>\r\n                        </Link>\r\n\r\n                          <Link to=''>\r\n                            <Button color=\"dark\" className=\"mx-1 btn-sm\">\r\n                              {\" \"}\r\n                              <i className=\"fas fa-edit\"></i>{\" \"}\r\n                            </Button>\r\n                          </Link>\r\n\r\n                          <Button onClick='' color=\"danger\" className=\"mx-1 btn-sm\">\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n                          </Button>\r\n                        </ButtonGroup> */}\r\n\r\n                          {/* <Button className=\"mx-1 btn-sm\" onClick={() => toggleDanger(int?.intake?.name, int?.intake?.id)} color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n\r\n                          {\r\n                            permissions?.includes(permissionList.Delete_subject_intake) ?\r\n                            <ButtonForFunction\r\n                            className={\"mx-1 btn-sm\"}\r\n                            func={() =>\r\n                              toggleDanger(int?.intake?.name, int?.intake?.id)\r\n                            }\r\n                            color={\"danger\"}\r\n                            icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                            permission={6}\r\n                          />\r\n                          :\r\n                          null\r\n                          }\r\n\r\n                          <Modal\r\n                            isOpen={deleteModal}\r\n                            toggle={closeDeleteModal}\r\n                            className=\"uapp-modal\"\r\n                          >\r\n                            <ModalBody>\r\n                              <p>\r\n                                Are You Sure to Delete this{\" \"}\r\n                                <span className=\"font-weight-bold\">\r\n                                  {intName}\r\n                                </span>{\" \"}\r\n                                ? Once Deleted it can't be Undone!\r\n                              </p>\r\n                            </ModalBody>\r\n\r\n                            <ModalFooter>\r\n                              <Button\r\n                                disabled={buttonStatus1}\r\n                                color=\"danger\"\r\n                                onClick={() => handleDelete(int?.id)}\r\n                              >\r\n                                YES\r\n                              </Button>\r\n                              <Button onClick={closeDeleteModal}>NO</Button>\r\n                            </ModalFooter>\r\n                          </Modal>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubjectIntake;\r\n"],"sourceRoot":""}