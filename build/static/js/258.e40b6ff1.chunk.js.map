{"version":3,"sources":["views/SMS/DistributionLevelSetting/Form.js","views/SMS/DistributionLevelSetting/List.js","views/SMS/DistributionLevelSetting/Index.js","helpers/post.js","helpers/put.js","views/SMS/Search/Loader/Loader.js"],"names":["DistributionLevelSettingForm","props","success","setSuccess","name","setName","value","setValue","percent","setPercent","update","setUpdate","data","setData","addToast","useToasts","useState","buttonStatus","setButtonStatus","className","onSubmit","event","preventDefault","subData","FormData","target","put","then","res","status","isSuccess","message","appearance","autoDismiss","post","type","id","FormGroup","row","Col","md","Input","onChange","e","required","Button","color","disabled","DistributionLevelSettingList","distributionData","toggleUpdate","deleteModal","setDeleteModal","delData","setDelData","console","log","confirmDelete","remove","Table","style","textAlign","map","ls","i","key","levelName","levelValue","commissionPercent","width","ButtonGroup","variant","onClick","Modal","isOpen","toggle","ModalBody","ModalFooter","DistributionLevelSetting","history","useHistory","setDistributionData","loading","setLoading","useEffect","get","Loader","Card","CardHeader","push","CardBody","AuthStr","localStorage","getItem","url","body","axios","rootUrl","headers","response","Axios","src","loader"],"mappings":"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","file":"static/js/258.e40b6ff1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, TabContent, TabPane, Nav, NavItem, NavLink, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport post from '../../../helpers/post';\r\nimport put from '../../../helpers/put';\r\nconst DistributionLevelSettingForm = (props) => {\r\n\r\n    const {success, setSuccess, name, setName, value, setValue, percent, setPercent, update, setUpdate, data, setData} = props;\r\n\r\n    const {addToast} = useToasts();\r\n    const [buttonStatus,setButtonStatus] = useState(false);\r\n\r\n  \r\n    \r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const subData = new FormData(event.target);\r\n\r\n        if(update){\r\n            setButtonStatus(true);\r\n            put(`DistributionLevelSetting/Update`,subData)\r\n            .then(res => {\r\n                setButtonStatus(false);\r\n                    if(res?.status == 200 && res?.data?.isSuccess == true){\r\n                        addToast(res?.data?.message,{\r\n                            appearance: 'success',\r\n                            autoDismiss: true\r\n                        })\r\n                        setName('');\r\n                        setValue('');\r\n                        setPercent('');\r\n                        setSuccess(!success);\r\n                        setData({});\r\n                        setUpdate(false);\r\n                    }\r\n            })\r\n\r\n        }\r\n        else{\r\n            setButtonStatus(true);\r\n            post(`DistributionLevelSetting/Create`,subData)\r\n        .then(res => {\r\n            setButtonStatus(false);\r\n                if(res?.status == 200 && res?.data?.isSuccess == true){\r\n                    addToast(res?.data?.message,{\r\n                        appearance: 'success',\r\n                        autoDismiss: true\r\n                    })\r\n                    setName('');\r\n                    setValue('');\r\n                    setPercent('');\r\n                    setSuccess(!success);\r\n                }\r\n        })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n                <div className='mb-4'>\r\n                <span className='branch-title-style2'>Add Distribution Level Settings</span>\r\n                </div>\r\n\r\n                <form  onSubmit={handleSubmit}> \r\n\r\n\r\n               {\r\n                update ? \r\n\r\n                <input\r\n                type='hidden'\r\n                name='id'\r\n                id='id'\r\n                value={data?.id}\r\n                />\r\n                :\r\n                null\r\n               }\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                <Col md=\"4\">\r\n                <span>\r\n                Level Name <span className=\"text-danger\"></span>\r\n                </span>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                <Input\r\n                type='text'\r\n                name=\"levelName\"\r\n                id=\"levelName\"\r\n                value={name}\r\n                onChange={(e)=> setName(e.target.value)}\r\n                required\r\n\r\n                />\r\n\r\n                </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                <Col md=\"4\">\r\n                <span>\r\n                Level Value <span className=\"text-danger\"></span>\r\n                </span>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                <Input\r\n                type='number'\r\n                name=\"levelValue\"\r\n                id=\"levelValue\"\r\n                value={value}\r\n                onChange={(e)=>setValue(e.target.value)}\r\n                required\r\n\r\n                />\r\n\r\n                </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                <Col md=\"4\">\r\n                <span>\r\n                Commission Percent <span className=\"text-danger\"></span>\r\n                </span>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                <Input\r\n                type='number'\r\n                name=\"commissionPercent\"\r\n                id=\"commissionPercent\"\r\n                value={percent}\r\n                onChange={(e) =>setPercent(e.target.value)}\r\n                required\r\n\r\n                />\r\n\r\n                </Col>\r\n                </FormGroup>\r\n\r\n               \r\n\r\n                <div className='d-flex justify-content-end mt-3'>\r\n                \r\n                    \r\n                <div>\r\n                <Button color='primary' type='submit' disabled={buttonStatus}>\r\n                    Submit\r\n\r\n                    </Button>\r\n                </div>\r\n\r\n                </div>\r\n\r\n                    \r\n\r\n\r\n                </form>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistributionLevelSettingForm;","import React, { useState } from 'react';\r\nimport remove from '../../../helpers/remove';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, TabContent, TabPane, Nav, NavItem, NavLink, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\n\r\nconst DistributionLevelSettingList = (props) => {\r\n\r\n    const {success, setSuccess, distributionData, toggleUpdate} = props;\r\n    const [deleteModal,setDeleteModal] = useState(false);\r\n    const [delData,setDelData] = useState({});\r\n    const {addToast} = useToasts();\r\n    const [buttonStatus,setButtonStatus] = useState(false);\r\n\r\n    console.log(distributionData);\r\n\r\n    const toggleDanger = (data) => {\r\n        setDelData(data);\r\n        setDeleteModal(true);\r\n\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n      setButtonStatus(true);\r\n        remove(`DistributionLevelSetting/Delete/${delData?.id}`)\r\n        .then(res => {\r\n          setButtonStatus(false);\r\n            addToast(res,{\r\n                appearance:'error',\r\n                autoDismiss: true\r\n            })\r\n            setSuccess(!success);\r\n            setDeleteModal(false);\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='mb-4'>\r\n              <span className='branch-title-style2'>Distribution Level Settings List</span>\r\n             </div>\r\n\r\n             <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                    \r\n                    <th>Level Name</th>\r\n                     <th>Level Value</th>\r\n                     <th>Commission Percentage</th>\r\n                     <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {distributionData?.map((ls, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                    \r\n                      <td>\r\n                        {ls?.levelName}\r\n                      </td>\r\n                      <td>\r\n                        {ls?.levelValue}\r\n                      </td>\r\n                      <td>\r\n                        {ls?.commissionPercent}\r\n                      </td>\r\n                     \r\n                     \r\n                     \r\n                      <td style={{ width: \"15%\" }} className=\"text-center\">\r\n                        <ButtonGroup variant=\"text\">\r\n                       \r\n\r\n\r\n                            <Button className='mr-1 btn-sm' color='warning' onClick={()=>toggleUpdate(ls)}>\r\n                            <i className=\"fas fa-edit\"></i>\r\n\r\n\r\n                            </Button>\r\n\r\n                            <Button className='ml-1 btn-sm' color='danger' onClick={()=>toggleDanger(ls)}>\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n\r\n\r\n                            </Button>\r\n\r\n\r\n                        </ButtonGroup>\r\n\r\n                     \r\n                        <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n                        <ModalBody>\r\n                          <p>Are You Sure to Delete this ? Once Deleted it can't be Undone!</p>\r\n                        </ModalBody>\r\n        \r\n                        <ModalFooter>\r\n                          <Button  color=\"danger\" onClick={confirmDelete} disabled={buttonStatus}>YES</Button>\r\n                          <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                        </ModalFooter>\r\n                     </Modal>\r\n\r\n\r\n\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                    \r\n                    </tbody>\r\n                    </Table>\r\n\r\n          \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistributionLevelSettingList;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, TabContent, TabPane, Nav, NavItem, NavLink, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport get from '../../../helpers/get';\r\nimport Loader from '../Search/Loader/Loader';\r\nimport DistributionLevelSettingForm from './Form';\r\nimport DistributionLevelSettingList from './List';\r\n\r\nconst DistributionLevelSetting = () => {\r\n\r\n    const history = useHistory();\r\n    const [success,setSuccess] = useState(false);\r\n    const [distributionData, setDistributionData] = useState([]);\r\n    const [name,setName] = useState('');\r\n    const [value,setValue] = useState('');\r\n    const [percent,setPercent] = useState('');\r\n    const [update,setUpdate] = useState(false);\r\n    const [data,setData]= useState({});\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    const backToDashboard = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        get(`DistributionLevelSetting/Index`)\r\n        .then(res => {\r\n            setDistributionData(res);\r\n            setLoading(false);\r\n        })\r\n\r\n    },[success])\r\n\r\n    const toggleUpdate = (data) =>{\r\n        setUpdate(true);\r\n        get(`DistributionLevelSetting/Get/${data?.id}`)\r\n        .then(res => {\r\n            setData(res);\r\n            setName(res?.levelName);\r\n            setValue(res?.levelValue);\r\n            setPercent(res?.commissionPercent);\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n       {\r\n        loading?\r\n        <Loader/>\r\n        :\r\n        <div>\r\n             <Card className=\"uapp-card-bg\">\r\n              <CardHeader className=\"page-header\">\r\n                <h3 className=\"text-white\">Distribution Level Settings</h3>\r\n                <div className=\"page-header-back-to-home\">\r\n                  <span className=\"text-white\" onClick={backToDashboard}>\r\n                    {\" \"}\r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                  </span>\r\n                </div>\r\n              </CardHeader>\r\n            </Card>\r\n\r\n            <Card>\r\n\r\n                <CardBody>\r\n                <div className='row'>\r\n\r\n                <div className='col-md-5'>\r\n                    <DistributionLevelSettingForm \r\n                    success={success}\r\n                    setSuccess={setSuccess}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                    name={name}\r\n                    setName={setName}\r\n                    value={value}\r\n                    setValue={setValue}\r\n                    percent={percent}\r\n                    setPercent={setPercent}\r\n                    data={data}\r\n                    setData={setData}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className='col-md-7'>\r\n                    <DistributionLevelSettingList \r\n                    success={success}\r\n                    setSuccess={setSuccess}\r\n                    distributionData={distributionData}\r\n                    \r\n                    toggleUpdate={toggleUpdate}\r\n                    \r\n                    />\r\n\r\n                </div>\r\n\r\n                </div>\r\n\r\n                </CardBody>\r\n\r\n            </Card>\r\n        </div>\r\n       }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistributionLevelSetting;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport loader from '../../../../assets/img/load.gif'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <img className='img-fluid' src={loader} />\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;"],"sourceRoot":""}