{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/put.js","helpers/post.js","views/SMS/University/AddUniversityState.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","Axios","put","rootUrl","headers","res","response","status","history","push","axios","post","connect","state","useState","universityDetailsList","setUniversityDetailsList","universityState","setUniversityState","modalOpen","setModalOpen","deleteModal","setDeleteModal","countryList","setCountryList","countryLabel","setCountryLabel","countryValue","setCountryValue","success","setSuccess","countryNameError","setCountryNameError","uniStateError","setUniStateError","delUniStateId","setDelUniStateId","delUniStateName","setDelUniStateName","undefined","updateUniState","setUpdateUniState","addToast","useToasts","useHistory","dispatch","useDispatch","permissions","JSON","parse","useEffect","get","then","action","StoreUniversityStateData","closeModal","closeDeleteModal","countryName","map","country","label","value","id","includes","permissionList","Add_Universitystate","length","isOpen","toggle","row","md","placeholder","onChange","e","target","options","opt","style","display","justifyContent","subData","universityCountryId","data","message","appearance","autoDismiss","Ripple","preventDefault","subdata","handleSubmit","textAlign","uniDetails","i","key","scope","Delete_Universitystate","toggleDanger","Update_Universitystate","handleUpdate","remove"],"mappings":";8GAAA,4BAsCeA,IA/BW,SAAC,GAAuE,IAAtEC,EAAqE,EAArEA,UAAWC,EAA0D,EAA1DA,KAAKC,EAAqD,EAArDA,MAAmBC,GAAkC,EAA9CC,WAA8C,EAAlCD,MAAUE,GAAwB,EAA7BC,IAA6B,EAAxBD,MAAME,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,QAUhF,OACI,oCAGI,kBAAC,IAAD,CACGC,QAASJ,EACTH,MAAOA,EACPC,KAAMA,EACNH,UAAWA,EACXU,SAAUF,GAET,IACAP,EAAMM,EAAM,Q,u3MCxB5B,IAAMI,EAAUC,aAAaC,QAAQ,S,4CACrC,WAAmBP,GAAnB,4FAAwBQ,EAAxB,+BAA+B,GAA/B,+BAA+C,GAA/C,kBAEsBC,IAAMC,IAAN,UAAaC,KAAb,OAAuBX,GAAOQ,EAAM,CACpDI,QAAS,CACP,cAAiBP,KAJzB,cAEUQ,EAFV,gBAOiBA,EAPjB,gFASkC,MAA1B,KAAMC,SAASC,QACjBC,IAAQC,KAAK,QAVnB,gE,sBAiBeP,I,o6MClBf,IAAML,EAAUC,aAAaC,QAAQ,S,4CAErC,WAAoBP,GAApB,8FAAyBQ,EAAzB,+BAAgC,GAAhC,+BAAgD,GAAhD,kBAEsBU,IAAMC,KAAN,UAAcR,KAAd,OAAwBX,GAAOQ,EAAM,CACrDI,QAAS,CACP,cAAiBP,KAJzB,cAEUQ,EAFV,gBAOiBA,EAPjB,gFASoC,OAA5B,2CAAOC,gBAAP,eAAiBC,SACnBC,IAAQC,KAAK,QAVnB,gE,sBAiBeE,I,sUCuYAC,uBADS,SAACC,GAAD,MAAY,KACrBD,EA7XY,WACzB,MAA0DE,mBAAS,IAAnE,mBAAOC,EAAP,KAA8BC,EAA9B,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAwCV,mBAAS,kBAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KACA,EAAwCZ,mBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,GAArB,KACA,GAA8Bd,oBAAS,GAAvC,qBAAOe,GAAP,MAAgBC,GAAhB,MACA,GAAgDhB,oBAAS,GAAzD,qBAAOiB,GAAP,MAAyBC,GAAzB,MACA,GAA0ClB,oBAAS,GAAnD,qBAAOmB,GAAP,MAAsBC,GAAtB,MAEA,GAA0CpB,mBAAS,GAAnD,qBAAOqB,GAAP,MAAsBC,GAAtB,MACA,GAA8CtB,mBAAS,IAAvD,qBAAOuB,GAAP,MAAwBC,GAAxB,MAEA,GAA4CxB,wBAASyB,GAArD,qBAAOC,GAAP,MAAuBC,GAAvB,MAEQC,GAAaC,sBAAbD,SAEFlC,GAAUoC,cACVC,GAAWC,cAEXC,GAAaC,KAAKC,MAAMnD,aAAaC,QAAQ,gBAEnDmD,qBAAU,WACYC,YAAI,yBAAyBC,MAAK,SAACC,GACrDrC,EAAyBqC,GACzBR,GAASS,YAAyBD,SAEnC,CAACxB,KAEJqB,qBAAU,WACYC,YAAI,6BAA6BC,MAAK,SAACC,GACzD7B,EAAe6B,QAEhB,IAEH,IAqCME,GAAa,WACjBnC,GAAa,GACbM,EAAgB,kBAChBE,GAAgB,GAChBV,EAAmB,IACnBuB,QAAkBF,IAWdiB,GAAmB,WACvBlC,GAAe,GACfgB,GAAmB,IACnBF,GAAiB,IAsDbqB,GAAW,OAAGlC,QAAH,IAAGA,OAAH,EAAGA,EAAamC,KAAI,SAACC,GAAD,MAAc,CACjDC,MAAOD,EAAQlE,KACfoE,MAAOF,EAAQG,OAQjB,OACE,6BACE,kBAAC,IAAD,CAAM5E,UAAU,gBACd,kBAAC,IAAD,CAAYA,UAAU,eACpB,wBAAIA,UAAU,cAAd,qBACA,yBAAKA,UAAU,4BACb,0BAAMS,QAVQ,WACtBa,GAAQC,KAAK,MAS2BvB,UAAU,cACvC,IACD,uBAAGA,UAAU,6BAFf,yBAQN,kBAAC,IAAD,KACE,kBAAC,IAAD,MAEe,OAAX6D,SAAW,IAAXA,QAAA,EAAAA,GAAagB,SAAb,OAAsBC,UAAtB,IAAsBA,SAAtB,EAAsBA,IAAgBC,sBACtC,kBAAC,IAAD,CACA/E,UAAW,mBACXK,KAAM,kBAAM6B,GAAa,IACzBjC,KAAM,uBAAGD,UAAU,gBACnBO,KAAM,aAIR,KAGA,6BACG,IACD,2BACG,IADH,QAEQ,IACN,0BAAMP,UAAU,uBACb,IADH,OAEG6B,QAFH,IAEGA,OAFH,EAEGA,EAAuBmD,OAAQ,KAC1B,IANV,yBAOyB,OAK7B,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CACEC,OAAQhD,EACRiD,OAAQb,GACRrE,UAAU,cAEV,kBAAC,IAAD,6BAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWmF,KAAG,EAACnF,UAAU,mCACvB,kBAAC,IAAD,CAAKoF,GAAG,KACN,kDACmB,0BAAMpF,UAAU,eAAhB,KAAuC,MAG5D,kBAAC,IAAD,CAAKoF,GAAG,KACN,kBAAC,IAAD,CACEjF,KAAK,OACLI,KAAK,OACLqE,GAAG,OACHD,MAAO5C,EACPsD,YAAY,8BACZC,SAAU,SAACC,GACTvD,EAAmBuD,EAAEC,OAAOb,OAC5B3B,IAAiB,MAGpBD,GACC,0BAAM/C,UAAU,eAAhB,wCAGE,OAIR,kBAAC,IAAD,CAAWmF,KAAG,EAACnF,UAAU,mCACvB,kBAAC,IAAD,CAAKoF,GAAG,KACN,mDACqB,IACnB,0BAAMpF,UAAU,eAAhB,KAAuC,MAG3C,kBAAC,IAAD,CAAKoF,GAAG,KACN,kBAAC,IAAD,CACEK,QAASlB,GACTI,MAAO,CAAED,MAAOnC,EAAcoC,MAAOlC,GACrC6C,SAAU,SAACI,GAAD,OAnNLhB,EAoNegB,EAAIhB,MApNZC,EAoNmBe,EAAIf,MAnNvDnC,EAAgBkC,GAChBhC,GAAgBiC,QAChB7B,IAAoB,GAHI,IAAC4B,EAAOC,GAsNZpE,KAAK,UACLqE,GAAG,YAEJ/B,GACC,0BAAM7C,UAAU,eAAhB,iCAGE,OAIR,kBAAC,IAAD,CACEA,UAAU,kCACV2F,MAAO,CAAEC,QAAS,OAAQC,eAAgB,QAE1C,kBAAC,IAAD,CACE3F,MAAM,SACNF,UAAU,YACVS,QAAS4D,IAHX,cAOmBhB,GAAlBC,GACC,kBAAC,IAAD,CACEpD,MAAM,UACNF,UAAU,YACVS,QA3JK,WACzB,IAEMqF,EAAU,CACdlB,GAHStB,GAIT/C,KAAMwB,EACNgE,oBAAqBtD,GAGHzB,YAAI,yBAA0B8E,GAAS5B,MACzD,SAACC,GAAY,IAAD,EACVvB,IAAYD,IACZT,GAAa,GACbsB,GAAQ,OAACW,QAAD,IAACA,GAAD,UAACA,EAAQ6B,YAAT,aAAC,EAAcC,QAAS,CAC9BC,WAAY,UACZC,aAAa,IAEfnE,EAAmB,IACnBQ,EAAgB,kBAChBE,GAAgB,GAChBa,QAAkBF,QAoIJ,UAQA,kBAAC,IAAO+C,OAAR,CACElG,MAAM,UACNC,KAAK,SACLH,UAAU,YACVS,QAAS,SAAC8E,GAAD,OAnPV,SAACA,GACpBA,EAAEc,iBAEF,IAAMC,EAAU,CACd/F,KAAMwB,EACNgE,oBAAqBtD,GAMvB,GAHqB,IAAjBA,GACFK,IAAoB,GAEE,KAApBf,EACFiB,IAAiB,QAEGvB,YAAK,yBAA0B6E,GAASpC,MAC1D,SAACC,GAAY,IAAD,EACVvB,IAAYD,IACZT,GAAa,GACbsB,GAAQ,OAACW,QAAD,IAACA,GAAD,UAACA,EAAQ6B,YAAT,aAAC,EAAcC,QAAS,CAC9BC,WAAY,UACZC,aAAa,IAEf3D,EAAgB,kBAChBE,GAAgB,GAChBV,EAAmB,OA2NWuE,CAAahB,KAJ/B,eAeZ,yBAAKvF,UAAU,oBACb,kBAAC,IAAD,CAAOA,UAAU,2BACf,2BAAOA,UAAU,iBACf,wBAAI2F,MAAO,CAAEa,UAAW,WACtB,qCACA,qCACA,wBAAIxG,UAAU,eAAd,WACA,wCAGJ,sCACG6B,QADH,IACGA,OADH,EACGA,EAAuB2C,KAAI,SAACiC,EAAYC,GAAb,OAC1B,wBAAIC,IAAKF,EAAW7B,GAAIe,MAAO,CAAEa,UAAW,WAC1C,wBAAII,MAAM,OAAOF,EAAI,GACrB,4BAAKD,EAAWlG,MAChB,4BAAKkG,EAAWhC,QAAQlE,MACxB,6BAIe,OAAXsD,SAAW,IAAXA,QAAA,EAAAA,GAAagB,SAAb,OAAsBC,UAAtB,IAAsBA,SAAtB,EAAsBA,IAAgB+B,yBACtC,kBAAC,IAAD,CACAxG,KAAM,kBA5OP,SAACoG,GACpBrD,GAAkB,OAACqD,QAAD,IAACA,OAAD,EAACA,EAAYlG,MAC/B2C,GAAgB,OAACuD,QAAD,IAACA,OAAD,EAACA,EAAY7B,IAC7BxC,GAAe,GAyOiB0E,CAAaL,IACzBzG,UAAW,cACXE,MAAO,SACPD,KAAM,uBAAGD,UAAU,qBACnBI,WAAY,IAGd,MAMa,OAAXyD,SAAW,IAAXA,QAAA,EAAAA,GAAagB,SAAb,OAAsBC,UAAtB,IAAsBA,SAAtB,EAAsBA,IAAgBiC,yBACtC,kBAAC,IAAD,CACA1G,KAAM,kBA7NP,SAACoG,GACpBvE,GAAa,GACbF,EAAmByE,EAAWlG,MAC9BiC,EAAgBiE,EAAWhC,QAAQlE,MACnCmC,GAAgB+D,EAAWhC,QAAQG,IACnCrB,GAAiB,OAACkD,QAAD,IAACA,OAAD,EAACA,EAAY7B,IAwNEoC,CAAaP,IACzBzG,UAAW,cACXE,MAAO,UACPD,KAAM,uBAAGD,UAAU,gBACnBI,WAAY,IAGd,KAGA,kBAAC,IAAD,CACE6E,OAAQ9C,EACR+C,OAAQZ,GACRtE,UAAU,cAEV,kBAAC,IAAD,KACE,yDAC8B,IAC5B,2BAAImD,IAFN,wCAOF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjD,MAAM,SACNO,QAAS,kBAvQLmE,EAwQmB3B,QAvQ3BgE,YAAO,0BAAD,OAA2BrC,IAAMV,MACzD,SAACC,GACC/B,GAAe,GACfQ,IAAYD,IACZa,GAASW,EAAQ,CACf+B,WAAY,QACZC,aAAa,IAEf/C,GAAmB,IACnBF,GAAiB,MAVM,IAAC0B,IAqQN,OAQA,kBAAC,IAAD,CAAQ1E,MAAM,UAAUO,QAAS6D,IAAjC","file":"static/js/212.ab4ca523.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error.response.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { StoreUniversityStateData } from \"../../../redux/actions/SMS/UniversityAction/UniversityStateAction\";\r\nimport get from \"../../../helpers/get\";\r\nimport post from \"../../../helpers/post\";\r\nimport remove from \"../../../helpers/remove\";\r\nimport put from \"../../../helpers/put\";\r\nimport ButtonForFunction from \"../Components/ButtonForFunction\";\r\nimport { permissionList } from \"../../../constants/AuthorizationConstant\";\r\n\r\nconst AddUniversityState = () => {\r\n  const [universityDetailsList, setUniversityDetailsList] = useState([]);\r\n  const [universityState, setUniversityState] = useState(\"\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [countryLabel, setCountryLabel] = useState(\"Select Country\");\r\n  const [countryValue, setCountryValue] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const [countryNameError, setCountryNameError] = useState(false);\r\n  const [uniStateError, setUniStateError] = useState(false);\r\n\r\n  const [delUniStateId, setDelUniStateId] = useState(0);\r\n  const [delUniStateName, setDelUniStateName] = useState(\"\");\r\n\r\n  const [updateUniState, setUpdateUniState] = useState(undefined);\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const permissions= JSON.parse(localStorage.getItem('permissions'));\r\n\r\n  useEffect(() => {\r\n    const returnValue = get(`UniversityState/Index`).then((action) => {\r\n      setUniversityDetailsList(action);\r\n      dispatch(StoreUniversityStateData(action));\r\n    });\r\n  }, [success]);\r\n\r\n  useEffect(() => {\r\n    const returnValue = get(`UniversityCountryDD/Index`).then((action) => {\r\n      setCountryList(action);\r\n    });\r\n  }, []);\r\n\r\n  const selectCountryName = (label, value) => {\r\n    setCountryLabel(label);\r\n    setCountryValue(value);\r\n    setCountryNameError(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const subdata = {\r\n      name: universityState,\r\n      universityCountryId: countryValue,\r\n    };\r\n\r\n    if (countryValue === 0) {\r\n      setCountryNameError(true);\r\n    }\r\n    if (universityState === \"\") {\r\n      setUniStateError(true);\r\n    } else {\r\n      const returnValue = post(`UniversityState/Create`, subdata).then(\r\n        (action) => {\r\n          setSuccess(!success);\r\n          setModalOpen(false);\r\n          addToast(action?.data?.message, {\r\n            appearance: \"success\",\r\n            autoDismiss: true,\r\n          });\r\n          setCountryLabel(\"Select Country\");\r\n          setCountryValue(0);\r\n          setUniversityState(\"\");\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  // on Close Modal\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setCountryLabel(\"Select Country\");\r\n    setCountryValue(0);\r\n    setUniversityState(\"\");\r\n    setUpdateUniState(undefined);\r\n  };\r\n\r\n  // delete button click\r\n  const toggleDanger = (uniDetails) => {\r\n    setDelUniStateName(uniDetails?.name);\r\n    setDelUniStateId(uniDetails?.id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  // on Close Delete Modal\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    setDelUniStateName('');\r\n    setDelUniStateId(0);\r\n  };\r\n\r\n  // confirm delete\r\n  const handleDeleteUniState = (id) => {\r\n    const returnValue = remove(`UniversityState/Delete/${id}`).then(\r\n      (action) => {\r\n        setDeleteModal(false);\r\n        setSuccess(!success);\r\n        addToast(action, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n        setDelUniStateName('');\r\n        setDelUniStateId(0);\r\n      }\r\n    );\r\n  };\r\n\r\n  // update state\r\n  const handleUpdate = (uniDetails) => {\r\n    setModalOpen(true);\r\n    setUniversityState(uniDetails.name);\r\n    setCountryLabel(uniDetails.country.name);\r\n    setCountryValue(uniDetails.country.id);\r\n    setUpdateUniState(uniDetails?.id);\r\n  };\r\n\r\n  // update submit\r\n  const handleUpdateSubmit = () => {\r\n    const id = updateUniState;\r\n\r\n    const subData = {\r\n      id: id,\r\n      name: universityState,\r\n      universityCountryId: countryValue,\r\n    };\r\n\r\n    const returnvalue = put(`UniversityState/Update`, subData).then(\r\n      (action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action?.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        setUniversityState(\"\");\r\n        setCountryLabel(\"Select Country\");\r\n        setCountryValue(0);\r\n        setUpdateUniState(undefined);\r\n      }\r\n    );\r\n  };\r\n\r\n  const countryName = countryList?.map((country) => ({\r\n    label: country.name,\r\n    value: country.id,\r\n  }));\r\n\r\n  // redirect to dashboard\r\n  const backToDashboard = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-light\">University States</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className=\"text-light\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          {\r\n            permissions?.includes(permissionList?.Add_Universitystate) ?\r\n            <ButtonForFunction\r\n            className={\"btn btn-uapp-add\"}\r\n            func={() => setModalOpen(true)}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={\" Add New\"}\r\n           \r\n          />\r\n          :\r\n          null\r\n          }\r\n\r\n          <div>\r\n            {\" \"}\r\n            <b>\r\n              {\" \"}\r\n              Total{\" \"}\r\n              <span className=\"badge badge-primary\">\r\n                {\" \"}\r\n                {universityDetailsList?.length}{\" \"}\r\n              </span>{\" \"}\r\n              University State Found{\" \"}\r\n            </b>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <div>\r\n            <Modal\r\n              isOpen={modalOpen}\r\n              toggle={closeModal}\r\n              className=\"uapp-modal\"\r\n            >\r\n              <ModalHeader>Add University State</ModalHeader>\r\n\r\n              <ModalBody>\r\n                <Form>\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>\r\n                        University State <span className=\"text-danger\">*</span>{\" \"}\r\n                      </span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={universityState}\r\n                        placeholder=\"Write University State Name\"\r\n                        onChange={(e) => {\r\n                          setUniversityState(e.target.value);\r\n                          setUniStateError(false);\r\n                        }}\r\n                      />\r\n                      {uniStateError ? (\r\n                        <span className=\"text-danger\">\r\n                          You must write university state name\r\n                        </span>\r\n                      ) : null}\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>\r\n                        University Country{\" \"}\r\n                        <span className=\"text-danger\">*</span>{\" \"}\r\n                      </span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Select\r\n                        options={countryName}\r\n                        value={{ label: countryLabel, value: countryValue }}\r\n                        onChange={(opt) =>\r\n                          selectCountryName(opt.label, opt.value)\r\n                        }\r\n                        name=\"country\"\r\n                        id=\"country\"\r\n                      />\r\n                      {countryNameError ? (\r\n                        <span className=\"text-danger\">\r\n                          Country name must be selected\r\n                        </span>\r\n                      ) : null}\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup\r\n                    className=\"has-icon-left position-relative\"\r\n                    style={{ display: \"flex\", justifyContent: \"end\" }}\r\n                  >\r\n                    <Button\r\n                      color=\"danger\"\r\n                      className=\"mr-2 mt-3\"\r\n                      onClick={closeModal}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n                    {updateUniState != undefined ? (\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"mr-1 mt-3\"\r\n                        onClick={handleUpdateSubmit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    ) : (\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-3\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                      >\r\n                        Submit\r\n                      </Button.Ripple>\r\n                    )}\r\n                  </FormGroup>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n          </div>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table className=\"table-sm table-bordered\">\r\n              <thead className=\"thead-uapp-bg\">\r\n                <tr style={{ textAlign: \"center\" }}>\r\n                  <th>SL/NO</th>\r\n                  <th>State</th>\r\n                  <th className=\"text-center\">Country</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {universityDetailsList?.map((uniDetails, i) => (\r\n                  <tr key={uniDetails.id} style={{ textAlign: \"center\" }}>\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>{uniDetails.name}</td>\r\n                    <td>{uniDetails.country.name}</td>\r\n                    <td>\r\n                      {/* <Button onClick={() => toggleDanger(uniDetails)} className=\"mx-1 btn-sm\" color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n\r\n                    {\r\n                        permissions?.includes(permissionList?.Delete_Universitystate) ?\r\n                        <ButtonForFunction\r\n                        func={() => toggleDanger(uniDetails)}\r\n                        className={\"mx-1 btn-sm\"}\r\n                        color={\"danger\"}\r\n                        icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                        permission={6}\r\n                      />\r\n                      :\r\n                      null\r\n                    }\r\n\r\n                      {/* <Button onClick={()=> handleUpdate(uniDetails)} className=\"mx-1 btn-sm\" color=\"warning\"><i className=\"fas fa-edit\"></i></Button> */}\r\n\r\n                      {\r\n                        permissions?.includes(permissionList?.Update_Universitystate) ?\r\n                        <ButtonForFunction\r\n                        func={() => handleUpdate(uniDetails)}\r\n                        className={\"mx-1 btn-sm\"}\r\n                        color={\"warning\"}\r\n                        icon={<i className=\"fas fa-edit\"></i>}\r\n                        permission={6}\r\n                      />\r\n                      :\r\n                      null\r\n                      }\r\n\r\n                      <Modal\r\n                        isOpen={deleteModal}\r\n                        toggle={closeDeleteModal}\r\n                        className=\"uapp-modal\"\r\n                      >\r\n                        <ModalBody>\r\n                          <p>\r\n                            Are You Sure to Delete this{\" \"}\r\n                            <b>{delUniStateName}</b> ? Once\r\n                            Deleted it can't be Undone!\r\n                          </p>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                          <Button\r\n                            color=\"danger\"\r\n                            onClick={() =>\r\n                              handleDeleteUniState(delUniStateId)\r\n                            }\r\n                          >\r\n                            YES\r\n                          </Button>\r\n                          <Button color=\"primary\" onClick={closeDeleteModal}>NO</Button>\r\n                        </ModalFooter>\r\n                      </Modal>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps)(AddUniversityState);\r\n"],"sourceRoot":""}