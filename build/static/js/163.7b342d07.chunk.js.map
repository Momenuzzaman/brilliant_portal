{"version":3,"sources":["helpers/post.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/SMS/Demo/Demo.jsx"],"names":["url","body","authToken","Axios","post","rootUrl","res","response","status","history","push","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","Demo","useDispatch","useSelector","state","roleDataReducer","roles","useState","formType","setFormType","useEffect","get","then","console","log","method","localStorage","getItem","onSubmit","event","preventDefault","subdata","FormData","target","values","x","map","form","className","name","type","id"],"mappings":";i/MAOA,WAAoBA,GAApB,gGAAyBC,EAAzB,+BAAgC,GAAGC,EAAnC,+BAA+C,GAA/C,kBAKsBC,IAAMC,KAAN,UAAcC,KAAd,OAAwBL,GAAMC,EAAKC,GAAa,IALtE,cAKUI,EALV,gBAMiBA,EANjB,gFAUwC,OAA7B,2CAAOC,gBAAP,eAAiBC,SAChBC,IAAQC,KAAK,QAXzB,gE,sBAqBeN,I,8EC5Bf,8CACe,SAASO,EAA2BC,GACjD,GAAsB,qBAAXC,QAAgD,MAAtBD,EAAEC,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQJ,KAAOA,EAAI,YAA2BA,IAAK,CAC3D,IAAIK,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKL,EAAES,OAAe,CACxBC,MAAM,GAED,CACLA,MAAM,EACNC,MAAOX,EAAEK,OAGbO,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGR,GAIP,MAAM,IAAIS,UAAU,yIAGtB,IAAIC,EAGAC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLZ,EAAG,WACDS,EAAKhB,EAAEC,OAAOC,aAEhBM,EAAG,WACD,IAAIY,EAAOJ,EAAGK,OAEd,OADAH,EAAmBE,EAAKV,KACjBU,GAETR,EAAG,SAAWU,GACZH,GAAS,EACTF,EAAMK,GAERR,EAAG,WACD,IACOI,GAAoC,MAAhBF,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIG,EAAQ,MAAMF,O,yICoFXM,UAvHF,WACMC,cAEJC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBAAgBC,SAF1D,IAIA,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGAC,qBAAU,WAERC,YAAI,yBACHC,MAAK,SAAAxC,GACJyC,QAAQC,IAAI,eAAgB1C,GAC5BqC,EAAYrC,MAGdH,IAAM0C,IAAN,uCAAiD,CAC/CI,OAAQ,MACV,QAAW,CAAE,cAAiBC,aAAaC,QAAQ,YAClDL,MAAK,SAAAxC,GACJyC,QAAQC,IAAI,WAAY1C,QAkC1B,IAsBF,OACE,6BACA,0BAAM8C,SAtBY,SAACC,GAErBA,EAAMC,iBAEN,IAJ+B,EAIzBC,EAAU,IAAIC,SAASH,EAAMI,QAJJ,cAMjBF,EAAQG,UANS,IAM/B,2BAA+B,CAAC,IAAvBC,EAAsB,QAC7BZ,QAAQC,IAAIW,IAPiB,iCAwB3BjB,EAASkB,KAAI,SAAAC,GAAI,OACf,yBAAKC,UAAU,cAEf,yBAAKA,UAAU,YACf,kCAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAME,OAGV,yBAAKD,UAAY,YAEjB,2BAAOA,UAAU,YACjBE,KAAI,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAMG,KACZD,KAAI,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAME,KACZE,GAAE,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAME,YAYd,4BAAQC,KAAK,SAASF,UAAU,+BAAhC","file":"static/js/163.7b342d07.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import axios from 'axios';\r\nimport Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { UncontrolledTooltip, Button } from 'reactstrap';\r\nimport get from '../../../helpers/get';\r\nimport post from '../../../helpers/post';\r\nimport { StoreCommentData } from '../../../redux/actions/SMS/DemoActions/DemoActions'\r\nimport { commentDataReducer } from '../../../redux/reducers/SMS/DemoReducers'\r\nimport { roleDataReducer } from '../../../redux/reducers/SMS/RoleReducer';\r\nimport rootUrl from '../../../constants/constants'\r\n\r\n\r\n\r\nconst Demo = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const role = useSelector((state) => state.roleDataReducer.roles)\r\n\r\n  const [formType, setFormType] = useState([]);\r\n \r\n  // Fetching get api\r\n  useEffect(()=>{\r\n\r\n    get('Practice/GetAttribute')\r\n    .then(res => {\r\n      console.log('dynamic form', res);\r\n      setFormType(res);\r\n    })\r\n\r\n    Axios.get(`http://192.168.0.10:45455/Test/index`,{ \r\n      method: 'GET',\r\n    'headers': { 'Authorization': localStorage.getItem('token') } })\r\n    .then(res => {\r\n      console.log('checking', res);\r\n    })\r\n\r\n\r\n  //   fetch('http://192.168.0.119:45455/Test/index',{\r\n  //     method: 'GET',\r\n  //     headers:{\r\n  //         'content-type' : 'application/json',\r\n  //         'token' : localStorage.getItem('token')\r\n\r\n  //     },\r\n    \r\n\r\n  // })\r\n  // .then(res => res.json())\r\n  // .then(data => {\r\n  //   console.log('checking', data);\r\n  // })\r\n\r\n//   fetch('http://192.168.0.119:45455/Account/GetCurrentUser',{\r\n//     method: 'GET',\r\n//     headers:{\r\n//         'content-type' : 'application/json',\r\n      \r\n\r\n//     }\r\n  \r\n\r\n// })\r\n// .then(res => res.json())\r\n// .then(data => {\r\n//   console.log('checking', data);\r\n// })\r\n  \r\n  },[]);\r\n\r\nconst handleSubmit  = (event) => {\r\n\r\n  event.preventDefault();\r\n\r\n  const subdata = new FormData(event.target);\r\n\r\n  for (var x of subdata.values()){\r\n    console.log(x);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n  // Fetching post api\r\n \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    <form onSubmit={handleSubmit}>\r\n    {\r\n      formType.map(form => \r\n        <div className=' mb-3 row '>\r\n        \r\n        <div className='col-md-2'>\r\n        <p>{form?.name}</p>\r\n        </div>\r\n\r\n        <div className = 'col-md-4'>\r\n        \r\n        <input className='w-100 p-2'\r\n        type={form?.type}\r\n        name={form?.name}\r\n        id={form?.name}\r\n        />\r\n        \r\n        </div>\r\n    \r\n        \r\n        </div>\r\n    \r\n        )\r\n    }\r\n\r\n\r\n    <button type='submit' className='btn btn-danger mx-auto mt-2'>\r\n    Submit\r\n    </button>\r\n\r\n    </form>\r\n\r\n    \r\n\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Demo;\r\n"],"sourceRoot":""}