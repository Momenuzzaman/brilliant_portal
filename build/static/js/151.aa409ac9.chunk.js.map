{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","views/SMS/Components/CustomButtonRipple.js","views/SMS/UniversitySubjects/SubjectIntake.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","onClick","body","authToken","Axios","post","rootUrl","res","response","status","history","push","CustomButtonRipple","includes","Ripple","SubjectIntake","camId","useParams","subbId","console","log","useState","intake","setIntake","setStatus","intakeLabel","setIntakeLabel","intakeValue","setIntakeValue","statusLabel","setStatusLabel","statusValue","setStatusValue","subIntake","setSubIntake","success","setSuccess","serialNum","deleteModal","setDeleteModal","useHistory","addToast","useLocation","useToasts","useEffect","get","then","intakes","map","intakeOptions","label","value","id","statuss","statusOptions","closeDeleteModal","localStorage","removeItem","md","onSubmit","e","preventDefault","subData","FormData","target","x","data","isSuccess","message","appearance","autoDismiss","row","options","onChange","opt","defaultValue","style","display","justifyContent","textAlign","int","i","key","scope","intakeStatus","width","setItem","isOpen","toggle","getItem","remove","action"],"mappings":"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","file":"static/js/151.aa409ac9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name}) => {\r\n    // const {className, icon} = props;\r\n\r\n    // console.log(className);\r\n    // console.log(url);\r\n\r\n    // console.log('Trying New Type of Props',func, className, icon, permission);\r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst CustomButtonRipple = ({className, icon,color, permission, type,url, func, name}) => {\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    return (\r\n        <>\r\n          {\r\n            data.includes(permission) ? \r\n            <Button.Ripple\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {name}\r\n            </Button.Ripple>\r\n            :\r\n            null\r\n          }   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomButtonRipple;","import React, { useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    Row,\r\n    Table,\r\n  } from \"reactstrap\";\r\n  import Select from \"react-select\";\r\n  import { useToasts } from 'react-toast-notifications';\r\nimport { Link, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport get from '../../../helpers/get';\r\nimport { useState } from 'react';\r\nimport { borderRadius } from '@mui/system';\r\nimport post from '../../../helpers/post';\r\nimport remove from '../../../helpers/remove';\r\nimport CustomButtonRipple from '../Components/CustomButtonRipple';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\n\r\nconst SubjectIntake = () => {\r\n\r\n    const {camId} = useParams();\r\n    const {subbId} = useParams();\r\n\r\n    console.log(\"Ids\", camId,subbId);\r\n    \r\n    const [intake, setIntake] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n\r\n    const [intakeLabel, setIntakeLabel] = useState(\"Select Intake\");\r\n    const [intakeValue, setIntakeValue] = useState(0);\r\n    const [statusLabel, setStatusLabel] = useState(\"Select Status\");\r\n    const [statusValue, setStatusValue] = useState(0);\r\n    const [subIntake, setSubIntake] = useState([]);\r\n    const [success, setSuccess] = useState(false);\r\n    const [serialNum, setSerialNum] = useState(1);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const {addToast} = useToasts();\r\n\r\n    // console.log(\"campusId\",location?.campusId);\r\n    // console.log(\"subjectId\",location?.subjectId);\r\n\r\n    // localStorage.setItem(\"camppId\", location?.campusId);\r\n    // localStorage.setItem(\"subbId\", location?.subjectId);\r\n\r\n    useEffect(()=>{\r\n        get(\"Intake/Index\").then(res=>{\r\n            console.log(\"subject\",res);\r\n            setIntake(res);\r\n        });\r\n\r\n        get(\"IntakeStatus/GetAll\").then(res=>{\r\n            console.log(\"Status\",res);\r\n            setStatus(res);\r\n        });\r\n\r\n        get(`SubjectIntake/GetAllSubjectIntake?subjectId=${subbId}&campusId=${camId}`).then(res=>{\r\n          console.log(\"all sub intake\",res);\r\n          setSubIntake(res);\r\n        })\r\n\r\n    },[success]);\r\n\r\n    const intakes = intake.map(intakeOptions =>({label: intakeOptions?.name, value:intakeOptions?.id}));\r\n    const statuss = status.map(statusOptions =>({label:statusOptions?.name, value:statusOptions?.id}));\r\n\r\n    const selectIntake = (label, value) => {\r\n        setIntakeLabel(label);\r\n        setIntakeValue(value); \r\n      }\r\n\r\n    const selectStatus = (label, value) => {\r\n        setStatusLabel(label);\r\n        setStatusValue(value); \r\n      }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        const subData = new FormData(e.target);\r\n        for(var x of subData){\r\n          console.log(x);\r\n        }\r\n\r\n        post(`SubjectIntake/AssignToSubject`, subData).then(res=>{\r\n          if (res.status === 200 && res.data.isSuccess === true) {\r\n            addToast(res?.data?.message, {\r\n              appearance:'success',\r\n              autoDismiss: true,\r\n            });\r\n            setSuccess(!success);\r\n          }\r\n          else{\r\n            addToast(res?.data?.message, {\r\n              appearance:'warning',\r\n              autoDismiss: true,\r\n            });\r\n          }\r\n        })\r\n    }\r\n\r\n    const toggleDanger = (name,id) => {\r\n      localStorage.setItem('intName',name)\r\n      localStorage.setItem('intId',id)\r\n      setDeleteModal(true)\r\n    }\r\n\r\n    const closeDeleteModal = () => {\r\n     setDeleteModal(false);\r\n     localStorage.removeItem('intName')\r\n     localStorage.removeItem('intId')\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n      const returnValue = remove(`SubjectIntake/DeleteById/${id}`).then((action)=> {\r\n        // console.log(action);\r\n        setSuccess(!success);\r\n        setDeleteModal(false);\r\n         addToast(action, {\r\n           appearance: 'error',\r\n           autoDismiss: true,\r\n         })\r\n\r\n      })\r\n    };\r\n    \r\n\r\n    const backToList = () => {\r\n        history.push(`/campusSubjectList/${camId}`);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n        <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-light\">Subject Intakes List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span className=\"text-light\"  onClick={backToList}>\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Subject List\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <div className=''>\r\n      <Card>\r\n        <Row className='pt-3'>\r\n      \r\n          <Col md=\"4\">\r\n          <Card className=\"uapp-card-bg mx-2\">\r\n          <CardHeader className=\"page-header\">\r\n            <h3 className=\"text-light\">Add Subject Intake</h3>\r\n           \r\n          </CardHeader>\r\n        </Card>\r\n          \r\n\r\n          <Form className=\"mt-5 mx-3\" onSubmit={handleSubmit}>\r\n           \r\n\r\n          <input\r\n          \r\n          type='hidden'\r\n          name='campusId'\r\n          id='campusId'\r\n          value={camId}\r\n          />\r\n\r\n          <input\r\n          \r\n          type='hidden'\r\n          name='subjectId'\r\n          id='subjectId'\r\n          value={subbId}\r\n          />\r\n        \r\n         <FormGroup row className=\"has-icon-left position-relative\">\r\n           <Col md=\"4\">\r\n             <span>\r\n              Name <span className=\"text-danger\">*</span>{\" \"}\r\n             </span>\r\n           </Col>\r\n           <Col md=\"8\">\r\n             <Select\r\n               options={intakes}\r\n               value={{ label: intakeLabel, value: intakeValue }}\r\n               onChange={(opt) => selectIntake(opt.label, opt.value)}\r\n               defaultValue={intakeValue}\r\n               name=\"intakeId\"\r\n               id=\"intakeId\"\r\n              />\r\n         \r\n           </Col>\r\n         </FormGroup>\r\n      \r\n         \r\n         <FormGroup row className=\"has-icon-left position-relative\">\r\n           <Col md=\"4\">\r\n             <span>\r\n                Status <span className=\"text-danger\">*</span>{\" \"}\r\n             </span>\r\n           </Col>\r\n           <Col md=\"8\">\r\n             <Select\r\n               options={statuss}\r\n               value={{ label: statusLabel, value: statusValue }}\r\n               onChange={(opt) => selectStatus(opt.label, opt.value)}\r\n               name=\"statusId\"\r\n               id=\"statusId\"\r\n             />\r\n\r\n         \r\n           </Col>\r\n         </FormGroup>\r\n       \r\n        \r\n         \r\n         \r\n       \r\n\r\n        \r\n\r\n\r\n         <FormGroup\r\n           className=\"has-icon-left position-relative\"\r\n           style={{ display: \"flex\", justifyContent: 'end' }}\r\n         >\r\n           {/* <Button.Ripple\r\n             type=\"submit\"\r\n             className=\"mr-1 mt-3 badge-primary\"\r\n           >\r\n             Submit\r\n           </Button.Ripple> */}\r\n\r\n           <CustomButtonRipple\r\n              type={\"submit\"}\r\n              className={\"mr-1 mt-3 badge-primary\"}\r\n              name={\"Submit\"}\r\n              permission={6}\r\n           />\r\n           \r\n          \r\n         </FormGroup>\r\n         \r\n       </Form>\r\n          \r\n            \r\n           \r\n            \r\n          </Col>\r\n          <Col md=\"8\">\r\n            \r\n            <div className=\"table-responsive page-header \">\r\n            <Table className=\"table-sm table-bordered rounded\">\r\n            <thead className=\"thead-uapp-bg\">\r\n                <tr style={{ textAlign: \"center\" }}>\r\n                \r\n                  <th>SL/NO</th>\r\n                  <th>Name</th>\r\n                  <th>Status</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n  \r\n                {\r\n                  subIntake?.map((int, i) => <tr key={int?.id} style={{ textAlign: \"center\" }}>\r\n                    <th scope=\"row\">{serialNum + i}</th>\r\n                    <td>{int?.intake?.name}</td>\r\n                    <td>{int?.intakeStatus?.name}</td>\r\n\r\n                   \r\n                    <td style={{ width: \"8%\" }} className=\"text-center\">\r\n\r\n                    {/* <ButtonGroup variant=\"text\">\r\n                        <Link to= \"\">\r\n                          <Button color=\"primary\" className=\"mx-1 btn-sm\">\r\n                            {\" \"}\r\n                            <i className=\"fas fa-eye\"></i>{\" \"}\r\n                          </Button>\r\n                        </Link>\r\n\r\n                          <Link to=''>\r\n                            <Button color=\"dark\" className=\"mx-1 btn-sm\">\r\n                              {\" \"}\r\n                              <i className=\"fas fa-edit\"></i>{\" \"}\r\n                            </Button>\r\n                          </Link>\r\n\r\n                          <Button onClick='' color=\"danger\" className=\"mx-1 btn-sm\">\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n                          </Button>\r\n                        </ButtonGroup> */}\r\n                       \r\n\r\n                      {/* <Button className=\"mx-1 btn-sm\" onClick={() => toggleDanger(int?.intake?.name, int?.intake?.id)} color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n\r\n                      <ButtonForFunction\r\n                        className={\"mx-1 btn-sm\"}\r\n                        func={() => toggleDanger(int?.intake?.name, int?.intake?.id)}\r\n                        color={\"danger\"}\r\n                        icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                        permission={6}\r\n                      />\r\n\r\n                      <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n    \r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this <span className='fw-bold'>{localStorage.getItem('intName')}</span> ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={()=> handleDelete(int?.id)}>YES</Button>\r\n                        <Button onClick={closeDeleteModal}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                    </Modal>\r\n                     \r\n  \r\n                    </td>\r\n                  </tr>)\r\n                }\r\n  \r\n              </tbody>\r\n            </Table>\r\n            </div>\r\n              \r\n               \r\n              \r\n            \r\n          </Col>\r\n        \r\n        </Row>\r\n        </Card>\r\n       \r\n      </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubjectIntake;"],"sourceRoot":""}