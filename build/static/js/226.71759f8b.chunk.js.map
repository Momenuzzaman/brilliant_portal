{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Card.js","views/SMS/Configuration/Roles/Roles.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardHeader","inverse","bool","outline","Card","connect","state","roleList","roleDataReducer","roles","dispatch","useDispatch","useState","success","useToasts","addToast","useHistory","useEffect","get","then","action","StoreRoleData","length","map","role","i","key","id","scope","countPermissions"],"mappings":"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","file":"static/js/226.71759f8b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import React, { useState, useEffect } from 'react'\r\nimport {Alert} from \"reactstrap\"\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from 'reactstrap';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row } from 'reactstrap';\r\nimport { User } from \"react-feather\"\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { StoreRoleData } from '../../../../redux/actions/SMS/RoleAction/RoleAction';\r\nimport { useHistory } from 'react-router';\r\nimport get from '../../../../helpers/get';\r\nimport post from '../../../../helpers/post';\r\nimport remove from '../../../../helpers/remove';\r\n// import Button1 from '../../Components/Button1';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\n\r\n\r\nconst Roles = (props) => {\r\n\r\n  const roles = props.roleList[0];\r\n\r\n  const dispatch = useDispatch();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [role, setRole] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  useEffect(()=> {\r\n    const returnValue = get(`UserRole/Index`).then((action)=>{\r\n        dispatch(StoreRoleData(action))\r\n      });\r\n  },[success])\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    const subdata = {\r\n      Name: role\r\n    }\r\n\r\n      const returnValue = post(`UserRole/Create`,subdata).then((action)=>{\r\n\r\n          setSuccess(!success)\r\n          setModalOpen(false)\r\n          addToast(action, {\r\n            appearance: action == 'Role Added Successfully' ? 'success': 'error',\r\n            autoDismiss: true,\r\n          })\r\n          setRole('')\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleDeleteRole = (name) => {\r\n     const returnValue = remove(`UserRole/Delete/${name}`).then((action)=> {\r\n       setDeleteModal(false);\r\n       setSuccess(!success);\r\n    \r\n      if(action?.status == 200 && action?.data?.isSuccess == true){\r\n        addToast(action?.data?.message, {\r\n          appearance:  'success',\r\n          autoDismiss: true,\r\n        })\r\n        get(`UserRole/Index`).then((action)=>{\r\n          dispatch(StoreRoleData(action))\r\n        });\r\n      }\r\n      else{\r\n        addToast(action?.data?.message, {\r\n          appearance:  'error',\r\n          autoDismiss: true,\r\n        })\r\n      }\r\n     })\r\n  }\r\n\r\n  const toggleDanger = (name) => {\r\n    localStorage.setItem('delrole',name)\r\n    setDeleteModal(true)\r\n  }\r\n\r\n   // redirect to dashboard\r\n   const backToDashboard = () => {\r\n    history.push(\"/\")\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n      <div>\r\n\r\n      <Card className='uapp-card-bg'>\r\n              <CardHeader className=\"page-header\">\r\n              \r\n          <h3 className='text-white'>User Roles</h3>\r\n                  <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className='text-white'> <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard</span>\r\n                  </div>\r\n              \r\n              </CardHeader>\r\n      </Card>\r\n      <Card>\r\n        <CardHeader className='d-flex justify-content-end'>\r\n       {/*   <CardTitle>Create User Roles</CardTitle>*/}\r\n          {/* <Button className=\"btn btn-uapp-add\" onClick={() => setModalOpen(true)}> <i className=\"fas fa-plus\"></i>  Add Role</Button> */}\r\n\r\n          {/* <ButtonForFunction\r\n            className={\"btn btn-uapp-add\"}\r\n            func={()=>setModalOpen(true)}\r\n            permission={1}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={' Add Role'}\r\n          /> */}\r\n\r\n          <div> <b> Total <span className=\"badge badge-primary\">{roles?.length}</span> Roles Found </b></div>\r\n        </CardHeader>\r\n        <CardBody>\r\n\r\n          <div>\r\n\r\n            {/* <Modal isOpen={modalOpen} toggle={() => setModalOpen((prev)=>!prev)} className=\"uapp-modal\">\r\n              <ModalHeader>Add Roles</ModalHeader>\r\n              <ModalBody>\r\n                <Form>\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>Role Name</span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"roleName\"\r\n                        id=\"roleName\"\r\n                        placeholder=\"Create Role\"\r\n                        onChange={(e) => setRole(e.target.value)}\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                    <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={() => setModalOpen(false)}>Close</Button>\r\n\r\n                    <ButtonForFunction\r\n                      color={\"primary\"}\r\n                      type={\"submit\"}\r\n                      className={\"mr-1 mt-3\"}\r\n                      func={(e) => handleSubmit(e)}\r\n                      permission={2}\r\n                      name={\"Submit\"}\r\n                    >\r\n                    \r\n                    </ButtonForFunction>\r\n\r\n                    \r\n\r\n                  </FormGroup>\r\n\r\n                </Form>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n\r\n          <Button color=\"danger\" onClick={()=>setModalOpen(false)}>Close</Button>\r\n        </ModalFooter>\r\n            </Modal> */}\r\n            <div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"table-responsive\">\r\n          <Table className=\"table-bordered text-center\" >\r\n     <thead >\r\n              <tr>\r\n                <th>SL/NO</th>\r\n                <th>Role Name</th>\r\n                <th className=\"text-center\" >Permissions</th>\r\n                {/* <th>Action</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {\r\n                props.roleList[0]?.map((role, i) => <tr key={role.id}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{role.name}</td>\r\n                  <td className=\"text-center\" >               \r\n                    <span className=\"badge badge-pill badge-primary\"> {role.countPermissions} </span>\r\n                  </td>\r\n                  {/* <td>\r\n                    <Button onClick={() => toggleDanger(role.name)} color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button>\r\n\r\n                    <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this {localStorage.getItem('delrole')} ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={() => handleDeleteRole(localStorage.getItem('delrole'))}>YES</Button>\r\n                        <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                    </Modal>\r\n                  </td> */}\r\n                </tr>)\r\n              }\r\n\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n\r\n        </CardBody>\r\n      </Card>\r\n   \r\n\r\n\r\n\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  roleList: state.roleDataReducer.roles\r\n})\r\n\r\nexport default connect(mapStateToProps)(Roles);\r\n"],"sourceRoot":""}