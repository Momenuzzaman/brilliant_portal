{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","views/SMS/Configuration/Roles/Roles.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","onClick","body","authToken","Axios","post","rootUrl","res","response","status","history","push","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","inverse","bool","outline","Card","CardHeader","connect","state","roleList","roleDataReducer","roles","dispatch","useDispatch","useState","modalOpen","setModalOpen","deleteModal","setDeleteModal","role","setRole","success","setSuccess","addToast","useToasts","useHistory","useEffect","get","then","action","StoreRoleData","length","isOpen","toggle","prev","row","md","id","placeholder","onChange","e","target","value","style","display","justifyContent","preventDefault","subdata","Name","appearance","autoDismiss","handleSubmit","map","i","key","scope","countPermissions","localStorage","setItem","getItem","remove","console","log","data","message"],"mappings":"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","file":"static/js/137.178e9552.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name}) => {\r\n    // const {className, icon} = props;\r\n\r\n    // console.log(className);\r\n    // console.log(url);\r\n\r\n    // console.log('Trying New Type of Props',func, className, icon, permission);\r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import React, { useState, useEffect } from 'react'\r\nimport {Alert} from \"reactstrap\"\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from 'reactstrap';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row } from 'reactstrap';\r\nimport { User } from \"react-feather\"\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { StoreRoleData } from '../../../../redux/actions/SMS/RoleAction/RoleAction';\r\nimport { useHistory } from 'react-router';\r\nimport get from '../../../../helpers/get';\r\nimport post from '../../../../helpers/post';\r\nimport remove from '../../../../helpers/remove';\r\n// import Button1 from '../../Components/Button1';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\n\r\n\r\nconst Roles = (props) => {\r\n\r\n  const roles = props.roleList[0];\r\n\r\n  const dispatch = useDispatch();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [role, setRole] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  useEffect(()=> {\r\n    const returnValue = get(`UserRole/Index`).then((action)=>{\r\n        dispatch(StoreRoleData(action))\r\n      });\r\n  },[success])\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    const subdata = {\r\n      Name: role\r\n    }\r\n\r\n      const returnValue = post(`UserRole/Create`,subdata).then((action)=>{\r\n\r\n          setSuccess(!success)\r\n          setModalOpen(false)\r\n          addToast(action, {\r\n            appearance: action == 'Role Added Successfully' ? 'success': 'error',\r\n            autoDismiss: true,\r\n          })\r\n          setRole('')\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleDeleteRole = (name) => {\r\n     const returnValue = remove(`UserRole/Delete/${name}`).then((action)=> {\r\n       setDeleteModal(false);\r\n       setSuccess(!success);\r\n       console.log(action);\r\n      if(action?.status == 200){\r\n        addToast(action?.data?.message, {\r\n          appearance:  'error',\r\n          autoDismiss: true,\r\n        })\r\n        get(`UserRole/Index`).then((action)=>{\r\n          dispatch(StoreRoleData(action))\r\n        });\r\n      }\r\n     })\r\n  }\r\n\r\n  const toggleDanger = (name) => {\r\n    localStorage.setItem('delrole',name)\r\n    setDeleteModal(true)\r\n  }\r\n\r\n   // redirect to dashboard\r\n   const backToDashboard = () => {\r\n    history.push(\"/\")\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n      <div>\r\n\r\n      <Card className='uapp-card-bg'>\r\n              <CardHeader className=\"page-header\">\r\n              \r\n          <h3 className='text-light'>User Roles</h3>\r\n                  <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className='text-light'> <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard</span>\r\n                  </div>\r\n              \r\n              </CardHeader>\r\n      </Card>\r\n      <Card>\r\n        <CardHeader>\r\n       {/*   <CardTitle>Create User Roles</CardTitle>*/}\r\n          {/* <Button className=\"btn btn-uapp-add\" onClick={() => setModalOpen(true)}> <i className=\"fas fa-plus\"></i>  Add Role</Button> */}\r\n\r\n          <ButtonForFunction\r\n            className={\"btn btn-uapp-add\"}\r\n            func={()=>setModalOpen(true)}\r\n            permission={1}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={' Add Role'}\r\n          />\r\n\r\n          <div> <b> Total <span className=\"badge badge-primary\">{roles?.length}</span> Roles Found </b></div>\r\n        </CardHeader>\r\n        <CardBody>\r\n\r\n          <div>\r\n\r\n            <Modal isOpen={modalOpen} toggle={() => setModalOpen((prev)=>!prev)} className=\"uapp-modal\">\r\n              <ModalHeader>Add Roles</ModalHeader>\r\n              <ModalBody>\r\n                <Form>\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>Role Name</span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"roleName\"\r\n                        id=\"roleName\"\r\n                        placeholder=\"Create Role\"\r\n                        onChange={(e) => setRole(e.target.value)}\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                    <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={() => setModalOpen(false)}>Close</Button>\r\n\r\n                    <ButtonForFunction\r\n                      color={\"primary\"}\r\n                      type={\"submit\"}\r\n                      className={\"mr-1 mt-3\"}\r\n                      func={(e) => handleSubmit(e)}\r\n                      permission={2}\r\n                      name={\"Submit\"}\r\n                    >\r\n                    \r\n                    </ButtonForFunction>\r\n\r\n                    \r\n\r\n                  </FormGroup>\r\n\r\n                </Form>\r\n              </ModalBody>\r\n              {/* <ModalFooter>\r\n\r\n          <Button color=\"danger\" onClick={()=>setModalOpen(false)}>Close</Button>\r\n        </ModalFooter> */}\r\n            </Modal>\r\n            <div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"table-responsive\">\r\n          <Table className=\"table-bordered text-center\" >\r\n     <thead >\r\n              <tr>\r\n                <th>SL/NO</th>\r\n                <th>Role Name</th>\r\n                <th className=\"text-center\" >Permissions</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {\r\n                props.roleList[0]?.map((role, i) => <tr key={role.id}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{role.name}</td>\r\n                  <td className=\"text-center\" >               \r\n                    <span className=\"badge badge-pill badge-primary\"> {role.countPermissions} </span>\r\n                  </td>\r\n                  <td>\r\n                    <Button onClick={() => toggleDanger(role.name)} color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button>\r\n\r\n                    <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this {localStorage.getItem('delrole')} ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={() => handleDeleteRole(localStorage.getItem('delrole'))}>YES</Button>\r\n                        <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                    </Modal>\r\n                  </td>\r\n                </tr>)\r\n              }\r\n\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n\r\n        </CardBody>\r\n      </Card>\r\n   \r\n\r\n\r\n\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  roleList: state.roleDataReducer.roles\r\n})\r\n\r\nexport default connect(mapStateToProps)(Roles);\r\n"],"sourceRoot":""}