{"version":3,"sources":["views/SMS/Branches/IndividualComponent/Manager.js","views/SMS/Branches/IndividualComponent/Team.js","views/SMS/Branches/IndividualComponent/AssignTeam.js","views/SMS/Branches/Branch/BranchProfile.js","views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Components/LinkButton.js"],"names":["Manager","props","useState","branchManager","setBranchManager","id","success","setSuccess","useEffect","get","then","res","console","log","nameTittleId","Card","className","src","rootUrl","managerImageMedia","thumbnailUrl","alt","nameTittle","name","firstName","lastName","LinkButton","url","tittle","email","phoneNumber","to","Button","Team","teammodalOpen","setteamModalOpen","addToast","useToasts","teamInfo","setTeamInfo","branchTeamEmployee","setBranchTeamEmployee","teamName","setTeamName","isUpdate","setIsUpdate","deleteModal","setDeleteModal","history","useHistory","delData","setDelData","buttonStatus","setButtonStatus","closeDeleteTeamModal","handleDeletebranchTeam","remove","appearance","autoDismiss","closeModal","e","preventDefault","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","teamData","FormData","target","values","put","data","message","post","action","type","value","FormGroup","row","Col","md","Input","defaultValue","placeholder","style","display","justifyContent","color","onClick","disabled","length","Table","textAlign","map","btEmployee","key","cursor","push","employeeCount","ButtonGroup","handleTeamUpdate","toggleDeleteTeam","ModalFooter","AssignTeam","customStyles","control","provided","state","background","borderColor","minHeight","height","boxShadow","isFocused","menu","overflowY","branchEmployee","setBranchEmployee","serialNum","employeeModal","setEmployeeModal","menus","setMenus","checked","setChecked","branchTeamLabel","setBranchTeamLabel","branchTeamValue","setBranchTeamValue","branchTeam","setBranchTeam","deleteId","setDeleteId","closeDeleteEmployeeModal","handleDeleteBranchEmployee","closeEmployeeModal","branchTeamName","branch","label","employee","i","variant","branchId","employeeId","toggleDeleteEmployee","CardHeader","CardBody","subdata","append","sm","lg","styles","options","onChange","opt","defaultChecked","isChecked","toString","Row","newChecked","val","menuId","document","getElementById","handleSelectAll","htmlFor","xs","index","indexOf","splice","handleCheck","includes","BranchProfile","useParams","branchInfo","setBranchInfo","branchCode","addressLine","country","ButtonForFunction","icon","permission","func","disable","AuthStr","localStorage","getItem","body","axios","headers","response","status","Axios","activeStyle"],"mappings":"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","file":"static/js/234.6708f783.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card } from 'reactstrap';\r\nimport { rootUrl } from '../../../../constants/constants';\r\nimport get from '../../../../helpers/get';\r\nimport { Image } from 'antd';\r\n\r\nimport LinkButton from '../../Components/LinkButton';\r\nconst Manager = (props) => {\r\n\r\n    const [branchManager, setBranchManager] = useState({});\r\n    const {id, success,setSuccess} = props;\r\n   \r\n\r\n    useEffect(()=>{\r\n        get(`BranchManager/GetbyBranch/${id}`).then((res) => {\r\n           \r\n            console.log('ManagerInfo',res);\r\n            setBranchManager(res);\r\n          });\r\n\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n                {branchManager?.nameTittleId && (\r\n              <Card>\r\n\r\n                {/* <div className=' pl-3 mt-2'> <span className='branch-title-style'>Branch Manager</span></div> */}\r\n\r\n                <div className=\"pl-3 mt-3 hedding-titel\">\r\n                <h5> <b>Branch Manager</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n\r\n\r\n                <div className=\"uapp-circle-image margin-top-minus mt-3\">\r\n                  <img className=\"p-1\" src={rootUrl+branchManager?.managerImageMedia?.thumbnailUrl} alt=\"provider_image\" />\r\n                </div>\r\n                <h5 className=\"pt-2 h3 text-center mb-4\">\r\n                  {\" \"}\r\n                  <span className='pr-1'>{branchManager?.nameTittle?.name}</span>\r\n                  <span className=\"pr-1\">{branchManager?.firstName}</span>\r\n                  <span className=\" pl-1\">{branchManager?.lastName}</span>\r\n                </h5>\r\n\r\n                {\r\n                  !(branchManager?.id == 1 ) ? \r\n                  <div className=\"container text-center mb-4\">\r\n              \r\n                  <LinkButton\r\n                  name={'Edit'}\r\n                  url={`/updateBranchManagerInformation/${id}/${branchManager?.id}`}\r\n                  className={\"btn btn-primary px-lg-5 px-md-3 px-sm-1 py-2\"}\r\n                  \r\n                  />\r\n                </div>\r\n                :\r\n                null\r\n\r\n                }\r\n\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center pb-3\">\r\n                    <h5 className=\"py-b\">\r\n                      <span>{branchManager?.tittle}</span>{\" \"}\r\n                    </h5>\r\n\r\n                    <h5 className=\"py-b\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.email}</span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.phoneNumber}</span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </Card>\r\n            )}\r\n\r\n            {!branchManager.nameTittleId && (\r\n              <Card>\r\n                <div className=\"container py-3\">\r\n                  <Link to={`/addBranchManager/${id}`}>\r\n                    \r\n                    <Button className=\"btn btn-uapp-add \"\r\n                    // onClick={localStorage.removeItem('branchManagerId')}\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"fas fa-plus\"></i> Add Branch Manager{\" \"}\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Manager;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, ButtonGroup, Card, Col, Form, FormGroup, Input, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\r\nimport get from '../../../../helpers/get';\r\nimport remove from '../../../../helpers/remove';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport post from '../../../../helpers/post';\r\nimport put from '../../../../helpers/put';\r\n\r\nconst Team = (props) => {\r\n\r\n  const {id,success,setSuccess} = props;\r\n\r\n\r\n    const [teammodalOpen, setteamModalOpen] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [branchTeam, setBranchTeam] = useState([]);\r\n    const [teamInfo, setTeamInfo] = useState({});\r\n    const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n    const [teamName, setTeamName] = useState(\"\");\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const history = useHistory();\r\n    const [delData,setDelData] = useState({});\r\n    const [buttonStatus,setButtonStatus] = useState(false);\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n        get(`BranchTeamEmployee/Count/${id}`).then((res) => {\r\n           \r\n            setBranchTeamEmployee(res);\r\n          });\r\n    },[ success, id])\r\n   \r\n   \r\n    const functionimplement = () => {\r\n        setteamModalOpen(true);\r\n    \r\n      };\r\n\r\n      const toggleDeleteTeam = (id) => {\r\n        setDelData(id);\r\n        setDeleteModal(true);\r\n      };\r\n\r\n      const handleTeamUpdate = (id) => {\r\n        get(`BranchTeam/Get/${id}`).then((res) => {\r\n          \r\n          setTeamInfo(res);\r\n          setTeamName(res?.name);\r\n          setIsUpdate(true);\r\n          setteamModalOpen(true);\r\n        });\r\n      };\r\n\r\n      const closeDeleteTeamModal = () => {\r\n        setDeleteModal(false);\r\n      };\r\n    \r\n      const handleDeletebranchTeam = () => {\r\n        setButtonStatus(true);\r\n        remove(`BranchTeam/Delete/${delData?.id}`).then((res) => {\r\n          setButtonStatus(false);\r\n          setSuccess(!success);\r\n          setDeleteModal(false);\r\n          addToast(res, {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n          });\r\n          setSuccess(!success);\r\n        });\r\n         \r\n    \r\n      };\r\n\r\n      function closeModal(e) {\r\n        e.preventDefault();\r\n        setteamModalOpen(false);\r\n      }\r\n\r\n      const handleTeamSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        const teamData = new FormData(e.target);\r\n        // for(let  value of teamData.values()){\r\n        \r\n        // }\r\n        if (!isUpdate) {\r\n          setButtonStatus(true);\r\n          post(`BranchTeam/Create`, teamData).then((action) => {\r\n            setButtonStatus(false);\r\n            setSuccess(!success);\r\n            setteamModalOpen(false);\r\n            addToast(action?.data?.message, {\r\n              appearance: \"success\",\r\n              autoDismiss: true,\r\n            });\r\n            // history.push(`/branchProfile/${branchId}`);\r\n          });\r\n        } else {\r\n          for (let val of teamData.values()) {\r\n           \r\n          }\r\n          setButtonStatus(true);\r\n          put(`BranchTeam/Update`, teamData).then((res) => {\r\n           setButtonStatus(false);\r\n            setIsUpdate(false);\r\n            setSuccess(!success);\r\n            setteamModalOpen(false);\r\n            addToast(res.data?.message, {\r\n              appearance: \"success\",\r\n              autoDismiss: true,\r\n            });\r\n    \r\n            // history.push(`/branchProfile/${branchId}`);\r\n          });\r\n        }\r\n        // setTeamName('');\r\n      };\r\n\r\n      const showTeamInfo = (data) => {\r\n        history.push(`/teamEmployee/${id}/${data}`);\r\n      }\r\n\r\n    return (\r\n        <div>\r\n             <div>\r\n        <Modal isOpen={teammodalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n          \r\n          <ModalHeader>Team Information</ModalHeader>\r\n        \r\n         \r\n          <ModalBody>\r\n            <Form onSubmit={handleTeamSubmit}>\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"branchId\"\r\n                id=\"branchId\"\r\n                value={id}\r\n              />\r\n              {isUpdate ? (\r\n                <input type=\"hidden\" name=\"id\" id=\"id\" value={teamInfo?.id} />\r\n              ) : null}\r\n              {isUpdate ? (\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Team Name</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      defaultValue={teamName}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              ) : (\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Team Name</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Enter Team Name\"\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              )}\r\n\r\n              <FormGroup\r\n                className=\"has-icon-left position-relative\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Button\r\n                  color=\"danger\"\r\n                  className=\"mr-1 mt-3\"\r\n                  onClick={closeModal}\r\n                >\r\n                  Close\r\n                </Button>\r\n\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-3\"\r\n                  disabled={buttonStatus}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n            <Card>\r\n              <div className=\"container mt-3 d-flex justify-content-between\">\r\n\r\n              {/* <div>\r\n                <span className='branch-title-style'>\r\n                  Branch Team\r\n                </span>\r\n                </div> */}\r\n\r\n                <div className=\"ms-3 mb-4 hedding-titel\">\r\n                <h5> <b>Branch Team</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n                \r\n                <div>\r\n                <Button\r\n                  onClick={functionimplement}\r\n                  className=\"btn btn-uapp-add \"\r\n                  disabled={buttonStatus}\r\n                >\r\n                  {\" \"}\r\n                  <i className=\"fas fa-plus\"></i> Add Team{\" \"}\r\n                </Button>\r\n                </div>\r\n\r\n               \r\n              </div>\r\n\r\n              {branchTeamEmployee.length > 0 && (\r\n                <div className=\"table-responsive container mt-3\">\r\n                  <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                      <tr style={{ textAlign: \"center\" }}>\r\n                        <th>Name</th>\r\n                        <th>Employees</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {branchTeamEmployee?.map((btEmployee) => (\r\n                        <tr key={btEmployee.id} style={{ textAlign: \"center\" }}>\r\n                          <td>{btEmployee?.teamName}</td>\r\n                       \r\n                            <td>\r\n                              <span className='badge badge-primary'\r\n                              style={{ cursor: 'pointer'}}\r\n                              onClick={()=>showTeamInfo(btEmployee?.id)}\r\n                              >\r\n                              \r\n                              {btEmployee?.employeeCount}\r\n                              </span>\r\n                            </td>\r\n                   \r\n                          <td>\r\n                          \r\n                            \r\n                               <ButtonGroup>\r\n                                 <Button color='warning' className='btn-sm mr-1'>\r\n                                 {\" \"}\r\n                                  <i className=\"fas fa-edit\"\r\n                                  onClick={() => handleTeamUpdate(btEmployee?.id)}\r\n                                  ></i>{\" \"}\r\n                                 </Button>\r\n                              \r\n                        \r\n                              \r\n                                <Button className='btn-sm' color='danger ml-1'>\r\n                                <i className=\"fas fa-trash-alt\"\r\n                                   onClick={() => toggleDeleteTeam(btEmployee)}\r\n                                  ></i>\r\n                                </Button>\r\n                               </ButtonGroup>\r\n                           \r\n                          \r\n                            <Modal\r\n                              isOpen={deleteModal}\r\n                              toggle={closeDeleteTeamModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={handleDeletebranchTeam}\r\n                                  disabled={buttonStatus}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeDeleteTeamModal}>NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              )}\r\n\r\n              {branchTeamEmployee.length <= 0 && (\r\n                <h5 className=\"text-center mt-3 mb-4\">Team Data Not Found</h5>\r\n              )}\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Team;","import React from 'react';\r\nimport  { useEffect, useState } from \"react\";\r\nimport { Button, ButtonGroup, Card, CardBody, CardHeader, Col, Form, FormGroup, Modal, ModalBody, ModalFooter, Row, Table } from 'reactstrap';\r\nimport Select from \"react-select\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport remove from '../../../../helpers/remove';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport get from '../../../../helpers/get';\r\nimport post from '../../../../helpers/post';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\nimport LinkButton from '../../Components/LinkButton';\r\n\r\nconst AssignTeam = (props) => {\r\n\r\n\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      background: '#fff',\r\n      borderColor: '#9e9e9e',\r\n      minHeight: '30px',\r\n      height: '40px',\r\n      boxShadow: state.isFocused ? null : null,\r\n      \r\n    }),\r\n\r\n    menu: () => ({\r\n      \r\n      overflowY: 'auto'\r\n      \r\n    }),\r\n   \r\n   \r\n\r\n    // valueContainer: (provided, state) => ({\r\n    //   ...provided,\r\n    //   height: '30px',\r\n    //   padding: '0 6px'\r\n    // }),\r\n\r\n    // input: (provided, state) => ({\r\n    //   ...provided,\r\n    //   margin: '0px',\r\n    // }),\r\n    // indicatorSeparator: state => ({\r\n    //   display: 'none',\r\n    // }),\r\n    // indicatorsContainer: (provided, state) => ({\r\n    //   ...provided,\r\n    //   height: '30px',\r\n    // }),\r\n  };\r\n\r\n    const {id, success, setSuccess} = props;\r\n    const history = useHistory();\r\n    const [branchEmployee, setBranchEmployee] = useState([]);\r\n    const [serialNum,setSerialNum] = useState(1);\r\n  \r\n    const [employeeModal, setEmployeeModal] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [menus, setMenus] = useState([]);\r\n    let [checked, setChecked] = useState([]);\r\n    const [branchTeamLabel, setBranchTeamLabel] = useState(\"Select team\");\r\n    const [branchTeamValue, setBranchTeamValue] = useState();\r\n    const [branchTeam, setBranchTeam] = useState([]);\r\n    const [branchEmployeeCheckbox, setBranchEmployeeCheckbox] = useState([]);\r\n    const [deleteId, setDeleteId] = useState('');\r\n    const [buttonStatus,setButtonStatus] = useState(false);\r\n      \r\n   \r\n    \r\n\r\n    const handleAddBranchEmployee = () => {\r\n        \r\n        history.push(`/branchEmployeeInformation/${id}`);\r\n      };\r\n\r\n      useEffect(()=>{\r\n        get(`BranchTeam/GetbyBranch/${id}`).then((res) => {\r\n            \r\n            setBranchTeam(res);\r\n          });\r\n\r\n          get(`BranchEmployee/GetbyBranch/${id}`).then((res) => {\r\n        \r\n            setBranchEmployee(res);\r\n        \r\n          });\r\n      \r\n      },[success, id])\r\n\r\n      const handleEditBranchEmployee = (id) => {\r\n        history.push(`branchEmployeeInformation/${id}`);\r\n      };\r\n\r\n      const toggleDeleteEmployee = (id) => {\r\n        setDeleteId(id?.id);\r\n        setEmployeeModal(true);\r\n      }\r\n\r\n      const closeDeleteEmployeeModal = () => {\r\n        setEmployeeModal(false);\r\n      }\r\n\r\n      // const handleDeleteEmployee = (id) =>{\r\n      //   handleDeleteBranchEmployee(id);\r\n    \r\n      // }\r\n\r\n      const handleDeleteBranchEmployee = () => {\r\n        setButtonStatus(true);\r\n        remove(`BranchEmployee/Delete/${deleteId}`).then((res) => {\r\n          setButtonStatus(false);\r\n          addToast(res, {\r\n            appearance: \"error\",\r\n            autoDismiss: true\r\n          });\r\n         setSuccess(!success);\r\n         setEmployeeModal(false);\r\n        });\r\n        \r\n      };\r\n\r\n      const closeEmployeeModal = () => {\r\n        setEmployeeModal(false);\r\n      }\r\n\r\n\r\n      const gotoEmployeeProfile = (data) => {\r\n\r\n     \r\n        history.push(`/branchEmployeeProfile/${id}/${data?.id}`);\r\n        \r\n  \r\n      }\r\n\r\n\r\n       // on Select Role\r\n  const selectBranchTeamName = (label, value) => {\r\n    \r\n    setBranchTeamLabel(label);\r\n    setBranchTeamValue(value);\r\n    \r\n\r\n    get(`BranchTeamEmployee/GetUnassigned/${value}`).then((action) => {\r\n      console.log(action,'action');\r\n      \r\n      setMenus(action);\r\n      setSuccess(!success);\r\n      let defaultChecked = checked;\r\n      if (action.length > 0) {\r\n        for (let i = 0; i < action.length; i++) {\r\n          const menu = action[i];\r\n          if (menu.isChecked === true) {\r\n            const id = menu.id.toString();\r\n            defaultChecked.push(id);\r\n            setChecked([...defaultChecked]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n  \r\n    const subdata = new FormData(e.target);\r\n    subdata.append('teamId',branchTeamValue);\r\n    subdata.append('checkedArray',checked);\r\n   \r\n    // for( let val of subData.values()){\r\n  \r\n    // }\r\n    setButtonStatus(true);\r\n    post('BranchTeamEmployee/Create',subdata)\r\n    .then(res => {\r\n     setButtonStatus(false);\r\n      history.push(`/branchProfile/${id}`);\r\n      addToast(res?.data?.message,{\r\n        appearance: 'success',\r\n        autoDismiss: true\r\n      })\r\n      setSuccess(!success);\r\n      setMenus([]);\r\n    checked = [];\r\n      setBranchTeamLabel('Select Team');\r\n      \r\n    })\r\n\r\n  }\r\n\r\n    // handling checkbox\r\n    const handleCheck = (e) => {\r\n        let id = e.target.id;\r\n        let val = e.target.checked;\r\n    \r\n        if (val === true) {\r\n          setChecked([...checked, id]);\r\n        } else {\r\n          const index = checked.indexOf(id);\r\n          if (index > -1) {\r\n            checked.splice(index, 1);\r\n          }\r\n        }\r\n      };\r\n\r\n      const branchTeamName = branchTeam?.map((branch) => ({\r\n        label: branch.name,\r\n        value: branch.id,\r\n      }));\r\n    \r\n      // on Select All Checkbox\r\n  const handleSelectAll = (e) => {\r\n    let newChecked = [];\r\n    const val = e.target.checked;\r\n    if (val === true) {\r\n      menus.map((menu) => {\r\n        console.log(menu);\r\n        const menuId = menu.id.toString();\r\n        newChecked.push(menuId);\r\n        document.getElementById(menu?.id).checked = true;\r\n      });\r\n      setChecked([...newChecked]);\r\n    }\r\n\r\n    if (val === false) {\r\n      {\r\n        menus.map((menu) => {\r\n          console.log(menu);\r\n          document.getElementById(menu?.id).checked = false;\r\n        });\r\n        setChecked([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log('Ale ALe', checked);\r\n\r\n  const redirectToUpdateBranchEmployee = (branchId, employeeId) => {\r\n    history.push(`/branchEmployeeInformation/${branchId}/${employeeId}`);\r\n  }\r\n\r\n\r\n    return (\r\n        <div>\r\n              <Card>\r\n              <div className=\"container mt-3 d-flex justify-content-between\">\r\n\r\n                {/* <div>\r\n\r\n                     <span className='branch-title-style'>Branch Employee</span>\r\n                </div> */}\r\n\r\n                <div className=\"ms-3 mb-4 hedding-titel\">\r\n                <h5> <b>Branch Employee</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n\r\n               <div>\r\n               <Button\r\n                  onClick={handleAddBranchEmployee}\r\n                  className=\"btn btn-uapp-add \"\r\n                >\r\n                  {\" \"}\r\n                  <i className=\"fas fa-plus\"></i> Add Employee{\" \"}\r\n                </Button>\r\n               </div>\r\n\r\n                {/* <ButtonForFunction \r\n                className={\"btn btn-uapp-add \"} /> */}\r\n\r\n\r\n              </div>\r\n\r\n              {branchEmployee.length > 0 ? (\r\n                <div className=\"table-responsive container mt-3\">\r\n                  <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                      <tr style={{ textAlign: \"center\" }}>\r\n                        <th>SL/NO</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone Number</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {branchEmployee?.map((employee, i) => (\r\n                        <tr key={employee.id} style={{ textAlign: \"center\" }}>\r\n                          <td>{serialNum + i}</td>\r\n                          <td>{employee?.firstName}</td>\r\n                          <td>{employee?.lastName}</td>\r\n                          <td>{employee?.email}</td>\r\n                          <td>{employee?.phoneNumber}</td>\r\n                          <td>\r\n                            <ButtonGroup variant=\"text\">\r\n\r\n                            <Button color='primary' className='mx-1 btn-sm' onClick={()=>gotoEmployeeProfile(employee)}>\r\n                            <i className=\"fas fa-eye\"></i>\r\n                            </Button>\r\n\r\n                              <Button\r\n                                color=\"warning\"\r\n                                onClick={() =>\r\n                                  redirectToUpdateBranchEmployee(id, employee?.id)\r\n                                }\r\n                                className=\"mx-1 btn-sm\"\r\n                              >\r\n                                <i className=\"fas fa-edit\"></i>\r\n                              </Button>\r\n                              \r\n                              {/* <LinkButton\r\n                              icon={ <i class=\"fas fa-edit\"></i>}\r\n                              className={\"mr-1 btn-sm\"}\r\n                              color={\"warning\"}\r\n                              url={`/branchEmployeeInformation/${id}/${employee?.id}`}\r\n                              /> */}\r\n\r\n                              <Button\r\n                                color=\"danger\"\r\n                                onClick={() =>\r\n                                  toggleDeleteEmployee(employee)\r\n                                }\r\n                                className=\"mx-1 btn-sm\"\r\n                              >\r\n                                <i className=\"fas fa-trash-alt\"></i>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                            <Modal\r\n                              isOpen={employeeModal}\r\n                              toggle={closeDeleteEmployeeModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={handleDeleteBranchEmployee}\r\n                                  disabled={buttonStatus}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeEmployeeModal}>NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              ) : (\r\n                <h5 className=\"text-center mt-3\">Employee Data Not Found</h5>\r\n              )}\r\n\r\n             \r\n            </Card>\r\n\r\n            <Card>\r\n                <CardHeader>\r\n                    <p className='fw-bold'>Assign Team Employee</p>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    <FormGroup row>\r\n                            <Col sm=\"6\" md=\"4\" lg=\"3\">\r\n                                <Select\r\n                                    styles={customStyles}\r\n                                    options={branchTeamName}\r\n                                    value={{label: branchTeamLabel, value: branchTeamValue }}\r\n                                    onChange={opt => selectBranchTeamName(opt.label, opt.value)}\r\n                                    name=\"type\"\r\n                                    id=\"type\"\r\n                                />\r\n                                </Col>\r\n                    </FormGroup>\r\n\r\n\r\n                    <FormGroup>\r\n\r\n                                <Row>\r\n                                <Col sm=\"12\">\r\n                                {\r\n                                    menus.length > 0 &&\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" onChange={(e)=>handleSelectAll(e)} type=\"checkbox\" name=\"\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"\">Select All</label>\r\n                                    </div>\r\n                                }\r\n                        \r\n                                </Col>\r\n                                {\r\n                                    branchTeamValue &&\r\n                                    menus?.map((menu,i) =>\r\n                                   \r\n                                    <Col xs=\"6\" sm=\"4\" md=\"3\" key={menu?.id}>\r\n                                    <div className=\"form-check\">\r\n                                      \r\n                                        <input className=\"form-check-input\" type=\"checkbox\" onChange={(e)=>handleCheck(e)} name=\"\" id={menu?.id} checked ={checked.includes(`${menu?.id}`) ? true : false}   />\r\n                                        <label className=\"form-check-label\" htmlFor=''>{menu?.firstName}{' '}{menu?.lastName}</label>\r\n                                    </div>\r\n                                    </Col>\r\n                                    )\r\n                                }\r\n                                </Row>\r\n                        </FormGroup>\r\n                \r\n\r\n                    <FormGroup style={{display: 'flex',justifyContent: 'space-between'}}>\r\n                            <Row>\r\n\r\n                                <Col>\r\n                                <Button\r\n                                type=\"submit\"\r\n                                className=\"mr-1 mt-3 badge-primary\"\r\n                                disabled={buttonStatus}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                  \r\n                </CardBody>\r\n\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignTeam;","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport get from \"../../../../helpers/get\";\r\nimport remove from \"../../../../helpers/remove\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Select from \"react-select\";\r\nimport post from \"../../../../helpers/post\";\r\n\r\nimport put from \"../../../../helpers/put\";\r\nimport Manager from \"../IndividualComponent/Manager\";\r\nimport Team from \"../IndividualComponent/Team\";\r\nimport AssignTeam from \"../IndividualComponent/AssignTeam\";\r\n\r\nconst BranchProfile = (props) => {\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n  const { id } = useParams();\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [branchInfo, setBranchInfo] = useState({});\r\n  const [branchManager, setBranchManager] = useState({});\r\n  \r\n  const [serialNum, setSerialNum] = useState(1);\r\n\r\n\r\n  const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [teamInfo, setTeamInfo] = useState({});\r\n\r\n  const [success, setSuccess] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n\r\n  // add on close\r\n\r\n  // add on extra\r\n\r\n  // submitting form\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   setModalOpen(true);\r\n  //   // //  watch form data values\r\n  //   // for (var value of subData.values()) {\r\n\r\n  //   //  }\r\n\r\n  // }\r\n\r\n\r\n\r\n  //\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    get(`Branch/Get/${id}`).then((res) => {\r\n      console.log(\"branch\", res);\r\n      setBranchInfo(res);\r\n    });\r\n\r\n    \r\n  }, [id]);\r\n\r\n  const backToBranchList = () => {\r\n    history.push(\"/branchList\");\r\n  };\r\n  function closeModal(e) {\r\n    e.preventDefault();\r\n    setModalOpen(false);\r\n  }\r\n\r\n\r\n  const handleTeamUpdate = (id) => {\r\n    get(`BranchTeam/Get/${id}`).then((res) => {\r\n    \r\n      setTeamInfo(res);\r\n      setTeamName(res?.name);\r\n      setIsUpdate(true);\r\n      setModalOpen(true);\r\n    });\r\n  };\r\n  const handleTeamSubmit = (e) => {\r\n    e.preventDefault();\r\n    const teamData = new FormData(e.target);\r\n    // for(let  value of teamData.values()){\r\n   \r\n    // }\r\n    if (!isUpdate) {\r\n      post(`BranchTeam/Create`, teamData).then((action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        history.push(\"/branchList\");\r\n      });\r\n    } else {\r\n      for (let val of teamData.values()) {\r\n        \r\n      }\r\n      put(`BranchTeam/Update`, teamData).then((res) => {\r\n        \r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(res.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n\r\n        history.push(\"/branchList\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const functionimplement = () => {\r\n    setModalOpen(true);\r\n\r\n  };\r\n\r\n  const toggleDeleteTeam = (id) => {\r\n    localStorage.setItem(\"teamId\", id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n \r\n\r\n  // const handleDeletebranchTeam = () => {\r\n  //   const id = localStorage.getItem(\"teamId\");\r\n  //   remove(`BranchTeam/Delete/${id}`).then((res) => {\r\n  //     setDeleteModal(false);\r\n  //     addToast(res?.data?.message, {\r\n  //       appearance: \"error\",\r\n  //       autoDismiss: true,\r\n  //     });\r\n     \r\n  //   });\r\n  //    const newTeamData = branchTeam.filter((team) => team?.id != id);\r\n  \r\n  //     setBranchTeam(newTeamData);\r\n\r\n  // };\r\n\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Branch Details</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToBranchList} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Branch List\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n    \r\n\r\n      <div className=\"uapp-employee-profile\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"uapp-employee-profile-right\">\r\n              <div className=\"uapp-profile-CardHeader\">\r\n                {/* <div className=\"uapp-circle-image margin-top-minus\">\r\n                  <img  alt='provider_image' />\r\n                </div>     */}\r\n                <div className=\"py-3\">\r\n                  <h5 className=\"py-1\">\r\n                    Branch Name:{\" \"}\r\n                    <span className=\"text-primary\">{branchInfo?.name}{\" \"}{`(${branchInfo?.branchCode})`}</span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    Branch Address:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.addressLine}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Email:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.email}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Phone Number:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.phoneNumber}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <CardBody>\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center\">\r\n                    <h5>\r\n                      {\" \"}\r\n                      Country:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.country?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5>\r\n                      {\" \"}\r\n                      State:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.state?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"8\">\r\n\r\n            <AssignTeam\r\n            id ={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            >\r\n\r\n            </AssignTeam>\r\n          \r\n          </Col>\r\n\r\n          <Col md=\"4\">\r\n            <Manager \r\n            id={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            ></Manager>\r\n        \r\n            <Team\r\n            id={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            \r\n            />\r\n           \r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BranchProfile;\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;"],"sourceRoot":""}