{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Components/LinkButton.js","views/SMS/UniversitySubjects/SubDepartment.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","LinkButton","props","target","activeStyle","to","connect","state","alldepartmentList","departmentDataReducer","departmentList","useHistory","useDispatch","useState","modalOpen","setModalOpen","deleteModal","setDeleteModal","success","setSuccess","addToast","useToasts","departmentLabel","setdepartmentLabel","departmentValue","setdepartmentValue","departmentError","setDepartmentError","filterdepartmentLabel","setfilterdepartmentLabel","filterdepartmentValue","setfilterdepartmentValue","setSubdepartment","setdepartmentList","subdepartmentList","setSubDepartmentList","SubdepId","setSubdepId","SubdepName","setSubdepName","setDescription","useEffect","get","then","action","departmentName","map","depart","label","value","id","closeModal","closeDeleteModal","lg","md","options","onChange","opt","sm","xs","style","display","justifyContent","length","isOpen","toggle","onSubmit","e","preventDefault","subdata","FormData","values","data","message","appearance","autoDismiss","row","required","placeholder","rows","Ripple","textAlign","subDeplist","i","key","scope","departmentinfo","variant","subDepListId","remove"],"mappings":"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","file":"static/js/225.27f2874e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  Table,\r\n  ButtonGroup\r\n} from \"reactstrap\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport get from \"../../../helpers/get\";\r\nimport post from \"../../../helpers/post\";\r\nimport remove from \"../../../helpers/remove\";\r\nimport put from \"../../../helpers/put\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonForFunction from \"../Components/ButtonForFunction\";\r\nimport LinkButton from \"../Components/LinkButton\";\r\n\r\nconst SubDepartment = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const [departmentLabel, setdepartmentLabel] = useState(\"Select Department\");\r\n  const [departmentValue, setdepartmentValue] = useState(0);\r\n\r\n  const [departmentError, setDepartmentError] = useState(false);\r\n\r\n  const [filterdepartmentLabel, setfilterdepartmentLabel] =\r\n    useState(\"Select Department\");\r\n  const [filterdepartmentValue, setfilterdepartmentValue] = useState(0);\r\n\r\n  const [subdepartment, setSubdepartment] = useState(\"\");\r\n  const [departmentList, setdepartmentList] = useState([0]);\r\n  const [subdepartmentList, setSubDepartmentList] = useState([]);\r\n  const [searchStr, setSearchStr] = useState(\"\");\r\n  const [SubdepId, setSubdepId] = useState(0);\r\n  const [SubdepName, setSubdepName] = useState(\"\");\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const returnValue = get(`DepartmentDD/Index`).then((action) => {\r\n      setdepartmentList(action);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const returnValue = get(\r\n      `SubDepartment/Index?id=${filterdepartmentValue}`\r\n    ).then((action) => {\r\n      setSubDepartmentList(action);\r\n    });\r\n  }, [success, filterdepartmentValue]);\r\n\r\n  const departmentName = departmentList?.map((depart) => ({\r\n    label: depart.name,\r\n    value: depart.id,\r\n  }));\r\n\r\n  const selectDepartmentName = (label, value) => {\r\n    setdepartmentLabel(label);\r\n    setdepartmentValue(value);\r\n    setDepartmentError(false);\r\n  };\r\n\r\n  const selectDepartmentNamefilder = (label, value) => {\r\n    setfilterdepartmentLabel(label);\r\n    setfilterdepartmentValue(value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // const subdata = {\r\n    //   name: subdepartment,\r\n    //   departmentId: departmentValue,\r\n    //   description:description\r\n\r\n    // }\r\n    const subdata = new FormData(e.target);\r\n    for (let val of subdata.values()) {\r\n    }\r\n\r\n    if (departmentValue === 0) {\r\n      setDepartmentError(true);\r\n    } else {\r\n      post(`SubDepartment/Create`, subdata).then((action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action?.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        setdepartmentLabel(\"Select Country\");\r\n        setdepartmentValue(0);\r\n      });\r\n    }\r\n  };\r\n\r\n  // on Close Modal\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  // redirect to dashboard\r\n  const backToDashboard = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const toggleDanger = (name, id) => {\r\n    setSubdepName(name);\r\n    setSubdepId(id);\r\n    setDeleteModal(true);\r\n  };\r\n  // on Close Delete Modal\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    setSubdepName(\"\");\r\n    setSubdepId(0);\r\n  };\r\n\r\n  const handleDeleteSubDep = (id) => {\r\n    const returnValue = remove(`SubDepartment/Delete/${id}`).then((action) => {\r\n      setDeleteModal(false);\r\n      setSuccess(!success);\r\n      addToast(action, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n\r\n      //  localStorage.removeItem('depName')\r\n      setSubdepName(\"\");\r\n      setSubdepId(0);\r\n    });\r\n  };\r\n\r\n  // update submit\r\n  // const handleUpdateSubmit = () => {\r\n\r\n  //   const id = localStorage.getItem('updateSupdep');\r\n\r\n  //   const subData = {\r\n  //     id: id,\r\n  //     name: subdepartment,\r\n  //     departmentId: departmentValue,\r\n  //     description:description\r\n  //   }\r\n\r\n  //  const returnvalue = put(`SubDepartment/Update`,subData).then((action)=> {\r\n  //     setSuccess(!success);\r\n  //     setModalOpen(false)\r\n  //     addToast(action, {\r\n  //       appearance: action == 'SubDepartment updated successfully.' ? 'success': 'error',\r\n  //       autoDismiss: true,\r\n  //     })\r\n  //     setdepartmentLabel('Select Department');\r\n  //     setdepartmentValue(0);\r\n  //    localStorage.removeItem('updateSupdep')\r\n  //   })\r\n  // }\r\n\r\n  const AddModalOpen = () => {\r\n    setModalOpen(true);\r\n    setSubdepartment(\"\");\r\n    setdepartmentLabel(\"Select Department\");\r\n    setdepartmentValue(0);\r\n    setDescription(\"\");\r\n    // localStorage.removeItem('updateSupdep')\r\n  };\r\n\r\n  // on enter press\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n    }\r\n  };\r\n  // search handler\r\n  const handleSearch = () => {};\r\n\r\n  // on clear\r\n  const handleClearSearch = () => {\r\n    setfilterdepartmentLabel(\"Select Department\");\r\n    setfilterdepartmentValue(0);\r\n  };\r\n\r\n  const redirectToEditSubDepartment = subDepListId => {\r\n    history.push(`/editSubDepartment/${subDepListId}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Sub Department List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card className=\"uapp-employee-search\">\r\n        <CardBody>\r\n          <Row>\r\n            <Col lg=\"12\" md=\"4\">\r\n              <Select\r\n                options={departmentName}\r\n                value={{\r\n                  label: filterdepartmentLabel,\r\n                  value: filterdepartmentValue,\r\n                }}\r\n                onChange={(opt) =>\r\n                  selectDepartmentNamefilder(opt.label, opt.value)\r\n                }\r\n                name=\"departmentId\"\r\n                id=\"departmentId\"\r\n              />\r\n            </Col>\r\n\r\n            {/* <Col lg=\"4\" md=\"4\">\r\n            <Input\r\n              style={{ height: \"2.7rem\" }}\r\n              type=\"text\"\r\n              name=\"search\"\r\n              value={searchStr}\r\n              id=\"search\"\r\n              placeholder=\"Sub Department Name\"\r\n              onChange={(e) => setSearchStr(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n            </Col> */}\r\n\r\n            {/* <Col lg=\"4\" md=\"4\">\r\n              <div style={{display: 'flex', justifyContent: \"space-between\"}}>\r\n\r\n              <div className=\"uapp-Search-div\">\r\n                <i onClick={handleSearch} className=\"fas fa-search\"></i>\r\n              </div>\r\n\r\n              <div className=\"mt-2\">\r\n                <span onClick={handleClearSearch} className=\"btn btn-danger\">Clear</span>\r\n                <span className=\"btn btn-danger\">Clear</span>\r\n              </div>\r\n\r\n              </div>\r\n              \r\n            </Col> */}\r\n\r\n            {/* <Col lg=\"3\" md=\"3\" sm=\"6\" xs=\"6\">\r\n              <div className=\"uapp-Search-div\">\r\n                <span>Reset</span>\r\n            \r\n              </div>\r\n            </Col> */}\r\n          </Row>\r\n          <Row className=\"\">\r\n            <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n              <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                <div\r\n                  className=\"mt-1 mx-1 d-flex btn-clear\"\r\n                  onClick={handleClearSearch}\r\n                >\r\n                  {/* <Icon.X  className='text-danger' />*/}\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"fa fa-times\"></i> Clear\r\n                  </span>\r\n                </div>\r\n\r\n                {/* <div className=\"mt-2 mx-1\">\r\n                <span className=\"btn btn-primary\">Export</span>\r\n              </div> */}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <ButtonForFunction\r\n              className={\"btn btn-uapp-add\"}\r\n              func={AddModalOpen}\r\n              icon={<i className=\"fas fa-plus\"></i>}\r\n              name={\" Add New Sub Department\"}\r\n              permission={6}\r\n            />\r\n\r\n            <div>\r\n              {\" \"}\r\n              <b>\r\n                {\" \"}\r\n                Total{\" \"}\r\n                <span className=\"badge badge-primary\">\r\n                  {\" \"}\r\n                  {subdepartmentList?.length}{\" \"}\r\n                </span>{\" \"}\r\n                Sub Department Found{\" \"}\r\n              </b>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <div>\r\n              <Modal\r\n                isOpen={modalOpen}\r\n                toggle={closeModal}\r\n                className=\"uapp-modal\"\r\n              >\r\n                <ModalHeader>Add Sub Department</ModalHeader>\r\n                <ModalBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <FormGroup row className=\"has-icon-left position-relative\">\r\n                      <Col md=\"4\">\r\n                        <span>\r\n                          Name <span className=\"text-danger\">*</span>{\" \"}\r\n                        </span>\r\n                      </Col>\r\n                      <Col md=\"8\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          required\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          placeholder=\"Create Sub Department Name\"\r\n                          onChange={(e) => setSubdepartment(e.target.value)}\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"has-icon-left position-relative\">\r\n                      <Col md=\"4\">\r\n                        <span>\r\n                          Department <span className=\"text-danger\">*</span>{\" \"}\r\n                        </span>\r\n                      </Col>\r\n                      <Col md=\"8\">\r\n                        <Select\r\n                          options={departmentName}\r\n                          value={{\r\n                            label: departmentLabel,\r\n                            value: departmentValue,\r\n                          }}\r\n                          onChange={(opt) =>\r\n                            selectDepartmentName(opt.label, opt.value)\r\n                          }\r\n                          name=\"departmentId\"\r\n                          id=\"departmentId\"\r\n                        />\r\n\r\n                        {departmentError ? (\r\n                          <span className=\"text-danger\">\r\n                            Department is required.\r\n                          </span>\r\n                        ) : null}\r\n                      </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"has-icon-left position-relative\">\r\n                      <Col md=\"4\">\r\n                        <span>\r\n                          Description <span className=\"text-danger\">*</span>{\" \"}\r\n                        </span>\r\n                      </Col>\r\n                      <Col md=\"8\">\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          required\r\n                          name=\"description\"\r\n                          id=\"description\"\r\n                          rows=\"3\"\r\n                          placeholder=\"Description\"\r\n                          onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup\r\n                      className=\"has-icon-left position-relative\"\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        color=\"danger\"\r\n                        className=\"mr-1 mt-3\"\r\n                        onClick={closeModal}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                      {/* {\r\n        localStorage.getItem(\"updateSupdep\") ?\r\n          <Button color=\"warning\" className=\"mr-1 mt-3\" onClick={handleUpdateSubmit} >Update</Button> : */}\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-3\"\r\n                      >\r\n                        Submit\r\n                      </Button.Ripple>\r\n                      {/* } */}\r\n                    </FormGroup>\r\n                  </Form>\r\n                </ModalBody>\r\n              </Modal>\r\n            </div>\r\n\r\n            <div className=\"table-responsive\">\r\n              <Table className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    <th>SL/NO</th>\r\n                    <th> Name</th>\r\n                    <th className=\"text-center\">Department</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {subdepartmentList?.map((subDeplist, i) => (\r\n                    <tr key={subDeplist.id} style={{ textAlign: \"center\" }}>\r\n                      <th scope=\"row\">{i + 1}</th>\r\n                      <td>{subDeplist?.name}</td>\r\n                      <td>{subDeplist?.departmentinfo?.name}</td>\r\n                      <td>\r\n                        {/* <Button className=\"mx-1 btn-sm\" onClick={() => toggleDanger(subDeplist.name, subDeplist.id)} color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n                       <ButtonGroup variant=\"text\">\r\n\r\n                        <ButtonForFunction\r\n                          func={() =>\r\n                            toggleDanger(subDeplist.name, subDeplist.id)\r\n                          }\r\n                          className={\"mx-1 btn-sm\"}\r\n                          color={\"danger\"}\r\n                          icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                          permission={6}\r\n                        />\r\n\r\n                        {/* <Link to={`editSubDepartment/${subDeplist?.id}`}>\r\n                      <Button className=\"mx-1 btn-sm\" color=\"warning\"><i className=\"fas fa-edit\"></i></Button>\r\n                    </Link> */}\r\n\r\n                        {/* <LinkButton\r\n                          url={`editSubDepartment/${subDeplist?.id}`}\r\n                          className={\"mx-1 btn-sm\"}\r\n                          color={\"warning\"}\r\n                          icon={<i className=\"fas fa-edit\"></i>}\r\n                          permission={6}\r\n                        /> */}\r\n\r\n                        <ButtonForFunction\r\n                          func={() =>\r\n                            redirectToEditSubDepartment(subDeplist?.id)\r\n                          }\r\n                          className={\"mx-1 btn-sm\"}\r\n                          color={\"warning\"}\r\n                          icon={<i className=\"fas fa-edit\"></i>}\r\n                          permission={6}\r\n                        />\r\n\r\n                        </ButtonGroup>\r\n\r\n                        <Modal\r\n                          isOpen={deleteModal}\r\n                          toggle={closeDeleteModal}\r\n                          className=\"uapp-modal\"\r\n                        >\r\n                          <ModalBody>\r\n                            <p>\r\n                              Are You Sure to Delete this <b>{SubdepName}</b> ?\r\n                              Once Deleted it can't be Undone!\r\n                            </p>\r\n                          </ModalBody>\r\n\r\n                          <ModalFooter>\r\n                            <Button\r\n                              color=\"danger\"\r\n                              onClick={() => handleDeleteSubDep(SubdepId)}\r\n                            >\r\n                              YES\r\n                            </Button>\r\n                            <Button color=\"primary\" onClick={closeDeleteModal}>\r\n                              NO\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  alldepartmentList: state.departmentDataReducer.departmentList,\r\n});\r\nexport default connect(mapStateToProps)(SubDepartment);\r\n"],"sourceRoot":""}