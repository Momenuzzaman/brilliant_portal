{"version":3,"sources":["views/SMS/Provider/Admin/ProviderAdminList.js"],"names":["ProviderAdminList","history","useHistory","useState","providerList","setProviderList","searchStr","setSearchStr","setCurrentPage","setProviderLabel","setProviderValue","setCallApi","serialNum","loading","addToast","useToasts","adminData","setAdminData","deleteModal","setDeleteModal","useDispatch","useEffect","get","then","res","console","log","toggleDeleteProvider","closeDeleteModal","className","onClick","push","lg","md","sm","xs","style","height","type","name","value","id","placeholder","onChange","e","target","prev","onKeyDown","event","key","display","justifyContent","cursor","to","textAlign","map","prov","i","textDecoration","width","variant","color","class","isOpen","toggle","remove","appearance","autoDismiss","newData","filter","data"],"mappings":"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","file":"static/js/176.decfa5e0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { Card, CardBody, CardHeader, ButtonGroup, Button,  Input, Col, Row, Table, Modal, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport get from '../../../../helpers/get';\r\nimport remove from '../../../../helpers/remove';\r\n\r\nconst ProviderAdminList = () => {\r\n\r\n\r\n    const history = useHistory();\r\n\r\n\r\n   \r\n    const [providerList, setProviderList] = useState([]);\r\n    const [searchStr, setSearchStr] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [providerLabel, setProviderLabel] = useState('Select provider type ');\r\n    const [providerValue, setProviderValue] = useState(0);\r\n    const [callApi, setCallApi] = useState(false);\r\n    const [serialNum, setSerialNum] = useState(0);\r\n    const [entity, setEntity] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const {addToast} = useToasts();\r\n    const [providerType, setProviderType] = useState([]);\r\n    const [adminData, setAdminData] = useState([]);\r\n\r\n\r\n \r\n\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n\r\n        get('ProviderAdmin/GetAll')\r\n        .then(res => {\r\n            console.log('Admin Data', res);\r\n            setAdminData(res);\r\n        })\r\n\r\n    },[])\r\n\r\n      // redirect to dashboard\r\n      const backToDashboard = () => {\r\n        history.push(\"/\")\r\n      }\r\n\r\n      const toggleDeleteProvider = () => {\r\n      \r\n        setDeleteModal(true);\r\n      \r\n      };\r\n\r\n\r\n      const closeDeleteModal = () => {\r\n        setDeleteModal(false);\r\n      };\r\n\r\n      const deleteProvider  = (id) =>{\r\n        remove(`Provider/Delete/${id}`)\r\n        .then(res => {\r\n        \r\n          \r\n          addToast(res, {\r\n            appearance:  'error',\r\n            autoDismiss: true,\r\n          })\r\n          setDeleteModal(false);\r\n          const newData = providerList.filter(data => data.id != id );\r\n          setProviderList(newData);\r\n        })\r\n  \r\n      }\r\n\r\n\r\n          // search handler\r\n    const handleSearch = () => {\r\n        setCurrentPage(1);\r\n        setCallApi((prev) => !prev);\r\n      }\r\n    \r\n\r\n      const searchValue = (e) => {\r\n        setSearchStr(e.target.value);\r\n        handleSearch();\r\n        \r\n      }\r\n    \r\n      // on clear\r\n      const handleClearSearch = () => {\r\n        \r\n        \r\n        setSearchStr('');\r\n        setProviderLabel('Select Provider');\r\n        setProviderValue(0);\r\n        setCallApi(prev => !prev);\r\n      }\r\n    \r\n      // on enter press\r\n      const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n          setCurrentPage(1);\r\n          setCallApi((prev) => !prev);\r\n        }\r\n      }\r\n  \r\n      \r\n\r\n    return (\r\n        <div>\r\n\r\n        <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-light\">Provider Admin List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span className=\"text-light\" onClick={backToDashboard}>\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n\r\n      <Card className=\"uapp-employee-search\">\r\n        <CardBody>\r\n\r\n          <Row>\r\n\r\n          \r\n\r\n            \r\n            <Col lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">\r\n            <Input\r\n              style={{ height: \"2.7rem\" }}\r\n              type=\"text\"\r\n              name=\"searchstring\"\r\n              value={searchStr}\r\n              id=\"searchstring\"\r\n              placeholder=\"Name, Short Name\"\r\n              onChange={searchValue}\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n            </Col>\r\n          \r\n\r\n           \r\n\r\n            {/* <Col lg=\"3\" md=\"3\" sm=\"6\" xs=\"6\">\r\n              <div className=\"uapp-Search-div\">\r\n                <span>Reset</span>\r\n            \r\n              </div>\r\n            </Col> */}\r\n          </Row>\r\n\r\n          <Row className='mt-4'>\r\n         \r\n          <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n              <div style={{display: 'flex', justifyContent: \"end\"}}>\r\n\r\n            \r\n\r\n              <div className=\"mt-2 mx-1 d-flex hovv  \" style={{cursor: 'pointer'}} onClick={handleClearSearch}>\r\n                <Icon.X  className='text-danger' /><h5  className=\"text-danger\">Clear</h5>\r\n              </div>\r\n\r\n              {/* <div className=\"mt-2 mx-1\">\r\n                <span className=\"btn btn-primary\">Export</span>\r\n              </div> */}\r\n\r\n\r\n              </div>\r\n              \r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n\r\n      <Card className='uapp-employee-search'>\r\n      <CardBody>\r\n\r\n   <Row className=\"mb-3\">\r\n\r\n     <Col lg=\"6\" md=\"5\" sm=\"6\" xs=\"4\">\r\n     <Link to ='/adminProviderForm'>\r\n     <Button  className=\"btn btn-uapp-add \"> <i className=\"fas fa-plus\"></i>  Add New </Button>\r\n     </Link>\r\n     </Col>\r\n\r\n\r\n\r\n  \r\n   </Row>\r\n\r\n\r\n\r\n   {\r\n     loading ?\r\n       <h2 className=\"text-center\">Loading...</h2>\r\n       :\r\n       <div className=\"table-responsive\">\r\n         <Table className=\"table-sm table-bordered\" >\r\n           <thead className=\"thead-uapp-bg\">\r\n             <tr style={{ textAlign: \"center\" }}>\r\n               <th>SL/NO</th>\r\n                                \r\n               <th>Title</th>                    \r\n               <th>Name</th>                    \r\n               <th>Phone Number</th>\r\n               <th>Email</th>\r\n               <th>Password</th>\r\n\r\n\r\n               <th  className=\"text-center\">Action</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n\r\n             {\r\n               adminData?.map((prov, i) => <tr key={prov.id} style={{ textAlign: \"center\" }}>\r\n                 <td>{serialNum + i}</td>\r\n               \r\n                 <td></td>\r\n                 <td></td>\r\n                 <td></td>\r\n               <Link style={{textDecoration: 'none' }} >\r\n               <td className='hovv  badge-primary'></td>\r\n               </Link>\r\n                \r\n                 <td style={{width: '8%'}} className=\"text-center\">\r\n                   <ButtonGroup variant=\"text\">\r\n\r\n                    <Link>\r\n                    <Button color=\"primary\" className=\"mx-1 btn-sm\"> <i className=\"fas fa-eye\"></i> </Button>\r\n                    </Link>\r\n                     <Link>\r\n                     <Button color=\"dark\" className=\"mx-1 btn-sm\"> <i className=\"fas fa-edit\"></i> </Button>\r\n                     </Link>\r\n\r\n                     <Button color=\"danger\" onClick={toggleDeleteProvider} className=\"mx-1 btn-sm\"><i class=\"fas fa-trash-alt\"></i></Button>\r\n                   </ButtonGroup>\r\n                   <Modal\r\n                       isOpen={deleteModal}\r\n                       toggle={closeDeleteModal}\r\n                       className=\"uapp-modal\"\r\n                     >\r\n                       <ModalBody>\r\n                         <p>\r\n                           Are You Sure to Delete this ? Once Deleted it\r\n                           can't be Undone!\r\n                         </p>\r\n                       </ModalBody>\r\n\r\n                       <ModalFooter>\r\n                         <Button\r\n                           color=\"danger\"\r\n                           onClick={() => deleteProvider(prov?.id)}\r\n                         >\r\n                           YES\r\n                         </Button>\r\n                         <Button onClick={closeDeleteModal}>NO</Button>\r\n                       </ModalFooter>\r\n                     </Modal>\r\n                 </td>\r\n               </tr>)\r\n\r\n             }\r\n\r\n\r\n           </tbody>\r\n         </Table>\r\n       </div>\r\n   }\r\n\r\n\r\n  \r\n\r\n </CardBody>\r\n</Card>\r\n\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProviderAdminList;"],"sourceRoot":""}