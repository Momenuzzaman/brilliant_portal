{"version":3,"sources":["helpers/put.js","helpers/post.js","views/SMS/DistributionLevelSetting/Form.js","views/SMS/DistributionLevelSetting/List.js","views/SMS/DistributionLevelSetting/Index.js"],"names":["AuthStr","localStorage","getItem","url","body","Axios","put","rootUrl","headers","res","response","status","history","push","axios","post","DistributionLevelSettingForm","props","success","setSuccess","name","setName","value","setValue","percent","setPercent","update","setUpdate","data","setData","addToast","useToasts","className","onSubmit","event","preventDefault","subData","FormData","target","then","isSuccess","message","appearance","autoDismiss","type","id","FormGroup","row","Col","md","Input","onChange","e","required","Button","color","DistributionLevelSettingList","distributionData","toggleUpdate","useState","deleteModal","setDeleteModal","delData","setDelData","console","log","confirmDelete","remove","Table","style","textAlign","map","ls","i","key","levelName","levelValue","commissionPercent","width","ButtonGroup","variant","onClick","Modal","isOpen","toggle","ModalBody","ModalFooter","DistributionLevelSetting","useHistory","setDistributionData","useEffect","get","Card","CardHeader","CardBody"],"mappings":";o8MAKA,IAAMA,EAAUC,aAAaC,QAAQ,S,4CACrC,WAAmBC,GAAnB,4FAAwBC,EAAxB,+BAA+B,GAA/B,+BAA+C,GAA/C,kBAEsBC,IAAMC,IAAN,UAAaC,KAAb,OAAuBJ,GAAOC,EAAM,CACpDI,QAAS,CACP,cAAiBR,KAJzB,cAEUS,EAFV,gBAOiBA,EAPjB,gFASkC,MAA1B,KAAMC,SAASC,QACjBC,IAAQC,KAAK,QAVnB,gE,sBAiBeP,I,o6MClBf,IAAMN,EAAUC,aAAaC,QAAQ,S,4CAErC,WAAoBC,GAApB,8FAAyBC,EAAzB,+BAAgC,GAAhC,+BAAgD,GAAhD,kBAEsBU,IAAMC,KAAN,UAAcR,KAAd,OAAwBJ,GAAOC,EAAM,CACrDI,QAAS,CACP,cAAiBR,KAJzB,cAEUS,EAFV,gBAOiBA,EAPjB,gFASoC,OAA5B,2CAAOC,gBAAP,eAAiBC,SACnBC,IAAQC,KAAK,QAVnB,gE,sBAiBeE,I,2NC4IAC,EA/JsB,SAACC,GAElC,IAAOC,EAA8GD,EAA9GC,QAASC,EAAqGF,EAArGE,WAAYC,EAAyFH,EAAzFG,KAAMC,EAAmFJ,EAAnFI,QAASC,EAA0EL,EAA1EK,MAAOC,EAAmEN,EAAnEM,SAAUC,EAAyDP,EAAzDO,QAASC,EAAgDR,EAAhDQ,WAAYC,EAAoCT,EAApCS,OAAQC,EAA4BV,EAA5BU,UAAWC,EAAiBX,EAAjBW,KAAMC,EAAWZ,EAAXY,QAEnGC,EAAYC,sBAAZD,SAgDP,OACI,6BAEQ,yBAAKE,UAAU,QACf,0BAAMA,UAAU,uBAAhB,mCAGA,0BAAOC,SAnDE,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAU,IAAIC,SAASH,EAAMI,QAEhCZ,EAECpB,YAAI,kCAAkC8B,GACrCG,MAAK,SAAA9B,GAAQ,IAAD,EACiD,EAApC,MAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKE,SAAyC,IAArB,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAKmB,YAAL,eAAWY,aAChCV,EAAQ,OAACrB,QAAD,IAACA,GAAD,UAACA,EAAKmB,YAAN,aAAC,EAAWa,QAAQ,CACxBC,WAAY,UACZC,aAAa,IAEjBtB,EAAQ,IACRE,EAAS,IACTE,EAAW,IACXN,GAAYD,GACZW,EAAQ,IACRF,GAAU,OAOtBZ,YAAK,kCAAkCqB,GAC1CG,MAAK,SAAA9B,GAAQ,IAAD,EACiD,EAApC,MAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKE,SAAyC,IAArB,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAKmB,YAAL,eAAWY,aAChCV,EAAQ,OAACrB,QAAD,IAACA,GAAD,UAACA,EAAKmB,YAAN,aAAC,EAAWa,QAAQ,CACxBC,WAAY,UACZC,aAAa,IAEjBtB,EAAQ,IACRE,EAAS,IACTE,EAAW,IACXN,GAAYD,SAoBhBQ,EAEA,2BACAkB,KAAK,SACLxB,KAAK,KACLyB,GAAG,KACHvB,MAAK,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,KAGb,KAGA,kBAACC,EAAA,EAAD,CAAWC,KAAG,EAACf,UAAU,mCACzB,kBAACgB,EAAA,EAAD,CAAKC,GAAG,KACR,4CACW,0BAAMjB,UAAU,kBAG3B,kBAACgB,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACC,EAAA,EAAD,CACAN,KAAK,OACLxB,KAAK,YACLyB,GAAG,YACHvB,MAAOF,EACP+B,SAAU,SAACC,GAAD,OAAM/B,EAAQ+B,EAAEd,OAAOhB,QACjC+B,UAAQ,MAOR,kBAACP,EAAA,EAAD,CAAWC,KAAG,EAACf,UAAU,mCACzB,kBAACgB,EAAA,EAAD,CAAKC,GAAG,KACR,6CACY,0BAAMjB,UAAU,kBAG5B,kBAACgB,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACC,EAAA,EAAD,CACAN,KAAK,SACLxB,KAAK,aACLyB,GAAG,aACHvB,MAAOA,EACP6B,SAAU,SAACC,GAAD,OAAK7B,EAAS6B,EAAEd,OAAOhB,QACjC+B,UAAQ,MAOR,kBAACP,EAAA,EAAD,CAAWC,KAAG,EAACf,UAAU,mCACzB,kBAACgB,EAAA,EAAD,CAAKC,GAAG,KACR,oDACmB,0BAAMjB,UAAU,kBAGnC,kBAACgB,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACC,EAAA,EAAD,CACAN,KAAK,SACLxB,KAAK,oBACLyB,GAAG,oBACHvB,MAAOE,EACP2B,SAAU,SAACC,GAAD,OAAM3B,EAAW2B,EAAEd,OAAOhB,QACpC+B,UAAQ,MASR,yBAAKrB,UAAU,mCAGf,6BACA,kBAACsB,EAAA,EAAD,CAAQC,MAAM,UAAUX,KAAK,UAA7B,e,sDC/BDY,EA7GsB,SAACvC,GAElC,IAAOC,EAAuDD,EAAvDC,QAASC,EAA8CF,EAA9CE,WAAYsC,EAAkCxC,EAAlCwC,iBAAkBC,EAAgBzC,EAAhByC,aAC9C,EAAqCC,oBAAS,GAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAeC,EAAf,KACOjC,EAAYC,sBAAZD,SAEPkC,QAAQC,IAAIR,GAEZ,IAMMS,EAAgB,WAClBC,YAAO,mCAAD,cAAoCL,QAApC,IAAoCA,OAApC,EAAoCA,EAASjB,KAClDN,MAAK,SAAA9B,GACFqB,EAASrB,EAAI,CACTiC,WAAW,QACXC,aAAa,IAEjBxB,GAAYD,GACZ2C,GAAe,OAOvB,OACI,6BACI,yBAAK7B,UAAU,QACb,0BAAMA,UAAU,uBAAhB,oCAGD,kBAACoC,EAAA,EAAD,CAAOpC,UAAU,2BACV,2BAAOA,UAAU,iBACjB,wBAAIqC,MAAO,CAAEC,UAAW,WAExB,0CACC,2CACA,kDACA,wCAGD,sCACCb,QADD,IACCA,OADD,EACCA,EAAkBc,KAAI,SAACC,EAAIC,GAAL,OACvB,wBAAIC,IAAKD,EAAGJ,MAAO,CAAEC,UAAW,WAE9B,mCACGE,QADH,IACGA,OADH,EACGA,EAAIG,WAEP,mCACGH,QADH,IACGA,OADH,EACGA,EAAII,YAEP,mCACGJ,QADH,IACGA,OADH,EACGA,EAAIK,mBAKP,wBAAIR,MAAO,CAAES,MAAO,OAAS9C,UAAU,eACrC,kBAAC+C,EAAA,EAAD,CAAaC,QAAQ,QAIjB,kBAAC1B,EAAA,EAAD,CAAQtB,UAAU,cAAcuB,MAAM,UAAU0B,QAAS,kBAAIvB,EAAac,KAC1E,uBAAGxC,UAAU,iBAKb,kBAACsB,EAAA,EAAD,CAAQtB,UAAU,cAAcuB,MAAM,SAAS0B,QAAS,kBA/D5ElB,EA+D6FS,QA9D7FX,GAAe,KA+DK,uBAAG7B,UAAU,uBASjB,kBAACkD,EAAA,EAAD,CAAOC,OAAQvB,EAAawB,OAAQ,kBAAMvB,GAAgBD,IAAc5B,UAAU,cAClF,kBAACqD,EAAA,EAAD,KACE,8FAGF,kBAACC,EAAA,EAAD,KACE,kBAAChC,EAAA,EAAD,CAASC,MAAM,SAAS0B,QAASf,GAAjC,OACA,kBAACZ,EAAA,EAAD,CAAQ2B,QAAS,kBAAMpB,GAAe,KAAtC,iBCUX0B,UAlGkB,WAE7B,IAAM3E,EAAU4E,cAChB,EAA6B7B,oBAAS,GAAtC,mBAAOzC,EAAP,KAAeC,EAAf,KACA,EAAgDwC,mBAAS,IAAzD,mBAAOF,EAAP,KAAyBgC,EAAzB,KACA,EAAuB9B,mBAAS,IAAhC,mBAAOvC,EAAP,KAAYC,EAAZ,KACA,EAAyBsC,mBAAS,IAAlC,mBAAOrC,EAAP,KAAaC,EAAb,KACA,EAA6BoC,mBAAS,IAAtC,mBAAOnC,EAAP,KAAeC,EAAf,KACA,EAA2BkC,oBAAS,GAApC,mBAAOjC,EAAP,KAAcC,EAAd,KACA,EAAsBgC,mBAAS,IAA/B,mBAAO/B,EAAP,KAAYC,EAAZ,KAMA6D,qBAAU,WAENC,YAAI,kCACHpD,MAAK,SAAA9B,GACFgF,EAAoBhF,QAG1B,CAACS,IAgBH,OACI,6BAEA,kBAAC0E,EAAA,EAAD,CAAM5D,UAAU,gBACV,kBAAC6D,EAAA,EAAD,CAAY7D,UAAU,eACpB,wBAAIA,UAAU,cAAd,8BACA,yBAAKA,UAAU,4BACb,0BAAMA,UAAU,aAAaiD,QAlCnB,WACpBrE,EAAQC,KAAK,OAkCA,IACD,uBAAGmB,UAAU,6BAFf,yBAQN,kBAAC4D,EAAA,EAAD,KAEI,kBAACE,EAAA,EAAD,KACA,yBAAK9D,UAAU,OAEf,yBAAKA,UAAU,YACX,kBAAC,EAAD,CACAd,QAASA,EACTC,WAAYA,EACZO,OAAQA,EACRC,UAAWA,EACXP,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVC,QAASA,EACTC,WAAYA,EACZG,KAAMA,EACNC,QAASA,KAKb,yBAAKG,UAAU,YACX,kBAAC,EAAD,CACAd,QAASA,EACTC,WAAYA,EACZsC,iBAAkBA,EAElBC,aA1DK,SAAC9B,GAClBD,GAAU,GACVgE,YAAI,gCAAD,cAAiC/D,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAMiB,KACzCN,MAAK,SAAA9B,GACFoB,EAAQpB,GACRY,EAAO,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAKkE,WACbpD,EAAQ,OAACd,QAAD,IAACA,OAAD,EAACA,EAAKmE,YACdnD,EAAU,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAKoE","file":"static/js/227.7b44c730.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error.response.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import React, { useState } from 'react';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, TabContent, TabPane, Nav, NavItem, NavLink, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport post from '../../../helpers/post';\r\nimport put from '../../../helpers/put';\r\nconst DistributionLevelSettingForm = (props) => {\r\n\r\n    const {success, setSuccess, name, setName, value, setValue, percent, setPercent, update, setUpdate, data, setData} = props;\r\n\r\n    const {addToast} = useToasts();\r\n  \r\n    \r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const subData = new FormData(event.target);\r\n\r\n        if(update){\r\n\r\n            put(`DistributionLevelSetting/Update`,subData)\r\n            .then(res => {\r\n                    if(res?.status == 200 && res?.data?.isSuccess == true){\r\n                        addToast(res?.data?.message,{\r\n                            appearance: 'success',\r\n                            autoDismiss: true\r\n                        })\r\n                        setName('');\r\n                        setValue('');\r\n                        setPercent('');\r\n                        setSuccess(!success);\r\n                        setData({});\r\n                        setUpdate(false);\r\n                    }\r\n            })\r\n\r\n        }\r\n        else{\r\n\r\n            post(`DistributionLevelSetting/Create`,subData)\r\n        .then(res => {\r\n                if(res?.status == 200 && res?.data?.isSuccess == true){\r\n                    addToast(res?.data?.message,{\r\n                        appearance: 'success',\r\n                        autoDismiss: true\r\n                    })\r\n                    setName('');\r\n                    setValue('');\r\n                    setPercent('');\r\n                    setSuccess(!success);\r\n                }\r\n        })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n                <div className='mb-4'>\r\n                <span className='branch-title-style2'>Add Distribution Level Setting</span>\r\n                </div>\r\n\r\n                <form  onSubmit={handleSubmit}> \r\n\r\n\r\n               {\r\n                update ? \r\n\r\n                <input\r\n                type='hidden'\r\n                name='id'\r\n                id='id'\r\n                value={data?.id}\r\n                />\r\n                :\r\n                null\r\n               }\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                <Col md=\"4\">\r\n                <span>\r\n                Level Name <span className=\"text-danger\"></span>\r\n                </span>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                <Input\r\n                type='text'\r\n                name=\"levelName\"\r\n                id=\"levelName\"\r\n                value={name}\r\n                onChange={(e)=> setName(e.target.value)}\r\n                required\r\n\r\n                />\r\n\r\n                </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                <Col md=\"4\">\r\n                <span>\r\n                Level Value <span className=\"text-danger\"></span>\r\n                </span>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                <Input\r\n                type='number'\r\n                name=\"levelValue\"\r\n                id=\"levelValue\"\r\n                value={value}\r\n                onChange={(e)=>setValue(e.target.value)}\r\n                required\r\n\r\n                />\r\n\r\n                </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                <Col md=\"4\">\r\n                <span>\r\n                Commission Percent <span className=\"text-danger\"></span>\r\n                </span>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                <Input\r\n                type='number'\r\n                name=\"commissionPercent\"\r\n                id=\"commissionPercent\"\r\n                value={percent}\r\n                onChange={(e) =>setPercent(e.target.value)}\r\n                required\r\n\r\n                />\r\n\r\n                </Col>\r\n                </FormGroup>\r\n\r\n               \r\n\r\n                <div className='d-flex justify-content-end mt-3'>\r\n                \r\n                    \r\n                <div>\r\n                <Button color='primary' type='submit'>\r\n                    Submit\r\n\r\n                    </Button>\r\n                </div>\r\n\r\n                </div>\r\n\r\n                    \r\n\r\n\r\n                </form>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistributionLevelSettingForm;","import React, { useState } from 'react';\r\nimport remove from '../../../helpers/remove';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, TabContent, TabPane, Nav, NavItem, NavLink, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\n\r\nconst DistributionLevelSettingList = (props) => {\r\n\r\n    const {success, setSuccess, distributionData, toggleUpdate} = props;\r\n    const [deleteModal,setDeleteModal] = useState(false);\r\n    const [delData,setDelData] = useState({});\r\n    const {addToast} = useToasts();\r\n\r\n    console.log(distributionData);\r\n\r\n    const toggleDanger = (data) => {\r\n        setDelData(data);\r\n        setDeleteModal(true);\r\n\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        remove(`DistributionLevelSetting/Delete/${delData?.id}`)\r\n        .then(res => {\r\n            addToast(res,{\r\n                appearance:'error',\r\n                autoDismiss: true\r\n            })\r\n            setSuccess(!success);\r\n            setDeleteModal(false);\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='mb-4'>\r\n              <span className='branch-title-style2'>Distribution Level Setting List</span>\r\n             </div>\r\n\r\n             <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                    \r\n                    <th>Level Name</th>\r\n                     <th>Level Value</th>\r\n                     <th>Commission Percent</th>\r\n                     <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {distributionData?.map((ls, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                    \r\n                      <td>\r\n                        {ls?.levelName}\r\n                      </td>\r\n                      <td>\r\n                        {ls?.levelValue}\r\n                      </td>\r\n                      <td>\r\n                        {ls?.commissionPercent}\r\n                      </td>\r\n                     \r\n                     \r\n                     \r\n                      <td style={{ width: \"15%\" }} className=\"text-center\">\r\n                        <ButtonGroup variant=\"text\">\r\n                       \r\n\r\n\r\n                            <Button className='me-1 btn-sm' color='warning' onClick={()=>toggleUpdate(ls)}>\r\n                            <i className=\"fas fa-edit\"></i>\r\n\r\n\r\n                            </Button>\r\n\r\n                            <Button className='ms-1 btn-sm' color='danger' onClick={()=>toggleDanger(ls)}>\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n\r\n\r\n                            </Button>\r\n\r\n\r\n                        </ButtonGroup>\r\n\r\n                     \r\n                        <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n                        <ModalBody>\r\n                          <p>Are You Sure to Delete this ? Once Deleted it can't be Undone!</p>\r\n                        </ModalBody>\r\n        \r\n                        <ModalFooter>\r\n                          <Button  color=\"danger\" onClick={confirmDelete}>YES</Button>\r\n                          <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                        </ModalFooter>\r\n                     </Modal>\r\n\r\n\r\n\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                    \r\n                    </tbody>\r\n                    </Table>\r\n\r\n          \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistributionLevelSettingList;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { Card, CardBody, CardHeader, CardTitle,  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, InputGroup, Table, TabContent, TabPane, Nav, NavItem, NavLink, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport get from '../../../helpers/get';\r\nimport DistributionLevelSettingForm from './Form';\r\nimport DistributionLevelSettingList from './List';\r\n\r\nconst DistributionLevelSetting = () => {\r\n\r\n    const history = useHistory();\r\n    const [success,setSuccess] = useState(false);\r\n    const [distributionData, setDistributionData] = useState([]);\r\n    const [name,setName] = useState('');\r\n    const [value,setValue] = useState('');\r\n    const [percent,setPercent] = useState('');\r\n    const [update,setUpdate] = useState(false);\r\n    const [data,setData]= useState({});\r\n\r\n    const backToDashboard = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        get(`DistributionLevelSetting/Index`)\r\n        .then(res => {\r\n            setDistributionData(res);\r\n        })\r\n\r\n    },[success])\r\n\r\n    const toggleUpdate = (data) =>{\r\n        setUpdate(true);\r\n        get(`DistributionLevelSetting/Get/${data?.id}`)\r\n        .then(res => {\r\n            setData(res);\r\n            setName(res?.levelName);\r\n            setValue(res?.levelValue);\r\n            setPercent(res?.commissionPercent);\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        <Card className=\"uapp-card-bg\">\r\n              <CardHeader className=\"page-header\">\r\n                <h3 className=\"text-light\">Distribution Level Setting</h3>\r\n                <div className=\"page-header-back-to-home\">\r\n                  <span className=\"text-light\" onClick={backToDashboard}>\r\n                    {\" \"}\r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                  </span>\r\n                </div>\r\n              </CardHeader>\r\n            </Card>\r\n\r\n            <Card>\r\n\r\n                <CardBody>\r\n                <div className='row'>\r\n\r\n                <div className='col-md-5'>\r\n                    <DistributionLevelSettingForm \r\n                    success={success}\r\n                    setSuccess={setSuccess}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                    name={name}\r\n                    setName={setName}\r\n                    value={value}\r\n                    setValue={setValue}\r\n                    percent={percent}\r\n                    setPercent={setPercent}\r\n                    data={data}\r\n                    setData={setData}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className='col-md-7'>\r\n                    <DistributionLevelSettingList \r\n                    success={success}\r\n                    setSuccess={setSuccess}\r\n                    distributionData={distributionData}\r\n                    \r\n                    toggleUpdate={toggleUpdate}\r\n                    \r\n                    />\r\n\r\n                </div>\r\n\r\n                </div>\r\n\r\n                </CardBody>\r\n\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistributionLevelSetting;"],"sourceRoot":""}