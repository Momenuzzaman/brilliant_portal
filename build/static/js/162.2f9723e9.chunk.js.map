{"version":3,"sources":["helpers/post.js","views/SMS/Components/CustomButtonRipple.js","views/SMS/Configuration/Menu/Menu.jsx","redux/actions/SMS/MenuActions/MenuActions.js"],"names":["url","body","authToken","Axios","post","rootUrl","res","response","status","history","push","CustomButtonRipple","className","color","icon","permission","type","func","name","includes","Ripple","onClick","connect","state","parentMenuItems","parentMenuItemReducer","parentMenus","props","parentMenuitems","dispatch","useDispatch","myForm","createRef","useState","setTitle","setNavLink","setType","parentTitle","setParentTitle","parentValue","setParentValue","displayOrder","setDisplayOrder","addToast","useToasts","useHistory","useEffect","get","then","action","localStorage","setItem","JSON","stringify","payload","menuTypeName","map","m","label","value","parentMenutitles","pm","title","id","Card","CardHeader","class","CardTitle","CardBody","Form","onSubmit","event","preventDefault","subData","FormData","target","data","message","appearance","autoDismiss","ref","FormGroup","row","Col","md","UncontrolledTooltip","placement","lg","Input","placeholder","onChange","e","required","options","opt","style","display","justifyContent"],"mappings":"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","file":"static/js/162.2f9723e9.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst CustomButtonRipple = ({className, icon,color, permission, type,url, func, name}) => {\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    return (\r\n        <>\r\n          {\r\n            data.includes(permission) ? \r\n            <Button.Ripple\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {name}\r\n            </Button.Ripple>\r\n            :\r\n            null\r\n          }   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomButtonRipple;","import React, { useState, useEffect, createRef } from 'react'\r\nimport {Alert} from \"reactstrap\"\r\nimport Select from 'react-select';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, Col, Row, Card, CardHeader, CardTitle, CardBody, UncontrolledTooltip } from 'reactstrap';\r\nimport { User, Type } from \"react-feather\"\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\n\r\nimport { StoreParentMenuItem } from '../../../../redux/actions/SMS/MenuActions/MenuActions';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { useHistory } from 'react-router';\r\nimport get from '../../../../helpers/get';\r\nimport post from '../../../../helpers/post';\r\nimport CustomButtonRipple from '../../Components/CustomButtonRipple';\r\n\r\nconst Menu = (props) => {\r\n\r\n   const parentMenuitems = props.parentMenuItems[0];\r\n  \r\n  \r\n   const dispatch = useDispatch();\r\n   const myForm = createRef();\r\n   const [title,setTitle] = useState('');\r\n   const [navLink,setNavLink] = useState('');\r\n   const [type,setType] = useState('Select Type...');\r\n   const [parentTitle,setParentTitle] = useState('Select Parent...');\r\n   const [parentValue,setParentValue] = useState(null);\r\n   const [displayOrder,setDisplayOrder] = useState(0);\r\n   const [icon,setIcon] = useState(null);\r\n   const [parentId,setParentId] = useState(null);\r\n   const { addToast } = useToasts();\r\n   const history = useHistory();\r\n\r\n\r\n  //  get menu list and store into redux store\r\n   useEffect(()=> {\r\n    const returnvalue = get(`MenuItem/GetMenuItems`).then((action)=> {\r\n    \r\n      localStorage.setItem(\"menu\", JSON.stringify(action));\r\n\r\n      \r\n      dispatch(StoreParentMenuItem(action))\r\n    })\r\n   },[dispatch])\r\n\r\n\r\n  localStorage.setItem('token','fjhdjhdjfhjddf');\r\n  localStorage.setItem('access','dfhjfhdjhdjf');\r\n\r\n\r\n\r\n   const handleSubmit = (event) => {\r\n     event.preventDefault();\r\n   \r\n\r\n     const subData = new FormData(event.target)\r\n   \r\n\r\n    //  watch form data values\r\n    //  for (var value of subData.values()) {\r\n  \r\n    //  }\r\n\r\n    //  post form data and notify the response to user\r\n     const returnValue = post(`MenuItem/Create`,subData).then((action)=> {\r\n\r\n       addToast(action?.data?.message, {\r\n        appearance: 'success',\r\n        autoDismiss: true,\r\n      });\r\n     })\r\n\r\n\r\n   }\r\n\r\n   const handleDisplayOrder = (v) => {\r\n     setDisplayOrder(v)\r\n   }\r\n\r\n   const selectMenuTypeName = (label, value) => {\r\n     setType(label)\r\n   }\r\n\r\n   const selectparentMenutitles = (label,value) => {\r\n    setParentTitle(label)\r\n    setParentValue(value)\r\n   }\r\n\r\n   const menuType = ['item', 'collapse'];\r\n   const menuTypeName = menuType.map(m => ({label: m, value: m}))\r\n \r\n   const parentMenutitles = parentMenuitems?.map(pm => ({label: pm.title, value: pm.id}))\r\n\r\n    // redirect to dashboard\r\n    const backToDashboard = () => {\r\n      history.push(\"/\")\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n\r\n      <Card className='uapp-card-bg'>\r\n              <CardHeader className=\"page-header\">\r\n              \r\n                  <h3 className='text-light'>Assign Menu</h3>\r\n                  <div className=\"page-header-back-to-home\">\r\n                    <span onClick={backToDashboard} className='text-light'> <i class=\"fas fa-arrow-circle-left\"></i> Back to Dashboard</span>\r\n                  </div>\r\n              \r\n              </CardHeader>\r\n      </Card>\r\n      <Card>\r\n          <CardHeader>\r\n            <CardTitle>Create Menu</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n      <Form onSubmit={handleSubmit} ref={myForm}>\r\n\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                    <i id=\"titleTooltip\" class=\"fas fa-info-circle menuIcon\"></i>\r\n                      <span className=\"pl-2\">Title</span>\r\n                    </Col>\r\n                    <UncontrolledTooltip\r\n                    placement=\"top\"\r\n                    target=\"titleTooltip\"\r\n\r\n                  >\r\n                    Your Menu Title\r\n                  </UncontrolledTooltip>\r\n                    <Col md=\"10\" lg=\"6\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        id=\"title\"\r\n                        placeholder=\"Menu Title\"\r\n                        onChange={(e)=>setTitle(e.target.value)}\r\n                        required\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                   <i id=\"iconTooltip\" class=\"fas fa-info-circle menuIcon\"></i>\r\n                      <span className=\"pl-2\">Icon</span>\r\n                    </Col>\r\n\r\n                    <UncontrolledTooltip\r\n                    placement=\"top\"\r\n                    target=\"iconTooltip\"\r\n                  >\r\n                    Your Menu Icon\r\n                  </UncontrolledTooltip>\r\n\r\n                    <Col md=\"10\" lg=\"6\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"icon\"\r\n                        id=\"icon\"\r\n                        placeholder=\"Icon\"\r\n                        required\r\n                        // onChange={(e)=>setIcon(e.target.value)}\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                    <i id=\"typeTooltip\" class=\"fas fa-info-circle menuIcon\"></i>\r\n                      <span className=\"pl-2\">Type</span>\r\n                    </Col>\r\n                    <UncontrolledTooltip\r\n                    placement=\"top\"\r\n                    target=\"typeTooltip\"\r\n                  >\r\n                    Your Menu Type\r\n                  </UncontrolledTooltip>\r\n                    <Col md=\"10\" lg=\"6\">\r\n                    <Select options={menuTypeName}\r\n                           value={{ label: type, value: type }}\r\n                           onChange={opt => selectMenuTypeName(opt.label, opt.value)}\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  {\r\n                    type == \"item\" &&\r\n                    <FormGroup row>\r\n\r\n                    <Col md=\"2\">\r\n                    <i id=\"urlTooltip\" class=\"fas fa-info-circle menuIcon\"></i>\r\n                      <span className=\"pl-2\">Target Url</span>\r\n                    </Col>\r\n                    <UncontrolledTooltip\r\n                    placement=\"top\"\r\n                    target=\"urlTooltip\"\r\n                  >\r\n                    Your Menu Url\r\n                  </UncontrolledTooltip>\r\n                    <Col md=\"10\" lg=\"6\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"navLink\"\r\n                        id=\"navLink\"\r\n                        placeholder=\"Nav Link\"\r\n                        onChange={(e)=>setNavLink(e.target.value)}\r\n                        required\r\n                      />\r\n\r\n                    </Col>\r\n                  </FormGroup>\r\n                  }\r\n\r\n\r\n                  {\r\n                    type == \"item\" &&\r\n                    <FormGroup row>\r\n                    <Col md=\"2\">\r\n                    <i id=\"parentIdTooltip\" class=\"fas fa-info-circle menuIcon\"></i>\r\n                      <span className=\"pl-2\">Parent</span>\r\n                    </Col>\r\n                    <UncontrolledTooltip\r\n                    placement=\"top\"\r\n                    target=\"parentIdTooltip\"\r\n                  >\r\n                    Parent Menu's Title\r\n                  </UncontrolledTooltip>\r\n\r\n                    <Col md=\"10\" lg=\"6\">\r\n                    <Select options={parentMenutitles}\r\n                           value={{ label: parentTitle, value: parentValue }}\r\n                           onChange={opt => selectparentMenutitles(opt.label,opt.value)}\r\n                           name=\"parentId\"\r\n                           id=\"parentId\"\r\n                           required\r\n                           />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  }\r\n\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                    <i id=\"orderTooltip\" class=\"fas fa-info-circle menuIcon\"></i>\r\n                      <span className=\"pl-2\">Display Order</span>\r\n                    </Col>\r\n                    <UncontrolledTooltip\r\n                    placement=\"top\"\r\n                    target=\"orderTooltip\"\r\n                  >\r\n                    Order\r\n                  </UncontrolledTooltip>\r\n                    <Col md=\"10\" lg=\"6\">\r\n                    <Input\r\n                        type=\"number\"\r\n                        name=\"displayOrder\"\r\n                        value={displayOrder}\r\n                        id=\"displayOrder\"\r\n                        placeholder=\"Order\"\r\n                        onChange={(e)=> handleDisplayOrder(e)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup style={{display: 'flex',justifyContent: 'space-between'}}>\r\n                        {/* <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={()=>setModalOpen(false)}>Close</Button> */}\r\n                      \r\n                      <CustomButtonRipple\r\n                        type={\"submit\"}\r\n                        className={\"mr-1 mt-3 badge-primary\"}\r\n                        name={\"Submit\"}\r\n                        permission={6}\r\n                      />\r\n\r\n                  </FormGroup>\r\n\r\n              </Form>\r\n              </CardBody>\r\n              </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  parentMenuItems: state.parentMenuItemReducer.parentMenus\r\n})\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n","\r\nimport React from 'react'\r\n\r\n\r\nexport const StoreParentMenuItem = (data) => {\r\n\r\n  return {\r\n    type: 'StoreParentMenuItem',\r\n    payload: data\r\n  }\r\n}\r\n"],"sourceRoot":""}