{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/reactstrap/es/Row.js","views/SMS/Components/LinkButton.js","../node_modules/reactstrap/es/ButtonGroup.js","views/SMS/Branches/IndividualComponent/Manager.js","views/SMS/Branches/IndividualComponent/Team.js","views/SMS/Branches/IndividualComponent/AssignTeam.js","views/SMS/Branches/Branch/BranchProfile.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","onClick","body","authToken","Axios","post","rootUrl","res","response","status","history","push","put","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","_excluded","rowColsPropType","PropTypes","oneOfType","number","string","propTypes","tag","tagPropType","noGutters","bool","cssModule","object","form","xs","sm","md","lg","xl","defaultProps","widths","Row","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","colWidth","colSize","isXs","classes","mapToCssModules","classNames","React","createElement","_extends","LinkButton","to","role","size","vertical","ButtonGroup","Manager","useState","branchManager","setBranchManager","id","useEffect","get","then","console","log","tittle","Card","src","managerImageMedia","fileUrl","alt","firstName","lastName","email","phoneNumber","Button","localStorage","removeItem","class","Team","teammodalOpen","setteamModalOpen","addToast","useToasts","branchTeam","setBranchTeam","teamInfo","setTeamInfo","branchTeamEmployee","setBranchTeamEmployee","teamName","setTeamName","isUpdate","setIsUpdate","deleteModal","setDeleteModal","useHistory","success","setSuccess","branchId","getItem","closeDeleteTeamModal","closeModal","preventDefault","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","teamData","FormData","target","values","data","message","appearance","autoDismiss","action","FormGroup","row","Col","Input","defaultValue","placeholder","style","display","justifyContent","Ripple","Table","textAlign","map","btEmployee","key","cursor","employeeCount","setItem","ModalFooter","remove","newTeamData","filter","team","handleDeletebranchTeam","AssignTeam","branchEmployee","setBranchEmployee","serialNum","employeeModal","setEmployeeModal","menus","setMenus","checked","setChecked","branchTeamLabel","setBranchTeamLabel","branchTeamValue","setBranchTeamValue","deleteId","setDeleteId","closeDeleteEmployeeModal","handleDeleteBranchEmployee","closeEmployeeModal","branchTeamName","branch","label","pathname","employeeBranchId","employee","variant","toggleDeleteEmployee","CardHeader","CardBody","subdata","append","options","onChange","opt","defaultChecked","menu","isChecked","toString","newChecked","val","menuId","document","getElementById","handleSelectAll","htmlFor","index","indexOf","splice","handleCheck","BranchProfile","useParams","branchInfo","setBranchInfo","addressLine","country","state"],"mappings":"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","file":"static/js/112.449e023e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name}) => {\r\n    // const {className, icon} = props;\r\n\r\n    // console.log(className);\r\n    // console.log(url);\r\n\r\n    // console.log('Trying New Type of Props',func, className, icon, permission);\r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function put(url, body = {},authToken = \"\"){\r\n\r\n\r\n   \r\n   try {\r\n    const res = await Axios.put(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error.response.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n \r\n\r\n        throw error\r\n   }\r\n}\r\n\r\nexport default put\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    // console.log(\"forLink\",url, color, className, icon);\r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'group'\n};\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      vertical = props.vertical,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card } from 'reactstrap';\r\nimport { rootUrl } from '../../../../constants/constants';\r\nimport get from '../../../../helpers/get';\r\nimport { Image } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport LinkButton from '../../Components/LinkButton';\r\nconst Manager = (props) => {\r\n\r\n    const [branchManager, setBranchManager] = useState({});\r\n    const {id} = props;\r\n   \r\n\r\n    useEffect(()=>{\r\n        get(`BranchManager/GetbyBranch/${id}`).then((res) => {\r\n            console.log('Manager info here',res);\r\n      \r\n            setBranchManager(res);\r\n          });\r\n\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n                {branchManager?.tittle && (\r\n              <Card>\r\n                <div className=\"uapp-circle-image margin-top-minus mt-3\">\r\n                  <img className=\"p-1\" src={rootUrl+branchManager?.managerImageMedia?.fileUrl} alt=\"provider_image\" />\r\n                </div>\r\n                <h5 className=\"pt-2 h3 text-center mb-4\">\r\n                  {\" \"}\r\n                  <span className=\"pe-1\">{branchManager?.firstName}</span>\r\n                  <span className=\" ps-1\">{branchManager?.lastName}</span>\r\n                </h5>\r\n\r\n                <div className=\"container text-center mb-4\">\r\n              \r\n                  <LinkButton\r\n                  name={'Edit'}\r\n                  url={`/updateBranchManagerInformation/${branchManager?.id}`}\r\n                  className={\"btn btn-primary px-lg-5 px-md-3 px-sm-1 py-2\"}\r\n                  \r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center pb-3\">\r\n                    <h5 className=\"py-b\">\r\n                      <span>{branchManager?.tittle}</span>{\" \"}\r\n                    </h5>\r\n\r\n                    <h5 className=\"py-b\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.email}</span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.phoneNumber}</span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </Card>\r\n            )}\r\n\r\n            {!branchManager.tittle && (\r\n              <Card>\r\n                <div className=\"container py-3\">\r\n                  <Link to=\"/addBranchManager\">\r\n                    \r\n                    <Button className=\"btn btn-uapp-add \"\r\n                    onClick={localStorage.removeItem('branchManagerId')}\r\n                    >\r\n                      {\" \"}\r\n                      <i class=\"fas fa-plus\"></i> Add Branch Manager{\" \"}\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Manager;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, ButtonGroup, Card, Col, Form, FormGroup, Input, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\r\nimport get from '../../../../helpers/get';\r\nimport remove from '../../../../helpers/remove';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport post from '../../../../helpers/post';\r\nimport put from '../../../../helpers/put';\r\n\r\nconst Team = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [teammodalOpen, setteamModalOpen] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [branchTeam, setBranchTeam] = useState([]);\r\n    const [teamInfo, setTeamInfo] = useState({});\r\n    const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n    const [teamName, setTeamName] = useState(\"\");\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const history = useHistory();\r\n    const [success, setSuccess] = useState(false);\r\n    const branchId = localStorage.getItem(\"branchId\");\r\n\r\n    useEffect(()=>{\r\n        get(`BranchTeamEmployee/Count/${branchId}`).then((res) => {\r\n            // console.log('aaaa',res);\r\n            setBranchTeamEmployee(res);\r\n          });\r\n    },[ success, branchId])\r\n   \r\n   \r\n    const functionimplement = () => {\r\n        setteamModalOpen(true);\r\n    \r\n      };\r\n\r\n      const toggleDeleteTeam = (id) => {\r\n        localStorage.setItem(\"teamId\", id);\r\n        setDeleteModal(true);\r\n      };\r\n\r\n      const handleTeamUpdate = (id) => {\r\n        get(`BranchTeam/Get/${id}`).then((res) => {\r\n        //   console.log(res);\r\n          setTeamInfo(res);\r\n          setTeamName(res?.name);\r\n          setIsUpdate(true);\r\n          setteamModalOpen(true);\r\n        });\r\n      };\r\n\r\n      const closeDeleteTeamModal = () => {\r\n        setDeleteModal(false);\r\n      };\r\n    \r\n      const handleDeletebranchTeam = () => {\r\n        const id = localStorage.getItem(\"teamId\");\r\n        remove(`BranchTeam/Delete/${id}`).then((res) => {\r\n          setSuccess(!success);\r\n          setDeleteModal(false);\r\n          addToast(res, {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n          });\r\n         \r\n        });\r\n         const newTeamData = branchTeam.filter((team) => team?.id != id);\r\n        //   console.log(newTeamData);\r\n          setBranchTeam(newTeamData);\r\n    \r\n      };\r\n\r\n      function closeModal(e) {\r\n        e.preventDefault();\r\n        setteamModalOpen(false);\r\n      }\r\n\r\n      const handleTeamSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        const teamData = new FormData(e.target);\r\n        // for(let  value of teamData.values()){\r\n        //   console.log(value);\r\n        // }\r\n        if (!isUpdate) {\r\n          post(`BranchTeam/Create`, teamData).then((action) => {\r\n            setSuccess(!success);\r\n            setteamModalOpen(false);\r\n            addToast(action?.data?.message, {\r\n              appearance: \"success\",\r\n              autoDismiss: true,\r\n            });\r\n            // history.push(`/branchProfile/${branchId}`);\r\n          });\r\n        } else {\r\n          for (let val of teamData.values()) {\r\n            // console.log(val);\r\n          }\r\n          put(`BranchTeam/Update`, teamData).then((res) => {\r\n            // console.log(res);\r\n            setIsUpdate(false);\r\n            setSuccess(!success);\r\n            setteamModalOpen(false);\r\n            addToast(res.data?.message, {\r\n              appearance: \"success\",\r\n              autoDismiss: true,\r\n            });\r\n    \r\n            // history.push(`/branchProfile/${branchId}`);\r\n          });\r\n        }\r\n        // setTeamName('');\r\n      };\r\n\r\n      const showTeamInfo = (id) => {\r\n        history.push(`/teamEmployee/${id}`);\r\n      }\r\n\r\n    return (\r\n        <div>\r\n             <div>\r\n        <Modal isOpen={teammodalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n          {isUpdate ? (\r\n            <ModalHeader>Update Team Name</ModalHeader>\r\n          ) : (\r\n            <ModalHeader>Create a New Team</ModalHeader>\r\n          )}\r\n          <ModalBody>\r\n            <Form onSubmit={handleTeamSubmit}>\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"branchId\"\r\n                id=\"branchId\"\r\n                value={branchId}\r\n              />\r\n              {isUpdate ? (\r\n                <input type=\"hidden\" name=\"id\" id=\"id\" value={teamInfo?.id} />\r\n              ) : null}\r\n              {isUpdate ? (\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Team Name</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      defaultValue={teamName}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              ) : (\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"4\">\r\n                    <span>Team Name</span>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Add team name\"\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              )}\r\n\r\n              <FormGroup\r\n                className=\"has-icon-left position-relative\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Button\r\n                  color=\"danger\"\r\n                  className=\"mr-1 mt-3\"\r\n                  onClick={closeModal}\r\n                >\r\n                  Close\r\n                </Button>\r\n\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-3\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n            <Card>\r\n              <div className=\"container mt-3\">\r\n                <Button\r\n                  onClick={functionimplement}\r\n                  className=\"btn btn-uapp-add \"\r\n                >\r\n                  {\" \"}\r\n                  <i class=\"fas fa-plus\"></i> Add Team{\" \"}\r\n                </Button>\r\n              </div>\r\n\r\n              {branchTeamEmployee.length > 0 && (\r\n                <div className=\"table-responsive container mt-3\">\r\n                  <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                      <tr style={{ textAlign: \"center\" }}>\r\n                        <th>Name</th>\r\n                        <th>Employees</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {branchTeamEmployee?.map((btEmployee) => (\r\n                        <tr key={btEmployee.id} style={{ textAlign: \"center\" }}>\r\n                          <td>{btEmployee?.teamName}</td>\r\n                       \r\n                            <td>\r\n                              <span className='badge badge-primary'\r\n                              style={{ cursor: 'pointer'}}\r\n                              onClick={()=>showTeamInfo(btEmployee?.id)}\r\n                              >\r\n                              \r\n                              {btEmployee?.employeeCount}\r\n                              </span>\r\n                            </td>\r\n                   \r\n                          <td>\r\n                          \r\n                            \r\n                                {\" \"}\r\n                                <i class=\"fas fa-edit warning icon-hover-style\"\r\n                                onClick={() => handleTeamUpdate(btEmployee?.id)}\r\n                                ></i>{\" \"}\r\n                             \r\n\r\n                             \r\n                                <i class=\"fas fa-trash-alt text-danger icon-hover-style\"\r\n                                 onClick={() => toggleDeleteTeam(btEmployee?.id)}\r\n                                ></i>\r\n                           \r\n                          \r\n                            <Modal\r\n                              isOpen={deleteModal}\r\n                              toggle={closeDeleteTeamModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={() => handleDeletebranchTeam()}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeDeleteTeamModal}>NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              )}\r\n\r\n              {branchTeamEmployee.length <= 0 && (\r\n                <h5 className=\"text-center mt-3 mb-4\">Team Data Not Found</h5>\r\n              )}\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Team;","import React from 'react';\r\nimport  { useEffect, useState } from \"react\";\r\nimport { Button, ButtonGroup, Card, CardBody, CardHeader, Col, Form, FormGroup, Modal, ModalBody, ModalFooter, Row, Table } from 'reactstrap';\r\nimport Select from \"react-select\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport remove from '../../../../helpers/remove';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport get from '../../../../helpers/get';\r\nimport post from '../../../../helpers/post';\r\nimport ButtonForFunction from '../../Components/ButtonForFunction';\r\nimport LinkButton from '../../Components/LinkButton';\r\n\r\nconst AssignTeam = (props) => {\r\n\r\n    const {id} = props;\r\n    const history = useHistory();\r\n    const [branchEmployee, setBranchEmployee] = useState([]);\r\n    const [serialNum,setSerialNum] = useState(1);\r\n    const [success, setSuccess] = useState(false);\r\n    const [employeeModal, setEmployeeModal] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [menus, setMenus] = useState([]);\r\n    let [checked, setChecked] = useState([]);\r\n    const [branchTeamLabel, setBranchTeamLabel] = useState(\"Select team\");\r\n    const [branchTeamValue, setBranchTeamValue] = useState();\r\n    const [branchTeam, setBranchTeam] = useState([]);\r\n    const [branchEmployeeCheckbox, setBranchEmployeeCheckbox] = useState([]);\r\n    const [deleteId, setDeleteId] = useState('');\r\n     \r\n   \r\n    const branchId = localStorage.getItem('branchId');\r\n\r\n    const handleAddBranchEmployee = () => {\r\n        localStorage.removeItem(\"employeeId\");\r\n        history.push({\r\n          pathname: \"/branchEmployeeInformation\",\r\n          employeeBranchId: id,\r\n        });\r\n      };\r\n\r\n      useEffect(()=>{\r\n        get(`BranchTeam/GetbyBranch/${id}`).then((res) => {\r\n            // console.log(\"Teams\", res);\r\n            setBranchTeam(res);\r\n          });\r\n\r\n          get(`BranchEmployee/GetbyBranch/${id}`).then((res) => {\r\n            // console.log(res);\r\n            setBranchEmployee(res);\r\n        \r\n          });\r\n      \r\n      },[success, id])\r\n\r\n      const handleEditBranchEmployee = (id) => {\r\n        history.push({\r\n          pathname: \"/branchEmployeeInformation\",\r\n          employeeId: id,\r\n        });\r\n      };\r\n\r\n      const toggleDeleteEmployee = (id) => {\r\n        setDeleteId(id?.id);\r\n        setEmployeeModal(true);\r\n      }\r\n\r\n      const closeDeleteEmployeeModal = () => {\r\n        setEmployeeModal(false);\r\n      }\r\n\r\n      // const handleDeleteEmployee = (id) =>{\r\n      //   handleDeleteBranchEmployee(id);\r\n    \r\n      // }\r\n\r\n      const handleDeleteBranchEmployee = () => {\r\n      \r\n        remove(`BranchEmployee/Delete/${deleteId}`).then((res) => {\r\n          addToast(res, {\r\n            appearance: \"error\",\r\n            autoDismiss: true\r\n          });\r\n         setSuccess(!success);\r\n         \r\n        });\r\n        setEmployeeModal(false);\r\n      };\r\n\r\n      const closeEmployeeModal = () => {\r\n        setEmployeeModal(false);\r\n      }\r\n\r\n       // on Select Role\r\n  const selectBranchTeamName = (label, value) => {\r\n    setMenus([]);\r\n    checked = [];\r\n    setBranchTeamLabel(label);\r\n    setBranchTeamValue(value);\r\n    // console.log('value',value);\r\n\r\n    get(`BranchTeamEmployee/GetUnassigned/${value}`).then((action) => {\r\n      // console.log(\"Action\",action);\r\n      setMenus(action);\r\n      setSuccess(!success);\r\n      let defaultChecked = checked;\r\n      if (action.length > 0) {\r\n        for (let i = 0; i < action.length; i++) {\r\n          const menu = action[i];\r\n          if (menu.isChecked === true) {\r\n            const id = menu.id.toString();\r\n            defaultChecked.push(id);\r\n            setChecked([...defaultChecked]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    console.log(checked);\r\n    const subdata = new FormData(e.target);\r\n    subdata.append('teamId',branchTeamValue);\r\n    subdata.append('checkedArray',checked);\r\n   \r\n    // for( let val of subData.values()){\r\n    //   console.log(val);\r\n    // }\r\n    post('BranchTeamEmployee/Create',subdata)\r\n    .then(res => {\r\n      console.log(res);\r\n      history.push(`/branchProfile/${branchId}`);\r\n      addToast(res?.data?.message,{\r\n        appearance: 'success',\r\n        autoDismiss: true\r\n      })\r\n      setSuccess(!success);\r\n    })\r\n\r\n  }\r\n\r\n    // handling checkbox\r\n    const handleCheck = (e) => {\r\n        let id = e.target.id;\r\n        let val = e.target.checked;\r\n    \r\n        if (val === true) {\r\n          setChecked([...checked, id]);\r\n        } else {\r\n          const index = checked.indexOf(id);\r\n          if (index > -1) {\r\n            checked.splice(index, 1);\r\n          }\r\n        }\r\n      };\r\n\r\n      const branchTeamName = branchTeam?.map((branch) => ({\r\n        label: branch.name,\r\n        value: branch.id,\r\n      }));\r\n    \r\n      // on Select All Checkbox\r\n  const handleSelectAll = (e) => {\r\n    let newChecked = [];\r\n    const val = e.target.checked;\r\n    if (val === true) {\r\n      menus.map((menu) => {\r\n        const menuId = menu.id.toString();\r\n        newChecked.push(menuId);\r\n        document.getElementById(menu.id).checked = true;\r\n      });\r\n      setChecked([...newChecked]);\r\n    }\r\n\r\n    if (val === false) {\r\n      {\r\n        menus.map((menu) => {\r\n          document.getElementById(menu.id).checked = false;\r\n        });\r\n        setChecked([]);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        <div>\r\n              <Card>\r\n              <div className=\"container mt-3\">\r\n                <Button\r\n                  onClick={handleAddBranchEmployee}\r\n                  className=\"btn btn-uapp-add \"\r\n                >\r\n                  {\" \"}\r\n                  <i class=\"fas fa-plus\"></i> Add New{\" \"}\r\n                </Button>\r\n\r\n                {/* <ButtonForFunction \r\n                className={\"btn btn-uapp-add \"} /> */}\r\n\r\n\r\n              </div>\r\n\r\n              {branchEmployee.length > 0 ? (\r\n                <div className=\"table-responsive container mt-3\">\r\n                  <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                      <tr style={{ textAlign: \"center\" }}>\r\n                        <th>SL/NO</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone Number</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {branchEmployee?.map((employee, i) => (\r\n                        <tr key={employee.id} style={{ textAlign: \"center\" }}>\r\n                          <td>{serialNum + i}</td>\r\n                          <td>{employee?.firstName}</td>\r\n                          <td>{employee?.lastName}</td>\r\n                          <td>{employee?.email}</td>\r\n                          <td>{employee?.phoneNumber}</td>\r\n                          <td>\r\n                            <ButtonGroup variant=\"text\">\r\n                              \r\n                              <LinkButton\r\n                              icon={ <i class=\"fas fa-edit\"></i>}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              color={\"warning\"}\r\n                              url={`/branchEmployeeInformation/${employee?.id}`}\r\n                              />\r\n\r\n                             \r\n\r\n                              <Button\r\n                                color=\"danger\"\r\n                                onClick={() =>\r\n                                  toggleDeleteEmployee(employee)\r\n                                }\r\n                                className=\"mx-1 btn-sm\"\r\n                              >\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                            <Modal\r\n                              isOpen={employeeModal}\r\n                              toggle={closeDeleteEmployeeModal}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={handleDeleteBranchEmployee}\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n                                <Button onClick={closeEmployeeModal}>NO</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              ) : (\r\n                <h5 className=\"text-center mt-3\">Employee Data Not Found</h5>\r\n              )}\r\n\r\n             \r\n            </Card>\r\n\r\n            <Card>\r\n                <CardHeader>\r\n                    Assign Employee\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    <FormGroup row>\r\n                            <Col sm=\"6\" md=\"4\" lg=\"3\">\r\n                                <Select\r\n                                    options={branchTeamName}\r\n                                    value={{label: branchTeamLabel, value: branchTeamValue }}\r\n                                    onChange={opt => selectBranchTeamName(opt.label, opt.value)}\r\n                                    name=\"type\"\r\n                                    id=\"type\"\r\n                                />\r\n                                </Col>\r\n                    </FormGroup>\r\n\r\n\r\n                    <FormGroup>\r\n\r\n                                <Row>\r\n                                <Col sm=\"12\">\r\n                                {\r\n                                    menus.length > 0 &&\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" onChange={(e)=>handleSelectAll(e)} type=\"checkbox\" name=\"\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"\">Select All</label>\r\n                                    </div>\r\n                                }\r\n                        \r\n                                </Col>\r\n                                {\r\n                                    branchTeamValue &&\r\n                                    menus?.map(menu =>\r\n                                    \r\n                                    <Col xs=\"6\" sm=\"4\" md=\"3\" key={menu.id}>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" onChange={(e)=>handleCheck(e)} name=\"\" id={menu.id} defaultChecked={menu.isChecked}  />\r\n                                        <label className=\"form-check-label\" htmlFor=\"\">{menu.firstName}{menu.lastName}</label>\r\n                                    </div>\r\n                                    </Col>\r\n                                    )\r\n                                }\r\n                                </Row>\r\n                        </FormGroup>\r\n                \r\n\r\n                    <FormGroup style={{display: 'flex',justifyContent: 'space-between'}}>\r\n                            <Row>\r\n\r\n                                <Col>\r\n                                <Button.Ripple\r\n                                type=\"submit\"\r\n                                className=\"mr-1 mt-3 badge-primary\"\r\n                            >\r\n                                Submit\r\n                            </Button.Ripple>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                  \r\n                </CardBody>\r\n\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignTeam;","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport get from \"../../../../helpers/get\";\r\nimport remove from \"../../../../helpers/remove\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Select from \"react-select\";\r\nimport post from \"../../../../helpers/post\";\r\n\r\nimport put from \"../../../../helpers/put\";\r\nimport Manager from \"../IndividualComponent/Manager\";\r\nimport Team from \"../IndividualComponent/Team\";\r\nimport AssignTeam from \"../IndividualComponent/AssignTeam\";\r\n\r\nconst BranchProfile = (props) => {\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n  const { id } = useParams();\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [branchInfo, setBranchInfo] = useState({});\r\n  const [branchManager, setBranchManager] = useState({});\r\n  \r\n  const [serialNum, setSerialNum] = useState(1);\r\n\r\n\r\n  const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [teamInfo, setTeamInfo] = useState({});\r\n\r\n  const [success, setSuccess] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n\r\n  // add on close\r\n\r\n  // add on extra\r\n\r\n  // submitting form\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   setModalOpen(true);\r\n  //   // //  watch form data values\r\n  //   // for (var value of subData.values()) {\r\n\r\n  //   //  }\r\n\r\n  // }\r\n\r\n  const branchId = localStorage.getItem(\"branchId\");\r\n\r\n  //\r\n\r\n  localStorage.setItem(\"branchId\", id);\r\n\r\n  useEffect(() => {\r\n    get(`Branch/Get/${id}`).then((res) => {\r\n      // console.log(res);\r\n      setBranchInfo(res);\r\n    });\r\n\r\n    \r\n  }, [id, branchId]);\r\n\r\n  const backToBranchList = () => {\r\n    history.push(\"/branchList\");\r\n  };\r\n  function closeModal(e) {\r\n    e.preventDefault();\r\n    setModalOpen(false);\r\n  }\r\n\r\n\r\n  const handleTeamUpdate = (id) => {\r\n    get(`BranchTeam/Get/${id}`).then((res) => {\r\n      console.log(res);\r\n      setTeamInfo(res);\r\n      setTeamName(res?.name);\r\n      setIsUpdate(true);\r\n      setModalOpen(true);\r\n    });\r\n  };\r\n  const handleTeamSubmit = (e) => {\r\n    e.preventDefault();\r\n    const teamData = new FormData(e.target);\r\n    // for(let  value of teamData.values()){\r\n    //   console.log(value);\r\n    // }\r\n    if (!isUpdate) {\r\n      post(`BranchTeam/Create`, teamData).then((action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        history.push(\"/branchList\");\r\n      });\r\n    } else {\r\n      for (let val of teamData.values()) {\r\n        console.log(val);\r\n      }\r\n      put(`BranchTeam/Update`, teamData).then((res) => {\r\n        console.log(res);\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(res.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n\r\n        history.push(\"/branchList\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const functionimplement = () => {\r\n    setModalOpen(true);\r\n\r\n  };\r\n\r\n  const toggleDeleteTeam = (id) => {\r\n    localStorage.setItem(\"teamId\", id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n \r\n\r\n  // const handleDeletebranchTeam = () => {\r\n  //   const id = localStorage.getItem(\"teamId\");\r\n  //   remove(`BranchTeam/Delete/${id}`).then((res) => {\r\n  //     setDeleteModal(false);\r\n  //     addToast(res?.data?.message, {\r\n  //       appearance: \"error\",\r\n  //       autoDismiss: true,\r\n  //     });\r\n     \r\n  //   });\r\n  //    const newTeamData = branchTeam.filter((team) => team?.id != id);\r\n  //     console.log(newTeamData);\r\n  //     setBranchTeam(newTeamData);\r\n\r\n  // };\r\n\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-light\">Branch Details</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToBranchList} className=\"text-light\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Branch List\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n    \r\n\r\n      <div className=\"uapp-employee-profile\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"uapp-employee-profile-right\">\r\n              <div className=\"uapp-profile-CardHeader\">\r\n                {/* <div className=\"uapp-circle-image margin-top-minus\">\r\n                  <img  alt='provider_image' />\r\n                </div>     */}\r\n                <div className=\"py-3\">\r\n                  <h5 className=\"py-1\">\r\n                    Branch Name:{\" \"}\r\n                    <span className=\"text-primary\">{branchInfo?.name}</span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    Branch Address:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.addressLine}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Email:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.email}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Phone Number:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.phoneNumber}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <CardBody>\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center\">\r\n                    <h5>\r\n                      {\" \"}\r\n                      Country:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.country?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5>\r\n                      {\" \"}\r\n                      State:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.state?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"8\">\r\n\r\n            <AssignTeam\r\n            id ={id}\r\n            >\r\n\r\n            </AssignTeam>\r\n          \r\n          </Col>\r\n\r\n          <Col md=\"4\">\r\n            <Manager \r\n            id={id}\r\n            ></Manager>\r\n        \r\n            <Team\r\n            \r\n            />\r\n           \r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BranchProfile;\r\n"],"sourceRoot":""}