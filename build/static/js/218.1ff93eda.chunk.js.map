{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Country/AddCountry.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","AddCountry","useState","setCountry","setCode","useHistory","modalOpen","setModalOpen","deleteModal","setDeleteModal","success","setSuccess","updateState","setUpdateState","countries","setCountries","delCountryId","setDelCountryId","delCountryName","setDelCountryName","addToast","useToasts","permissions","JSON","parse","useEffect","get","then","console","log","closeModal","closeDeleteModal","includes","permissionList","Add_Country","length","isOpen","toggle","onSubmit","event","preventDefault","subdata","FormData","target","id","action","data","message","appearance","autoDismiss","defaultValue","row","md","placeholder","onChange","e","value","required","code","style","display","justifyContent","Ripple","textAlign","map","country","i","key","scope","Delete_Country","Update_Country","handleUpdate","remove"],"mappings":"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","file":"static/js/218.1ff93eda.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error.response.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport get from \"../../../helpers/get\";\r\nimport post from \"../../../helpers/post\";\r\nimport put from \"../../../helpers/put\";\r\nimport remove from \"../../../helpers/remove\";\r\nimport ButtonForFunction from \"../Components/ButtonForFunction\";\r\nimport { permissionList } from \"../../../constants/AuthorizationConstant\";\r\n\r\nconst AddCountry = () => {\r\n  const [country, setCountry] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const history = useHistory();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [updateState, setUpdateState] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const [delCountryId, setDelCountryId] = useState(0);\r\n  const [delCountryName, setDelCountryName] = useState(\"\");\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  const permissions = JSON.parse(localStorage.getItem('permissions'));\r\n\r\n  useEffect(() => {\r\n    get(\"Country/Index\").then((res) => {\r\n      console.log(\"country\", res);\r\n      setCountries(res);\r\n    });\r\n  }, [success]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const subdata = new FormData(event.target);\r\n\r\n    // const subdata = {\r\n    //   name: universityCountry\r\n    // }\r\n\r\n    if (!updateState?.id) {\r\n      setUpdateState({});\r\n\r\n      const returnValue = post(`Country/Create`, subdata).then((action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action?.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        setCountry(\"\");\r\n        setCode(\"\");\r\n      });\r\n    } else {\r\n      const returnvalue = put(`Country/Update`, subdata).then((action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action?.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        setCountry(\"\");\r\n        setCode(\"\");\r\n        setUpdateState({});\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (country) => {\r\n    setModalOpen(true);\r\n    setCountry(country?.name);\r\n    setCode(country?.code);\r\n    console.log(country);\r\n    setUpdateState(country);\r\n  };\r\n\r\n  const handleDeletecountry = (id) => {\r\n    const returnValue = remove(`Country/Delete/${id}`).then((action) => {\r\n      setDeleteModal(false);\r\n      setSuccess(!success);\r\n      addToast(action, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n      setDelCountryId(0);\r\n      setDelCountryName(\"\");\r\n    });\r\n  };\r\n\r\n  const toggleDanger = (name, id) => {\r\n    setDelCountryName(name);\r\n    setDelCountryId(id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  // on Close Modal\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setUpdateState({});\r\n  };\r\n\r\n  // on Close Delete Modal\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    setDelCountryId(0);\r\n    setDelCountryName(\"\");\r\n  };\r\n\r\n  // redirect to dashboard\r\n  const backToDashboard = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-light\">Country List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToDashboard} className=\"text-light\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          {\r\n            permissions?.includes(permissionList?.Add_Country) ?\r\n            <ButtonForFunction\r\n            className={\"btn btn-uapp-add\"}\r\n            func={() => setModalOpen(true)}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            name={\" Add New Country\"}\r\n            \r\n          />\r\n          : \r\n          null\r\n          }\r\n\r\n          <div>\r\n            {\" \"}\r\n            <b>\r\n              {\" \"}\r\n              Total{\" \"}\r\n              <span className=\"badge badge-primary\">\r\n                {countries?.length}\r\n              </span>{\" \"}\r\n              Country Found{\" \"}\r\n            </b>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div>\r\n            <Modal\r\n              isOpen={modalOpen}\r\n              toggle={closeModal}\r\n              className=\"uapp-modal\"\r\n            >\r\n              <ModalHeader>Add Country</ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  {updateState?.id ? (\r\n                    <Input\r\n                      type=\"hidden\"\r\n                      name=\"id\"\r\n                      id=\"id\"\r\n                      defaultValue={updateState?.id}\r\n                    />\r\n                  ) : null}\r\n\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>\r\n                        Country Name <span className=\"text-danger\">*</span>{\" \"}\r\n                      </span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        defaultValue={updateState?.name}\r\n                        placeholder=\"Enter Country Name\"\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                        required\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                      <span>\r\n                        Country Code <span className=\"text-danger\">*</span>{\" \"}\r\n                      </span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        id=\"code\"\r\n                        defaultValue={updateState?.code}\r\n                        placeholder=\"Enter Country Code\"\r\n                        onChange={(e) => setCode(e.target.value)}\r\n                        required\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup\r\n                    className=\"has-icon-left position-relative\"\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button\r\n                      color=\"danger\"\r\n                      className=\"mr-1 mt-3\"\r\n                      onClick={closeModal}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n\r\n                    {/* {\r\n                    localStorage.getItem(\"updatecountry\") ?\r\n                      <Button color=\"warning\" className=\"mr-1 mt-3\" onClick={handleUpdateSubmit}>Update</Button> : */}\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mr-1 mt-3\"\r\n                      // onClick={(e) => handleSubmit(e)}\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n\r\n                    {/* } */}\r\n                  </FormGroup>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"table-responsive\">\r\n            <Table className=\"table-sm table-bordered\">\r\n              <thead className=\"thead-uapp-bg\">\r\n                <tr style={{ textAlign: \"center\" }}>\r\n                  <th>SL/NO</th>\r\n                  <th>Name</th>\r\n                  {/* <th className=\"text-center\">Count</th> */}\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {countries?.map((country, i) => (\r\n                  <tr key={country?.id} style={{ textAlign: \"center\" }}>\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>{country?.name}</td>\r\n                    {/* <td className=\"text-center\">\r\n                      <span className=\"badge badge-pill badge-primary\">\r\n                        {\" \"}\r\n                        {country?.universityCount}{\" \"}\r\n                      </span>\r\n                    </td> */}\r\n                    <td>\r\n                     {\r\n                        permissions?.includes(permissionList?.Delete_Country) ?\r\n                       <ButtonForFunction\r\n                       className={\"mx-1 btn-sm\"}\r\n                       func={() => toggleDanger(country.name, country.id)}\r\n                       color={\"danger\"}\r\n                       icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                      \r\n                     />\r\n                     :\r\n                     null\r\n                     }\r\n\r\n                      {\r\n                        permissions?.includes(permissionList?.Update_Country)?\r\n                        <ButtonForFunction\r\n                        func={() => handleUpdate(country)}\r\n                        className={\"mx-1 btn-sm\"}\r\n                        color={\"warning\"}\r\n                        icon={<i className=\"fas fa-edit\"></i>}\r\n                     \r\n                      />\r\n                      :\r\n                      null\r\n                      }\r\n\r\n                      <Modal\r\n                        isOpen={deleteModal}\r\n                        toggle={closeDeleteModal}\r\n                        className=\"uapp-modal\"\r\n                      >\r\n                        <ModalBody>\r\n                          <p>\r\n                            Are You Sure to Delete this{\" \"}\r\n                            <b>{delCountryName}</b> ?\r\n                            Once Deleted it can't be Undone!\r\n                          </p>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                          <Button\r\n                            color=\"danger\"\r\n                            onClick={() =>\r\n                              handleDeletecountry(delCountryId)\r\n                            }\r\n                          >\r\n                            YES\r\n                          </Button>\r\n                          <Button onClick={closeDeleteModal}>NO</Button>\r\n                        </ModalFooter>\r\n                      </Modal>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCountry;\r\n"],"sourceRoot":""}