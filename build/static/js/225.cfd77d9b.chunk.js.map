{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Components/CustomButtonRipple.js","views/SMS/Search/Loader/Loader.js","views/SMS/Components/LinkButton.js","views/SMS/Degree/DegreeList.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","CustomButtonRipple","isDisabled","Ripple","Loader","src","loader","LinkButton","props","target","activeStyle","to","DegreeList","useState","degreeList","setDegreeList","deleteData","setDeleteData","addToast","useToasts","useHistory","deleteModal","setDeleteModal","serialNum","success","setSuccess","loading","setLoading","buttonStatus","setButtonStatus","modalOpen","setModalOpen","data","setData","education","setEducation","educationLabel","setEducationLabel","educationValue","setEducationValue","educationError","setEducationError","errorMessage","permissions","JSON","parse","useEffect","get","then","console","log","educationName","map","edu","label","value","id","closeModal","isOpen","toggle","onSubmit","event","preventDefault","subData","FormData","isSuccess","message","appearance","autoDismiss","row","md","placeholder","required","defaultValue","options","onChange","opt","style","display","justifyContent","includes","permissionList","Add_New_degree","textAlign","width","degree","i","key","scope","educationLevel","description","levelValue","variant","Update_degree_info","redirectToUpdate","Delete_degree","toggleDanger","remove","handleDeleteData"],"mappings":"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","file":"static/js/225.cfd77d9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst CustomButtonRipple = ({isDisabled, className, icon,color, permission, type,url, func, name}) => {\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n         \r\n            <Button.Ripple\r\n               disabled={isDisabled}\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {name}\r\n            </Button.Ripple>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomButtonRipple;","import React from 'react';\r\nimport loader from '../../../../assets/img/load.gif'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <img className='img-fluid' src={loader} />\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import React, { useEffect, useState } from 'react';\r\nimport get from '../../../helpers/get';\r\nimport { Button, Card, CardBody, CardHeader, Col, Table, Form, FormGroup, Input, Nav, NavItem, NavLink, TabContent, TabPane, Label, Row, Modal, ModalBody, ModalFooter, ButtonGroup, ModalHeader } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\nimport remove from '../../../helpers/remove';\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport LinkButton from '../Components/LinkButton';\r\nimport Loader from '../Search/Loader/Loader';\r\nimport CustomButtonRipple from '../Components/CustomButtonRipple';\r\nimport Select from \"react-select\";\r\nimport post from '../../../helpers/post';\r\nimport put from '../../../helpers/put';\r\nimport { permissionList } from '../../../constants/AuthorizationConstant';\r\n\r\nconst DegreeList = () => {\r\n\r\n\r\n    const [degreeList, setDegreeList] = useState([]);\r\n\r\n    const [deleteData, setDeleteData] = useState({});\r\n\r\n    const {addToast} = useToasts();\r\n    const history = useHistory();\r\n    const [deleteModal,setDeleteModal] = useState(false);\r\n    const [serialNum, setSerialNum] = useState(1);\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading,setLoading] = useState(true);\r\n    const [buttonStatus,setButtonStatus] = useState(false);\r\n    const [modalOpen,setModalOpen] = useState(false);\r\n\r\n    const [data,setData] = useState({});\r\n\r\n    const [education, setEducation] = useState([]);\r\n    const [educationLabel, setEducationLabel] = useState('Select Education Level');\r\n    const [educationValue, setEducationValue] = useState(0);\r\n    const [educationError, setEducationError] = useState(false);\r\n    const [errorMessage,setErrorMessage] = useState('Education level is required');\r\n    const permissions = JSON.parse(localStorage.getItem('permissions'));\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        get(`Degree/Index`)\r\n        .then(res => {\r\n            console.log('Checking Degree Data from get method', res);\r\n            setDegreeList(res);\r\n            setLoading(false);\r\n        })\r\n\r\n        get('EducationLevelDD/Index')\r\n        .then(res => {\r\n            console.log('Cehecking Education Data from get method', res);\r\n            setEducation(res);\r\n        })\r\n\r\n       \r\n\r\n    },[success])\r\n\r\n\r\n       // Delete Modal\r\n\r\n       const toggleDanger = (data) => {\r\n\r\n        // console.log(data);\r\n        setDeleteData(data);\r\n        setDeleteModal(true);\r\n      }\r\n\r\n\r\n         // Delete Button\r\n\r\n         const handleDeleteData = (data) => {\r\n            setButtonStatus(true);\r\n            remove(`Degree/Delete/${data?.id}`)\r\n            .then(res => {\r\n                setButtonStatus(false);\r\n              addToast(res,{\r\n                appearance: 'error',\r\n                autoDismiss: true\r\n              })\r\n              setDeleteData({});\r\n              setSuccess(!success);\r\n              setDeleteModal(false);\r\n              \r\n            })\r\n      \r\n            }\r\n\r\n\r\n            const educationName = education?.map((edu) => ({\r\n                label: edu.name,\r\n                value: edu.id,\r\n              }));\r\n        \r\n        \r\n                     // select  Education Level\r\n          const selectEducationLevel = (label, value) => {\r\n        \r\n            setEducationError(false);\r\n            setEducationLabel(label);\r\n            setEducationValue(value);\r\n           \r\n          }\r\n\r\n\r\n            \r\n\r\n      const handleAddDegree = () => {\r\n        setModalOpen(true);\r\n        \r\n      }\r\n\r\n      const closeModal = () => {\r\n        setData({});\r\n    \r\n        setEducationLabel(`Select Education Level`);\r\n        setEducationValue(0);\r\n  \r\n        setModalOpen(false);\r\n      }\r\n\r\n\r\n      // back to dashboard\r\n\r\n    const backToDashboard = () => {\r\n\r\n        history.push('/');\r\n    }\r\n\r\n    \r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        const subData = new FormData(event.target);\r\n\r\n        if(educationValue == 0){\r\n            setEducationError(true);\r\n        }\r\n\r\n        else{\r\n\r\n            // if(degreeName !== undefined && eduLabel !== undefined && educationId !== undefined && id !== undefined){\r\n            //   setButtonStatus(true);\r\n            //     put(`Degree/Update`,subData)\r\n            //     .then( res => {\r\n            //       setButtonStatus(false);\r\n            //         if(res?.status ==200 && res?.data?.isSuccess == true){\r\n            //             addToast(res?.data?.message,{\r\n            //                 appearance: 'success',\r\n            //                 autoDismiss: true\r\n            //             })\r\n            //             history.push('/degreeList');\r\n    \r\n            //         }\r\n    \r\n            //     })\r\n\r\n            // }\r\n\r\n            if(data?.id){\r\n              setButtonStatus(true);\r\n                put(`Degree/Update`,subData)\r\n                .then( res => {\r\n                  setButtonStatus(false);\r\n                    if(res?.status ==200 && res?.data?.isSuccess == true){\r\n                        addToast(res?.data?.message,{\r\n                            appearance: 'success',\r\n                            autoDismiss: true\r\n                        })\r\n                        setData({});\r\n                        setSuccess(!success);\r\n                        setEducationLabel(`Select Education Level`);\r\n                        setEducationValue(0);\r\n                        setModalOpen(false);\r\n    \r\n                    }\r\n    \r\n                })\r\n\r\n            }\r\n\r\n            else{\r\n                setButtonStatus(true);\r\n                post('Degree/Create',subData)\r\n                .then( res => {\r\n                    setButtonStatus(false);\r\n                    if(res?.status ==200 && res?.data?.isSuccess == true){\r\n                        addToast(res?.data?.message,{\r\n                            appearance: 'success',\r\n                            autoDismiss: true\r\n                        })\r\n                        setSuccess(!success);\r\n                        setEducationLabel(`Select Education Level`);\r\n                        setEducationValue(0);\r\n                        setModalOpen(false);\r\n    \r\n                    }\r\n    \r\n                })\r\n\r\n            }\r\n           \r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const redirectToUpdate = (data) =>{\r\n       setData(data);\r\n       setEducationLabel(data?.educationLevel?.name);\r\n       setEducationValue(data?.educationLevel?.id);\r\n       setModalOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n         {\r\n            loading?\r\n            <Loader/>\r\n            :\r\n            <div>\r\n\r\n            <Modal\r\n              isOpen={modalOpen}\r\n              toggle={closeModal}\r\n              className=\"uapp-modal2\"\r\n            >\r\n              <ModalHeader>Degree Details</ModalHeader>\r\n              <ModalBody>\r\n              <Form onSubmit={handleSubmit}>\r\n\r\n                    {\r\n                        (data?.id) ?\r\n\r\n                        <input\r\n                        type='hidden'\r\n                        name='id'\r\n                        id='id'\r\n                        value={data?.id}\r\n                        />\r\n\r\n                        :\r\n\r\n                        null\r\n                    }\r\n\r\n\r\n                    <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                        <span>\r\n                        Name <span className=\"text-danger\">*</span>{\" \"}\r\n                        </span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        placeholder='Enter Name'\r\n                        required\r\n                        defaultValue={data?.name}\r\n                        \r\n                        \r\n                        />\r\n\r\n                    </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"has-icon-left position-relative\">\r\n                    <Col md=\"4\">\r\n                    <span>\r\n                    Education Level <span className=\"text-danger\">*</span>{\" \"}\r\n                    </span>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n\r\n\r\n                    <Select\r\n                        options={educationName}\r\n                        defaultValue={{label: educationLabel, value : educationValue}}\r\n                        onChange={(opt) => selectEducationLevel(opt.label, opt.value)}\r\n                        name=\"educationLevelId\"\r\n                        id=\"educationLevelId\"\r\n                        required\r\n\r\n                        />\r\n                        {\r\n                        educationError ? \r\n                        <span className='text-danger'>{errorMessage}</span>\r\n\r\n                        : \r\n                        null\r\n                    }\r\n                        \r\n                    \r\n\r\n                    </Col>\r\n\r\n\r\n\r\n                    </FormGroup> \r\n\r\n\r\n\r\n\r\n                    <FormGroup row\r\n                    className=\"has-icon-left position-relative\"\r\n                    style={{ display: \"flex\", justifyContent: \"end\" }}\r\n                    >\r\n\r\n                    <Col md=\"12\">\r\n\r\n                    <div className='d-flex justify-content-between'>\r\n\r\n                    <Button color='danger' className='mt-3' onClick={closeModal}>\r\n                        Close\r\n\r\n                    </Button>\r\n\r\n\r\n                    <ButtonForFunction\r\n                    type={'submit'}\r\n                    name={\"Submit\"}\r\n                    className={\"mr-1 mt-3 badge-primary\"}\r\n                    disable={buttonStatus}\r\n\r\n                    />\r\n\r\n                   \r\n\r\n                    </div>\r\n\r\n\r\n                   \r\n\r\n\r\n                    </Col>\r\n\r\n\r\n                    </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                                </ModalBody>\r\n                                </Modal>\r\n\r\n\r\n                   <Card className=\"uapp-card-bg\">\r\n                    <CardHeader className=\"page-header\">\r\n                    <h3 className=\"text-white\">Degree List</h3>\r\n                    <div className=\"page-header-back-to-home\">\r\n                        <span className=\"text-white\" onClick={backToDashboard}>\r\n                        {\" \"}\r\n                        <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                        </span>\r\n                    </div>\r\n                    </CardHeader>\r\n                </Card>\r\n\r\n\r\n                <Card>\r\n\r\n            <CardBody>\r\n\r\n            <div className='mb-3'>\r\n\r\n            {\r\n                permissions?.includes(permissionList.Add_New_degree) ? \r\n                <ButtonForFunction className ={\"btn btn-uapp-add \"}\r\n                    icon ={<i className=\"fas fa-plus\"></i>}\r\n                    func={handleAddDegree} \r\n                    name={' Add Degree'}\r\n                                \r\n            />\r\n            :\r\n            null\r\n            }\r\n\r\n            </div>\r\n\r\n            <div className=\"table-responsive mb-3\">\r\n                    <Table className=\"table-sm table-bordered\">\r\n                    <thead className=\"thead-uapp-bg\">\r\n                        <tr style={{ textAlign: \"center\" }}>\r\n                        <th>SL/NO</th>\r\n                        <th>Name</th>\r\n                        <th>Education Level Name</th>\r\n                        <th>Education Level Description </th>\r\n                        <th>Education Level Value </th>\r\n                        <th style={{ width: \"8%\" }} className=\"text-center\">\r\n                            Action\r\n                        </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        degreeList?.map((degree, i) => (\r\n                        <tr key={degree?.id} style={{ textAlign: \"center\" }}>\r\n                            <th scope='row'>{serialNum + i}</th>\r\n                            <td>\r\n                            {degree?.name}\r\n                            </td>\r\n                            \r\n                            <td>\r\n                            {degree?.educationLevel?.name}\r\n                            </td>\r\n\r\n                            <td>\r\n                            {degree?.educationLevel?.description}\r\n                            </td>\r\n\r\n                            <td>\r\n                            {degree?.educationLevel?.levelValue}\r\n                            </td>\r\n\r\n\r\n                            <td style={{ width: \"8%\" }} className=\"text-center\">\r\n                            <ButtonGroup variant=\"text\">\r\n                            \r\n                                {\r\n                                    permissions?.includes(permissionList.Update_degree_info) ? \r\n                                    <ButtonForFunction\r\n                                  icon={<i className=\"fas fa-edit\"></i>}\r\n                                  color={'warning'}\r\n                                  className={\"mx-1 btn-sm\"}\r\n                                  func={()=>redirectToUpdate(degree)}\r\n                                />\r\n                                :\r\n                                null\r\n                                }\r\n\r\n                                {/* <LinkButton\r\n                                icon={<i className=\"fas fa-edit\"></i>}\r\n                                color={\"warning\"}\r\n                                className={\"mx-1 btn-sm\"}\r\n                                url={`/addDegree/${degree?.name}/${degree?.educationLevel?.name}/${degree?.educationLevel?.id}/${degree?.id}`}\r\n                                /> */}\r\n                            \r\n                               {\r\n                                permissions?.includes(permissionList.Delete_degree) ?\r\n                                <ButtonForFunction\r\n                                icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                                color={'danger'}\r\n                                className={\"mx-1 btn-sm\"}\r\n                                func={()=>toggleDanger(degree)}\r\n                              />\r\n                              :\r\n                              null\r\n                               }\r\n\r\n                            </ButtonGroup>\r\n\r\n                        \r\n                            <Modal isOpen={deleteModal} toggle={() => setDeleteModal(!deleteModal)} className=\"uapp-modal\">\r\n                            <ModalBody>\r\n                                <p>Are You Sure to Delete this ? Once Deleted it can't be Undone!</p>\r\n                            </ModalBody>\r\n            \r\n                            <ModalFooter>\r\n                                <Button  color=\"danger\" onClick={()=>handleDeleteData(deleteData)}\r\n                                disabled={buttonStatus}>YES</Button>\r\n                                <Button onClick={() => setDeleteModal(false)}>NO</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n\r\n\r\n\r\n                            </td>\r\n                        </tr>\r\n                        ))\r\n                        }\r\n                    </tbody>\r\n                    </Table>\r\n                    \r\n\r\n                </div>\r\n\r\n\r\n            </CardBody>\r\n\r\n\r\n            </Card>\r\n            </div>\r\n         }\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DegreeList;"],"sourceRoot":""}