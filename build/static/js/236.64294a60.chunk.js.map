{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Components/CustomButtonRipple.js","views/SMS/Provider/AdmissionManager/AdmissionManagerProfile.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","CustomButtonRipple","isDisabled","Ripple","AdmissionManagerProfile","useParams","managerId","providerId","useState","managerData","setManagerData","applicationData","setApplicationData","admissionOfficer","setAdmissionOfficer","modalOpen","setModalOpen","assignModalOpen","setAssignModalOpen","officerDD","setOfficerDD","countryList","setCountryList","uniCountryLabel","setUniCountryLabel","uniCountryValue","setUniCountryValue","universityStates","setUniversityStates","deleteModal","setDeleteModal","officerLabel","setOfficerLabel","officerValue","setOfficerValue","officerError","setOfficerError","countryError","setCountryError","uniStateLabel","setUniStateLabel","unistateValue","setUniStateValue","uniStateError","setUniStateError","nameTitleDD","setNameTitleDD","nameTitleLabel","setNameTitleLabel","nameTitleValue","setNameTitleValue","nameTitleError","setNameTitleError","setProviderDD","success","setSuccess","existsNote","setExistsNote","emailError","setEmailError","officerObj","setOfficerObj","undefined","selectedId","setSelectedId","deleteId","setDeleteId","deleteName","setDeleteName","useHistory","location","useLocation","addToast","useToasts","buttonStatus","setButtonStatus","tableStyle","overflowX","useEffect","get","then","console","log","admissionManagerApplications","admissionOfficers","closeModal","assignCloseModal","officerMenu","map","manager","label","value","id","countryDD","countryOptions","universityStateName","uniState","nameTitleMenu","nameTitle","closeDeleteModal","managerList","officerId","nameTittleName","firstName","lastName","providerName","email","phoneNumber","stateName","city","style","textAlign","admissionManagerUniversities","uni","i","key","scope","isAcceptEU_UK","isAcceptHome","isAcceptInternational","university","shortName","universityCity","foundationYear","globalRankNumber","partTimeWorkInformation","appli","application","campus","student","subject","intake","variant","applicationId","studentId","pathname","isOpen","toggle","size","backgroundColor","onSubmit","event","preventDefault","subdata","admissionManagerId","admissionOfficerId","data","isSuccess","message","appearance","autoDismiss","row","md","options","onChange","opt","display","justifyContent","FormData","target","defaultValue","placeholder","required","onBlur","e","postCode","officer","sequenceId","countryName","nameTittleId","countryId","stateId","handleUpdate","officermanagerId","toggleDanger","remove"],"mappings":";8GAAA,4BAsCeA,IA/BW,SAAC,GAAuE,IAAtEC,EAAqE,EAArEA,UAAWC,EAA0D,EAA1DA,KAAKC,EAAqD,EAArDA,MAAmBC,GAAkC,EAA9CC,WAA8C,EAAlCD,MAAUE,GAAwB,EAA7BC,IAA6B,EAAxBD,MAAME,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,QAUhF,OACI,oCAGI,kBAAC,IAAD,CACGC,QAASJ,EACTH,MAAOA,EACPC,KAAMA,EACNH,UAAWA,EACXU,SAAUF,GAET,IACAP,EAAMM,EAAM,Q,s3MCxB5B,IAAMI,EAAUC,aAAaC,QAAQ,S,4CAErC,WAAoBP,GAApB,8FAAyBQ,EAAzB,+BAAgC,GAAhC,+BAAgD,GAAhD,kBAEsBC,IAAMC,KAAN,UAAcC,KAAd,OAAwBX,GAAOQ,EAAM,CACrDI,QAAS,CACP,cAAiBP,KAJzB,cAEUQ,EAFV,gBAOiBA,EAPjB,gFASoC,OAA5B,2CAAOC,gBAAP,eAAiBC,SACnBC,IAAQC,KAAK,QAVnB,gE,sBAiBeP,I,m6MCnBf,IAAML,EAAUC,aAAaC,QAAQ,S,4CACrC,WAAmBP,GAAnB,4FAAwBQ,EAAxB,+BAA+B,GAA/B,+BAA+C,GAA/C,kBAEsBU,IAAMC,IAAN,UAAaR,KAAb,OAAuBX,GAAOQ,EAAM,CACpDI,QAAS,CACP,cAAiBP,KAJzB,cAEUQ,EAFV,gBAOiBA,EAPjB,oK,sBAsBeM,I,8EC5Bf,4BA2BeC,IApBY,SAAC,GAA2E,IAA1EC,EAAyE,EAAzEA,WAAY3B,EAA6D,EAA7DA,UAAgBE,GAA6C,EAAlDD,KAAkD,EAA7CC,OAAmBC,GAA0B,EAAtCC,WAAsC,EAA1BD,MAAUE,GAAgB,EAArBC,IAAqB,EAAhBD,MAAME,EAAU,EAAVA,KAIxF,OACI,oCAEI,kBAAC,IAAOqB,OAAR,CACGlB,SAAUiB,EACVlB,QAASJ,EACTH,MAAOA,EACPC,KAAMA,EACNH,UAAWA,GAEVO,M,yRCklCDsB,UA3kCiB,WAAO,IAAD,EACpC,EAAkCC,cAA1BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WACnB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAgDJ,mBAAS,IAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8CR,oBAAS,GAAvD,mBAAOS,EAAP,KAAwBC,EAAxB,KAEA,EAAkCV,mBAAS,IAA3C,mBAAOW,EAAP,KAAkBC,GAAlB,KACA,GAAsCZ,mBAAS,IAA/C,qBAAOa,GAAP,MAAoBC,GAApB,MACA,GAA8Cd,mBAAS,kBAAvD,qBAAOe,GAAP,MAAwBC,GAAxB,MACA,GAA8ChB,mBAAS,GAAvD,qBAAOiB,GAAP,MAAwBC,GAAxB,MAEA,GAAgDlB,mBAAS,IAAzD,qBAAOmB,GAAP,MAAyBC,GAAzB,MAGA,GAAsCpB,oBAAS,GAA/C,qBAAOqB,GAAP,MAAoBC,GAApB,MAEA,GAAwCtB,mBAAS,4BAAjD,qBAAOuB,GAAP,MAAqBC,GAArB,MACA,GAAwCxB,mBAAS,GAAjD,qBAAOyB,GAAP,MAAqBC,GAArB,MACA,GAAwC1B,oBAAS,GAAjD,qBAAO2B,GAAP,MAAqBC,GAArB,MAEA,GAAwC5B,oBAAS,GAAjD,qBAAO6B,GAAP,MAAqBC,GAArB,MAEA,GAA0C9B,mBAAS,gBAAnD,qBAAO+B,GAAP,MAAsBC,GAAtB,MACA,GAA0ChC,mBAAS,GAAnD,qBAAOiC,GAAP,MAAsBC,GAAtB,MACA,GAA0ClC,oBAAS,GAAnD,qBAAOmC,GAAP,MAAsBC,GAAtB,MAEA,GAAsCpC,mBAAS,IAA/C,qBAAOqC,GAAP,MAAoBC,GAApB,MAEA,GAA4CtC,mBAAS,gBAArD,qBAAOuC,GAAP,MAAuBC,GAAvB,MACA,GAA4CxC,mBAAS,GAArD,qBAAOyC,GAAP,MAAuBC,GAAvB,MAEA,GAA4C1C,oBAAS,GAArD,qBAAO2C,GAAP,MAAuBC,GAAvB,MAEA,GAAoC5C,mBAAS,IAA7C,qBAAmB6C,IAAnB,aAKA,GAA8B7C,oBAAS,GAAvC,qBAAO8C,GAAP,MAAgBC,GAAhB,MAEA,GAAoC/C,qBAApC,qBAAOgD,GAAP,MAAmBC,GAAnB,MAEA,GAAoCjD,oBAAS,GAA7C,qBAAOkD,GAAP,MAAmBC,GAAnB,MACA,GAAoCnD,mBAAS,IAA7C,qBAAOoD,GAAP,MAAmBC,GAAnB,MACA,GAAoCrD,wBAASsD,GAA7C,qBAAOC,GAAP,MAAmBC,GAAnB,MACA,GAAgCxD,wBAASsD,GAAzC,qBAAOG,GAAP,MAAiBC,GAAjB,MACA,GAAoC1D,mBAAS,IAA7C,qBAAO2D,GAAP,MAAmBC,GAAnB,MAEMvE,GAAUwE,cACVC,GAAWC,cACTC,GAAaC,sBAAbD,SACR,GAAuChE,oBAAS,GAAhD,qBAAOkE,GAAP,MAAoBC,GAApB,MAEMC,GAAa,CACjBC,UAAW,UAebC,qBAAU,WAERC,YAAI,4BAAD,OAA6BxE,EAA7B,YAA2CD,IAAa0E,MAAK,SAACtF,GAC/DuF,QAAQC,IAAI,QAASxF,GACrB0B,GAAa1B,MAIfqF,YAAI,mBAAmBC,MAAK,SAAAtF,GACxB4B,GAAe5B,MAGnBqF,YAAI,sBAAsBC,MAAK,SAAAtF,GAC3BoD,GAAepD,MAGnBqF,YAAI,oBAAoBC,MAAK,SAAAtF,GACzB2D,GAAc3D,MAGlBqF,YAAI,4BAAD,OAA6BzE,IAAa0E,MAAK,SAACtF,GACjDgB,EAAehB,GACfkB,EAAkB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAKyF,8BACxBrE,EAAmB,OAACpB,QAAD,IAACA,OAAD,EAACA,EAAK0F,mBACzBH,QAAQC,IAAI,mBAAoBxF,QAEjC,CAACY,EAAWgD,GAAS/C,IAExB,IASO8E,GAAa,WAClBrB,QAAcF,GACdD,GAAc,MACdb,GAAkB,gBAClBE,GAAkB,GAClB1B,GAAmB,kBACnBE,GAAmB,GACnBc,GAAiB,gBACjBE,GAAiB,GAKjBJ,IAAgB,GAChBM,IAAiB,GACjBQ,IAAkB,GAGlBO,IAAc,GACd3C,GAAa,IAGTsE,GAAmB,WACvBlD,IAAgB,GAChBqB,KACAzB,GAAgB,4BAChBE,GAAgB,GAChBhB,GAAmB,IAgHfqE,GAAcpE,EAAUqE,KAAI,SAACC,GAAD,MAAc,CAC9CC,MAAK,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAS3G,KAChB6G,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAASG,OAaZC,GAAYxE,GAAYmE,KAAI,SAAAM,GAAc,MAAI,CAClDJ,MAAK,OAACI,QAAD,IAACA,OAAD,EAACA,EAAgBhH,KACtB6G,MAAK,OAACG,QAAD,IAACA,OAAD,EAACA,EAAgBF,OAkBlBG,GAAmB,OAAGpE,SAAH,IAAGA,QAAH,EAAGA,GAAkB6D,KAAI,SAAAQ,GAAQ,MAAK,CAC7DN,MAAOM,EAASlH,KAChB6G,MAAOK,EAASJ,OAUZK,GAAa,OAAGpD,SAAH,IAAGA,QAAH,EAAGA,GAAa2C,KAAI,SAAAU,GAAS,MAAK,CACnDR,MAAK,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAWpH,KAClB6G,MAAK,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAWN,OA8CdO,GAAmB,WACvBrE,IAAe,GACfsC,GAAc,IACdF,QAAYJ,IA0Bd,OACE,6BACE,kBAAC,IAAD,CAAMvF,UAAU,gBACd,kBAAC,IAAD,CAAYA,UAAU,eACpB,wBAAIA,UAAU,cAAd,6BACA,yBAAKA,UAAU,4BACb,0BAAMS,QA9Tc,gBACA8E,GAAxBQ,GAAS8B,YACXvG,GAAQC,KAAR,8BAE4BgE,GAAtBQ,GAAS+B,UACfxG,GAAQC,KAAR,mCAAyCwE,GAAS+B,YAGlDxG,GAAQC,KAAR,2BAAiCS,KAsTWhC,UAAU,cAC7C,IACD,uBAAGA,UAAU,6BAAgC,SACpBuF,GAAxBQ,GAAS8B,YACN,sCAEoBtC,GAAtBQ,GAAS+B,UACT,oCAEA,+BAMV,yBAAK9H,UAAU,yBACb,kBAAC,IAAD,CAAMA,UAAU,+BACd,yBAAKA,UAAU,2BAIb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,QAAd,QACQ,IACN,0BAAMA,UAAU,gBAAhB,OACGkC,QADH,IACGA,OADH,EACGA,EAAa6F,eADhB,WACiC7F,QADjC,IACiCA,OADjC,EACiCA,EAAa8F,UAD9C,IAC4D,IAD5D,OAEG9F,QAFH,IAEGA,OAFH,EAEGA,EAAa+F,SAAU,KAClB,KAEV,wBAAIjI,UAAU,QAAd,YACY,IACV,0BAAMA,UAAU,gBAAhB,OACGkC,QADH,IACGA,OADH,EACGA,EAAagG,cACR,KAEV,wBAAIlI,UAAU,QACX,IADH,SAES,IACP,0BAAMA,UAAU,gBAAhB,OAAgCkC,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAaiG,OAAc,KAE7D,wBAAInI,UAAU,QACX,IADH,gBAEgB,IACd,0BAAMA,UAAU,gBAAhB,OACGkC,QADH,IACGA,OADH,EACGA,EAAakG,aACR,OAId,kBAAC,IAAD,KACE,6BACE,wBAAIpI,UAAU,uBACZ,4BACG,IADH,SAES,IACP,0BAAMA,UAAU,gBAAhB,OACGkC,QADH,IACGA,OADH,EACGA,EAAamG,WACR,KAEV,4BACG,IADH,QAEQ,IACN,0BAAMrI,UAAU,gBAAhB,OAAgCkC,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAaoG,MAAa,SAOpE,yBAAKtI,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,gDACb,6BACE,4BACG,IACD,oDAA6B,KAG/B,yBAAKA,UAAU,WAInB,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAOA,UAAU,mBAAmBuI,MAAOlC,IACzC,2BAAOrG,UAAU,IACf,wBAAIuI,MAAO,CAAEC,UAAW,WACtB,iCACA,4CACA,2CACA,oDACA,oCACA,0CACA,oCAEA,uCACA,8CACA,4DAGJ,sCACGtG,QADH,IACGA,GADH,UACGA,EAAauG,oCADhB,aACG,EAA2CxB,KAC1C,SAACyB,EAAKC,GAAN,uBACE,wBAAIC,IAAKD,EAAGJ,MAAO,CAAEC,UAAW,WAC9B,wBAAIK,MAAM,OAAO,EAAIF,GACrB,6BACM,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKI,eACJ,sCAEA,wCAIJ,6BACM,OAAHJ,QAAG,IAAHA,OAAA,EAAAA,EAAKK,cACJ,sCAEA,wCAIJ,6BACM,OAAHL,QAAG,IAAHA,OAAA,EAAAA,EAAKM,uBACJ,sCAEA,wCAIJ,mCAAKN,QAAL,IAAKA,GAAL,UAAKA,EAAKO,kBAAV,aAAK,EAAiB1I,MAEtB,mCAAKmI,QAAL,IAAKA,GAAL,UAAKA,EAAKO,kBAAV,aAAK,EAAiBC,WAEtB,mCAAKR,QAAL,IAAKA,GAAL,UAAKA,EAAKO,kBAAV,aAAK,EAAiBE,gBAItB,mCAAKT,QAAL,IAAKA,GAAL,UAAKA,EAAKO,kBAAV,aAAK,EAAiBG,gBAEtB,mCAAKV,QAAL,IAAKA,GAAL,UAAKA,EAAKO,kBAAV,aAAK,EAAiBI,kBACtB,mCAAKX,QAAL,IAAKA,GAAL,UAAKA,EAAKO,kBAAV,aAAK,EAAiBK,mCAWxC,yBAAKtJ,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,gDACb,6BACE,4BACG,IACD,2CAAoB,KAGtB,yBAAKA,UAAU,WAInB,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAOA,UAAU,mBAAmBuI,MAAOlC,IACzC,2BAAOrG,UAAU,IACf,wBAAIuI,MAAO,CAAEC,UAAW,WACtB,iCACA,0CACA,2CACA,4CACA,4CACA,sCAMA,wCAGJ,sCACGpG,QADH,IACGA,OADH,EACGA,EAAiB6E,KAAI,SAACsC,EAAOZ,GAAR,iCACpB,wBAAIC,IAAKD,EAAGJ,MAAO,CAAEC,UAAW,WAC9B,wBAAIK,MAAM,OAAO,EAAIF,GACrB,mCAAKY,QAAL,IAAKA,GAAL,UAAKA,EAAOC,mBAAZ,iBAAK,EAAoBP,kBAAzB,aAAK,EAAgC1I,MAErC,mCAAKgJ,QAAL,IAAKA,GAAL,UAAKA,EAAOE,cAAZ,aAAK,EAAelJ,MAEpB,mCACGgJ,QADH,IACGA,GADH,UACGA,EAAOC,mBADV,iBACG,EAAoBE,eADvB,aACG,EAA6B1B,UAAW,IAD3C,OAEGuB,QAFH,IAEGA,GAFH,UAEGA,EAAOC,mBAFV,iBAEG,EAAoBE,eAFvB,aAEG,EAA6BzB,UAGhC,mCAAKsB,QAAL,IAAKA,GAAL,UAAKA,EAAOC,mBAAZ,iBAAK,EAAoBG,eAAzB,aAAK,EAA6BpJ,MAElC,mCAAKgJ,QAAL,IAAKA,GAAL,UAAKA,EAAOC,mBAAZ,iBAAK,EAAoBI,cAAzB,aAAK,EAA4BrJ,MAEjC,4BACE,kBAAC,IAAD,CAAasJ,QAAQ,QAEnB,kBAAC,IAAD,CACExJ,KAAM,iBAleSyJ,EAAeC,EAkexB,OAleSD,EAmeoB,OAACP,QAAD,IAACA,OAAD,EAACA,EAAOO,cAnebC,EAmeK,OAAuBR,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAOC,mBAA9B,aAAuB,EAAoBO,eAlexGzI,GAAQC,KAAK,CACXyI,SAAS,uBAAD,OAAyBF,EAAzB,YAA0CC,GAClDhI,UAAWA,EACXC,WAAYA,KAieY9B,MAAO,UACPF,UAAW,cACXC,KAAM,uBAAGD,UAAU,eACnBI,WAAY,gBAclC,yBAAKJ,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,kCACf,yBAAKA,UAAU,gDACb,6BACE,4BACG,IACD,iDAA0B,KAG5B,yBAAKA,UAAU,WAInB,6BAEE,kBAAC,IAAD,CACAK,KAhTO,WACnBiF,GAAc,IACd7C,GAAa,IA+SDzC,UAAW,wBAEXO,KAAM,wBACNH,WAAY,IAGZ,kBAAC,IAAD,CACAC,KAAM,kBAAMsC,GAAmB,IAC/B3C,UAAW,wBAEXO,KAAM,2BACNH,WAAY,IAId,kBAAC,IAAD,CACA6J,OAAQvH,EACRwH,OAAQnD,GACR/G,UAAU,cACVmK,KAAK,MAEL,kBAAC,IAAD,CAAa5B,MAAO,CAAE6B,gBAAiB,YACrC,0BAAMpK,UAAU,cAAhB,sBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMqK,SAlbO,SAACC,GAC1BA,EAAMC,iBACN,IAAMC,EAAU,CACdC,mBAAoB1I,EACpB2I,mBAAoBhH,IAGF,IAAjBA,GACDG,IAAgB,IAGhBuC,IAAgB,GAChBpF,YAAK,mCAAoCwJ,GAAS/D,MAAK,SAAAtF,GAAQ,IAAD,EACJ,EAYpD,EAZe,MAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKE,SAAyC,IAArB,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAKwJ,YAAL,eAAWC,YACnC3E,GAAQ,OAAC9E,QAAD,IAACA,GAAD,UAACA,EAAKwJ,YAAN,aAAC,EAAWE,QAAS,CAC3BC,WAAY,UACZC,aAAa,IAEf/F,IAAYD,IACZpC,GAAmB,GACnBc,GAAgB,4BAChBE,GAAgB,GAChBuB,KACAkB,IAAgB,IAGhBH,GAAQ,OAAC9E,QAAD,IAACA,GAAD,UAACA,EAAKwJ,YAAN,aAAC,EAAWE,QAAS,CAC3BC,WAAY,QACZC,aAAa,UAyZP,kBAAC,IAAD,CAAWC,KAAG,EAAChL,UAAU,mCACrB,kBAAC,IAAD,CAAKiL,GAAG,KACR,mDACoB,0BAAMjL,UAAU,eAAhB,KAAuC,MAI3D,kBAAC,IAAD,CAAKiL,GAAG,KACR,kBAAC,IAAD,CACEC,QAASlE,GACTI,MAAO,CAAED,MAAO3D,GAAc4D,MAAO1D,IACrCyH,SAAU,SAACC,GAAD,OAvZTjE,EAwZeiE,EAAIjE,MAxZZC,EAwZmBgE,EAAIhE,MAvZnDvD,IAAgB,GAChBJ,GAAgB0D,GAChBxD,GAAgByD,QAEhBZ,YAAI,2CAAD,OAA4CY,IAASX,MAAK,SAAAtF,GAC3D+D,GAAc/D,MANI,IAACgG,EAAOC,GA0ZR7G,KAAK,qBACL8G,GAAG,wBAIY,IAAfpC,GACA,0BAAMjF,UAAU,eAAhB,yEAIe,IAAfiF,GACA,0BAAMjF,UAAU,eAAhB,oEAIA,KAGD4D,IACC,0BAAM5D,UAAU,eAAhB,mCAON,6BACA,6BAEA,kBAAC,IAAD,CACEA,UAAU,kCACVuI,MAAO,CAAE8C,QAAS,OAAQC,eAAgB,kBAE1C,kBAAC,IAAD,CACEpL,MAAM,SACNF,UAAU,YACVS,QAASsG,IAHX,SAQA,kBAAC,IAAD,CACE7G,MAAO,UACPC,KAAM,SACNH,UAAW,YACXO,KAAM,SACNH,WAAY,EACZuB,WAAYwE,SAQpB,kBAAC,IAAD,CAAO8D,OAAQzH,EAAW0H,OAAQpD,GAAY9G,UAAU,cAAcmK,KAAK,MAC3E,kBAAC,IAAD,CAAa5B,MAAO,CAAC6B,gBAAiB,YAAY,0BAAMpK,UAAU,cAAhB,sBAClD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMqK,SAtkBC,SAAAC,GACnBA,EAAMC,iBACN,IAF2B,EAErBC,EAAU,IAAIe,SAASjB,EAAMkB,QAFR,cAIdhB,GAJc,IAI3B,IAAI,EAAJ,qBAAqB,CAAC,IAAd7B,EAAa,QACjBjC,QAAQC,IAAIgC,IALW,8BAQL,IAAnBjE,GACDG,IAAkB,GAEE,GAAdM,GACNC,GAAcD,IAEY,IAApBjC,GACNa,IAAgB,GAEQ,IAAlBG,GACNG,IAAiB,QAGCkB,IAAfC,IACDF,GAAc,IACdc,IAAgB,GAChBpF,YAAK,0BAA2BwJ,GAC/B/D,MAAK,SAAAtF,GAAQ,IAAD,EACX6D,IAAYD,IACZtC,GAAa,GACbiE,QAAQC,IAAI,SAAUxF,GACtBsD,GAAkB,gBAClBE,GAAkB,GAClB1B,GAAmB,kBACnBE,GAAmB,GACnBc,GAAiB,gBACjBE,GAAiB,GACjBiC,IAAgB,GAGI,OAAb,OAAHjF,QAAG,IAAHA,OAAA,EAAAA,EAAKE,UAA2C,KAAtB,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAKwJ,YAAL,eAAWC,YAEpC3E,GAAS9E,EAAIwJ,KAAKE,QAAS,CACzBC,WAAY,UACZC,aAAa,QAMjBtJ,YAAI,0BAA2B+I,GAC9B/D,MAAK,SAAAtF,GAEe,MAAfA,EAAIE,SAAyC,IAAvBF,EAAIwJ,KAAKC,YACjC3E,GAAS9E,EAAIwJ,KAAKE,QAAS,CACzBC,WAAY,UACZC,aAAa,IAEfzF,GAAc,IACdG,QAAcF,GACdP,IAAYD,IACZtC,GAAa,GACbgC,GAAkB,gBAClBE,GAAkB,GAClB1B,GAAmB,kBACnBE,GAAmB,GACnBc,GAAiB,gBACjBE,GAAiB,SAugBf,kBAAC,IAAD,CAAOhE,KAAK,SAASkH,GAAG,aAAa9G,KAAK,aAAa6G,MAAOpF,IAC9D,kBAAC,IAAD,CAAO7B,KAAK,SAASkH,GAAG,qBAAqB9G,KAAK,qBAAqB6G,MAAOrF,SAG9DwD,GAAdC,GACA,kBAAC,IAAD,CAAWwF,KAAG,EAAChL,UAAU,mCACzB,kBAAC,IAAD,CAAOG,KAAK,SAASkH,GAAG,KAAK9G,KAAK,KAAK6G,MAAO5B,MAGhD,KAGA,kBAAC,IAAD,CAAWwF,KAAG,EAAChL,UAAU,mCACvB,kBAAC,IAAD,CAAKiL,GAAG,KACN,uCAAY,0BAAMjL,UAAU,eAAhB,KAAZ,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KAEN,kBAAC,IAAD,CACEC,QAASxD,GACTN,MAAO,CAAED,MAAO3C,GAAgB4C,MAAO1C,IACvCyG,SAAU,SAAAC,GAAG,OA3bVjE,EA2b8BiE,EAAIjE,MA3b3BC,EA2bkCgE,EAAIhE,MA1blEvC,IAAkB,GAClBJ,GAAkB0C,QAClBxC,GAAkByC,GAHE,IAACD,EAAOC,GA4bV7G,KAAK,eACL8G,GAAG,iBAODzC,GAAiB,0BAAM5E,UAAU,eAAhB,qBAEjB,OAKR,kBAAC,IAAD,CAAWgL,KAAG,EAAChL,UAAU,mCACvB,kBAAC,IAAD,CAAKiL,GAAG,KACN,4CAAiB,0BAAMjL,UAAU,eAAhB,KAAjB,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KACN,kBAAC,IAAD,CACE9K,KAAK,OACLI,KAAK,YACL8G,GAAG,YAEHoE,aAAY,OAAEpG,SAAF,IAAEA,QAAF,EAAEA,GAAY2C,UAC1B0D,YAAY,kBACZC,UAAQ,MAQd,kBAAC,IAAD,CAAWX,KAAG,EAAChL,UAAU,mCACvB,kBAAC,IAAD,CAAKiL,GAAG,KACN,2CAAgB,0BAAMjL,UAAU,eAAhB,KAAhB,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KACN,kBAAC,IAAD,CACE9K,KAAK,OACLI,KAAK,WACL8G,GAAG,WACHoE,aAAY,OAAEpG,SAAF,IAAEA,QAAF,EAAEA,GAAY4C,SAC1ByD,YAAY,iBACZC,UAAQ,WASGpG,IAAfC,GACA,kBAAC,IAAD,CAAWwF,KAAG,EAAChL,UAAU,mCACzB,kBAAC,IAAD,CAAKiL,GAAG,KACN,uCAAY,0BAAMjL,UAAU,eAAhB,KAAZ,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KACN,kBAAC,IAAD,CACE9K,KAAK,QACLI,KAAK,QACL8G,GAAG,QACHuE,OAvfA,SAACC,GACnBnF,QAAQC,IAAIkF,EAAEL,OAAOpE,OAErBZ,YAAI,4BAAD,OAA6BqF,EAAEL,OAAOpE,QACxCX,MAAK,SAAAtF,GACJiE,GAAcjE,OAmfEsK,aAAY,OAAEpG,SAAF,IAAEA,QAAF,EAAEA,GAAY8C,MAC1BuD,YAAY,kBACZC,UAAQ,IAGPxG,GAID,KAFA,0BAAMnF,UAAU,eAAhB,2BAQN,UAIgBuF,GAAdC,GACA,KAEA,kBAAC,IAAD,CAAWwF,KAAG,EAAChL,UAAU,mCACzB,kBAAC,IAAD,CAAKiL,GAAG,KACN,0CAAe,0BAAMjL,UAAU,eAAhB,OAEjB,kBAAC,IAAD,CAAKiL,GAAG,KACN,kBAAC,IAAD,CACE9K,KAAK,WACLI,KAAK,WACL8G,GAAG,WACHqE,YAAY,qBACZC,UAAQ,MAMd,kBAAC,IAAD,CAAWX,KAAG,EAAChL,UAAU,mCACvB,kBAAC,IAAD,CAAKiL,GAAG,KACN,8CAAmB,0BAAMjL,UAAU,eAAhB,KAAnB,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KACN,kBAAC,IAAD,CACE9K,KAAK,OACLI,KAAK,cACL8G,GAAG,cAEHoE,aAAY,OAAEpG,SAAF,IAAEA,QAAF,EAAEA,GAAY+C,YAC1BsD,YAAY,yBACZC,UAAQ,MAQd,kBAAC,IAAD,CAAWX,KAAG,EAAChL,UAAU,mCACvB,kBAAC,IAAD,CAAKiL,GAAG,KACN,yCAAc,0BAAMjL,UAAU,eAAhB,KAAd,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KAEN,kBAAC,IAAD,CACEC,QAAS5D,GACTF,MAAO,CAAED,MAAOnE,GAAiBoE,MAAOlE,IACxCiI,SAAU,SAAAC,GAAG,OAjmBPjE,EAimB4BiE,EAAIjE,MAjmBzBC,EAimBgCgE,EAAIhE,MAhmBnEnE,GAAmBkE,GACnBhE,GAAmBiE,GACnBrD,IAAgB,GAChBE,GAAiB,gBACjBE,GAAiB,QACjBqC,YAAI,iBAAD,OAAkBY,IAClBX,MAAK,SAAAtF,GAGJkC,GAAoBlC,MAVD,IAACgG,EAAOC,GAkmBb7G,KAAK,YACL8G,GAAG,cAODvD,GAAe,0BAAM9D,UAAU,eAAhB,uBAEf,OAKR,kBAAC,IAAD,CAAWgL,KAAG,EAAChL,UAAU,mCACvB,kBAAC,IAAD,CAAKiL,GAAG,KACN,uCAAY,0BAAMjL,UAAU,eAAhB,KAAZ,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KAEN,kBAAC,IAAD,CACEC,QAAS1D,GACTJ,MAAO,CAAED,MAAOnD,GAAeoD,MAAOlD,IACtCiH,SAAU,SAAAC,GAAG,OAtmBTjE,EAsmB4BiE,EAAIjE,MAtmBzBC,EAsmBgCgE,EAAIhE,MArmBjE/C,IAAiB,GACjBJ,GAAiBkD,QACjBhD,GAAiBiD,GAHI,IAACD,EAAOC,GAumBX7G,KAAK,UACL8G,GAAG,YAODjD,GAAgB,0BAAMpE,UAAU,eAAhB,qBAEhB,OAKR,kBAAC,IAAD,CAAWgL,KAAG,EAAChL,UAAU,mCACvB,kBAAC,IAAD,CAAKiL,GAAG,KACN,sCAAW,0BAAMjL,UAAU,eAAhB,KAAX,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KACN,kBAAC,IAAD,CACE9K,KAAK,OACLI,KAAK,OACL8G,GAAG,OACHoE,aAAY,OAAEpG,SAAF,IAAEA,QAAF,EAAEA,GAAYiD,KAC1BoD,YAAY,iBACZC,UAAQ,MAQd,kBAAC,IAAD,CAAWX,KAAG,EAAChL,UAAU,mCACvB,kBAAC,IAAD,CAAKiL,GAAG,KACN,2CAAgB,0BAAMjL,UAAU,eAAhB,KAAhB,MAEF,kBAAC,IAAD,CAAKiL,GAAG,KACN,kBAAC,IAAD,CACE9K,KAAK,OACLI,KAAK,WACL8G,GAAG,WACHoE,aAAY,OAAEpG,SAAF,IAAEA,QAAF,EAAEA,GAAYyG,SAC1BJ,YAAY,iBACZC,UAAQ,MAQZ,kBAAC,IAAD,CAAW3L,UAAU,kCAAkCuI,MAAO,CAAE8C,QAAS,OAAQC,eAAgB,kBAE/F,kBAAC,IAAD,CAAQpL,MAAM,SAASF,UAAU,YAAYS,QAASqG,IAAtD,SAeE,kBAAC,IAAD,CACE5G,MAAO,UACPC,KAAM,SACNH,UAAW,YACXO,KAAM,SACNH,WAAY,EACZuB,WAAYwE,WActB,yBAAKnG,UAAU,yBACb,kBAAC,IAAD,CAAOA,UAAU,mBAAmBuI,MAAOlC,IACzC,2BAAOrG,UAAU,IACf,wBAAIuI,MAAO,CAAEC,UAAW,WACtB,iCACA,uCACA,oCACA,wCACA,qCACA,wCACA,uCAMA,wCAGJ,sCACGlG,QADH,IACGA,OADH,EACGA,EAAkB2E,KAAI,SAAC8E,EAASpD,GAAV,OACrB,wBAAIC,IAAKD,EAAGJ,MAAO,CAAEC,UAAW,WAC9B,wBAAIK,MAAM,OAAO,EAAIF,GACrB,mCAAKoD,QAAL,IAAKA,OAAL,EAAKA,EAASC,YAEd,mCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAShE,eAAgB,IAA9B,OAAmCgE,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAS/D,UAAW,IAAvD,OAA4D+D,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAS9D,UAErE,mCACG8D,QADH,IACGA,OADH,EACGA,EAAS7D,cAGZ,mCAAK6D,QAAL,IAAKA,OAAL,EAAKA,EAAS5D,OAEd,mCAAK4D,QAAL,IAAKA,OAAL,EAAKA,EAAS3D,aAEd,mCAAK2D,QAAL,IAAKA,OAAL,EAAKA,EAASE,YAAd,YAA6BF,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAS1D,UAAtC,KAEA,4BACE,kBAAC,IAAD,CAAawB,QAAQ,QAErB,kBAAC,IAAD,CACAxJ,KAAM,kBA/pBkByH,EAgqBgB,OAACiE,QAAD,IAACA,OAAD,EAACA,EAAS1E,QA/pBxE/F,GAAQC,KAAK,CACXyI,SAAS,4BAAD,OAA8BlC,GACtC/F,UAAWA,EACXC,WAAYA,IAJ+B,IAAC8F,GAkqBxB5H,MAAO,UACPF,UAAW,cACXC,KAAM,uBAAGD,UAAU,eACnBI,WAAY,IAGV,kBAAC,IAAD,CACEC,KAAM,kBAptBb,SAAC0L,GAEpBrF,QAAQC,IAAI,UAAWoF,GACvBzG,GAAcyG,GACdtH,GAAiB,OAACsH,QAAD,IAACA,OAAD,EAACA,EAAShE,gBAC3BpD,GAAiB,OAACoH,QAAD,IAACA,OAAD,EAACA,EAASG,cAC3BjJ,GAAkB,OAAC8I,QAAD,IAACA,OAAD,EAACA,EAASE,aAC5B9I,GAAkB,OAAC4I,QAAD,IAACA,OAAD,EAACA,EAASI,WAC5BlI,GAAgB,OAAC8H,QAAD,IAACA,OAAD,EAACA,EAAS1D,WAC1BlE,GAAgB,OAAC4H,QAAD,IAACA,OAAD,EAACA,EAASK,SAC1B3G,GAAa,OAACsG,QAAD,IAACA,OAAD,EAACA,EAAS1E,IACvB5E,GAAa,GAysByB4J,CAAaN,IACzB7L,MAAO,UACPF,UAAW,cACXC,KAAM,uBAAGD,UAAU,gBACnBI,WAAY,IAId,kBAAC,IAAD,CACEF,MAAO,SACPG,KAAM,kBAhtBb,SAAC0L,GACpBrF,QAAQC,IAAIoF,GACZlG,GAAa,OAACkG,QAAD,IAACA,OAAD,EAACA,EAAS/D,WACvBrC,GAAW,OAACoG,QAAD,IAACA,OAAD,EAACA,EAASO,kBACrB/I,IAAe,GA4sBuBgJ,CAAaR,IACzB/L,UAAW,cACXC,KAAM,uBAAGD,UAAU,qBACnBI,WAAY,IAGlB,kBAAC,IAAD,CACE6J,OAAQ3G,GACR4G,OAAQtC,GACR5H,UAAU,cAEV,kBAAC,IAAD,KACE,qDACyB,2BAAI4F,IAD7B,wCAMF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1F,MAAM,SACNO,QAAS,kBAvtBC4G,EAutBkC3B,GAttBtEU,IAAgB,QAChBoG,YAAO,oCAAD,OAAqCnF,IAAMZ,MAAK,SAACtF,GACrD8E,GAAS9E,EAAK,CACZ2J,WAAY,QACZC,aAAa,IAEfxH,IAAe,GACfsC,GAAc,IACdF,QAAYJ,GACZP,IAAYD,IACZqB,IAAgB,MAXiB,IAACiB,GAwtBV3G,SAAUyF,IAHZ,OAOA,kBAAC,IAAD,CAAQjG,MAAM,UAAUO,QAASmH,IAAjC","file":"static/js/236.64294a60.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst CustomButtonRipple = ({isDisabled, className, icon,color, permission, type,url, func, name}) => {\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n         \r\n            <Button.Ripple\r\n               disabled={isDisabled}\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {name}\r\n            </Button.Ripple>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomButtonRipple;","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport get from \"../../../../helpers/get\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport ButtonForFunction from \"../../Components/ButtonForFunction\";\r\nimport CustomButtonRipple from \"../../Components/CustomButtonRipple\";\r\nimport post from \"../../../../helpers/post\";\r\nimport put from \"../../../../helpers/put\";\r\nimport remove from \"../../../../helpers/remove\";\r\n\r\nconst AdmissionManagerProfile = () => {\r\n  const { managerId, providerId } = useParams();\r\n  const [managerData, setManagerData] = useState({});\r\n  const [applicationData, setApplicationData] = useState([]);\r\n  const [admissionOfficer, setAdmissionOfficer] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [assignModalOpen, setAssignModalOpen] = useState(false);\r\n\r\n  const [officerDD, setOfficerDD] = useState([]);\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [uniCountryLabel, setUniCountryLabel] = useState('Select Country');\r\n  const [uniCountryValue, setUniCountryValue] = useState(0);\r\n\r\n  const [universityStates, setUniversityStates] = useState([]);\r\n\r\n  \r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n\r\n  const [officerLabel, setOfficerLabel] = useState(\"Select Admission Officer\");\r\n  const [officerValue, setOfficerValue] = useState(0);\r\n  const [officerError, setOfficerError] = useState(false);\r\n\r\n  const [countryError, setCountryError] = useState(false);\r\n\r\n  const [uniStateLabel, setUniStateLabel] = useState('Select State');\r\n  const [unistateValue, setUniStateValue] = useState(0);\r\n  const [uniStateError, setUniStateError] = useState(false);\r\n\r\n  const [nameTitleDD, setNameTitleDD] = useState([]);\r\n\r\n  const [nameTitleLabel, setNameTitleLabel] = useState(\"Select Title\");\r\n  const [nameTitleValue, setNameTitleValue] = useState(0);\r\n\r\n  const [nameTitleError, setNameTitleError] = useState(false);\r\n\r\n  const [providerDD, setProviderDD] = useState([]);\r\n  // const [providerLabel, setProviderLabel] = useState(\"Select Provider\");\r\n  // const [providerValue, setProviderValue] = useState(0);\r\n  // const [providerError, setProviderError] = useState(false);\r\n\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [existsNote, setExistsNote] = useState();\r\n\r\n  const [emailError, setEmailError] = useState(true);\r\n  const [officerObj, setOfficerObj] = useState({});\r\n  const [selectedId, setSelectedId] = useState(undefined);\r\n  const [deleteId, setDeleteId] = useState(undefined);\r\n  const [deleteName, setDeleteName] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { addToast } = useToasts();\r\n  const [buttonStatus,setButtonStatus] = useState(false);\r\n\r\n  const tableStyle = {\r\n    overflowX: \"scroll\",\r\n  };\r\n\r\n  const backToProviderDetails = () => {\r\n    if (location.managerList != undefined) {\r\n      history.push(`/admissionManagerList`);\r\n    } \r\n    else if(location.officerId != undefined){\r\n      history.push(`/admissionOfficerDetails/${location.officerId}`)\r\n    }\r\n    else {\r\n      history.push(`/providerDetails/${providerId}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    get(`AdmissionOfficerDD/Index/${providerId}/${managerId}`).then((res) => {\r\n      console.log(\"rsdsd\", res);\r\n      setOfficerDD(res);\r\n      // setManagerDDForm(res);\r\n    });\r\n\r\n    get(\"CountryDD/index\").then(res =>{\r\n        setCountryList(res);\r\n      });\r\n\r\n    get(\"NameTittleDD/index\").then(res =>{\r\n        setNameTitleDD(res);\r\n      });\r\n\r\n    get(\"ProviderDD/Index\").then(res =>{\r\n        setProviderDD(res);\r\n      });\r\n\r\n    get(`AdmissionManager/Profile/${managerId}`).then((res) => {\r\n      setManagerData(res);\r\n      setApplicationData(res?.admissionManagerApplications);\r\n      setAdmissionOfficer(res?.admissionOfficers);\r\n      console.log(\"admission mnager\", res);\r\n    });\r\n  }, [managerId, success, providerId]);\r\n\r\n  const handlRedirectToApplicationDetails = (applicationId, studentId) => {\r\n    history.push({\r\n      pathname: `/applicationDetails/${applicationId}/${studentId}`,\r\n      managerId: managerId,\r\n      providerId: providerId\r\n    });\r\n  }\r\n\r\n   // on Close Modal\r\n   const closeModal = () => {\r\n    setSelectedId(undefined);\r\n    setOfficerObj(null);\r\n    setNameTitleLabel(\"Select Title\");\r\n    setNameTitleValue(0);\r\n    setUniCountryLabel(\"Select Country\");\r\n    setUniCountryValue(0);\r\n    setUniStateLabel(\"Select State\");\r\n    setUniStateValue(0);\r\n    // setProviderLabel(\"Select Provider\");\r\n    // setProviderValue(0);\r\n    // setManagerFormLabel(\"Select Admission Manager\");\r\n    // setManagerFormValue(0);\r\n    setCountryError(false);\r\n    setUniStateError(false);\r\n    setNameTitleError(false);\r\n    // setProviderError(false);\r\n    // setManagerFormError(false);\r\n    setEmailError(true);\r\n    setModalOpen(false);\r\n  }\r\n\r\n  const assignCloseModal = () => {\r\n    setOfficerError(false);\r\n    setExistsNote();\r\n    setOfficerLabel(\"Select Admission Officer\");\r\n    setOfficerValue(0);\r\n    setAssignModalOpen(false);\r\n  }\r\n\r\n  const handleSubmit = event =>{\r\n    event.preventDefault();\r\n    const subdata = new FormData(event.target);\r\n\r\n    for(var i of subdata){\r\n        console.log(i);\r\n    }\r\n\r\n    if(nameTitleValue === 0){\r\n      setNameTitleError(true);\r\n    }\r\n    else if(emailError == false){\r\n      setEmailError(emailError);\r\n    }\r\n    else if(uniCountryValue === 0){\r\n      setCountryError(true);\r\n    }\r\n    else if(unistateValue === 0){\r\n      setUniStateError(true);\r\n    }\r\n    else{\r\n      if(selectedId === undefined){\r\n        setOfficerObj({});\r\n        setButtonStatus(true);\r\n        post(`AdmissionOfficer/Create`, subdata)\r\n        .then(res => {\r\n          setSuccess(!success);\r\n          setModalOpen(false);\r\n          console.log(\"ressss\", res);\r\n          setNameTitleLabel(\"Select Title\");\r\n          setNameTitleValue(0);\r\n          setUniCountryLabel(\"Select Country\");\r\n          setUniCountryValue(0);\r\n          setUniStateLabel(\"Select State\");\r\n          setUniStateValue(0);\r\n          setButtonStatus(false);\r\n\r\n        //   setuniversityId(res?.data?.result?.universityId)\r\n          if (res?.status === 200 && res?.data?.isSuccess === true) {\r\n            // setSubmitData(false);\r\n            addToast(res.data.message, {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n            })\r\n          }\r\n        })\r\n        }\r\n        else{\r\n          put(`AdmissionOfficer/Update`, subdata)\r\n          .then(res => {\r\n            \r\n            if (res.status === 200 && res.data.isSuccess === true) {\r\n              addToast(res.data.message, {\r\n                appearance: 'success',\r\n                autoDismiss: true,\r\n              })\r\n              setOfficerObj({});\r\n              setSelectedId(undefined);\r\n              setSuccess(!success);\r\n              setModalOpen(false);\r\n              setNameTitleLabel(\"Select Title\");\r\n              setNameTitleValue(0);\r\n              setUniCountryLabel(\"Select Country\");\r\n              setUniCountryValue(0);\r\n              setUniStateLabel(\"Select State\");\r\n              setUniStateValue(0);\r\n            }\r\n          \r\n          })\r\n        }\r\n    }\r\n  }\r\n\r\n  const handleSubmitAssign = (event) => {\r\n    event.preventDefault();\r\n    const subdata = {\r\n      admissionManagerId: managerId,\r\n      admissionOfficerId: officerValue\r\n    }\r\n\r\n    if(officerValue === 0){\r\n      setOfficerError(true);\r\n    }\r\n    else{\r\n      setButtonStatus(true);\r\n      post(\"AdmissionOfficerOfManager/Create\", subdata).then(res => {\r\n        if (res?.status == 200 && res?.data?.isSuccess == true) {\r\n          addToast(res?.data?.message, {\r\n            appearance: \"success\",\r\n            autoDismiss: true,\r\n          });\r\n          setSuccess(!success);\r\n          setAssignModalOpen(false);\r\n          setOfficerLabel(\"Select Admission Officer\");\r\n          setOfficerValue(0);\r\n          setExistsNote();\r\n          setButtonStatus(false);\r\n        }\r\n        else{\r\n          addToast(res?.data?.message, {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n          });\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const officerMenu = officerDD.map((manager) => ({\r\n    label: manager?.name,\r\n    value: manager?.id,\r\n  }));\r\n\r\n  const selectOfficer = (label, value) => {\r\n    setOfficerError(false);\r\n    setOfficerLabel(label);\r\n    setOfficerValue(value);\r\n\r\n    get(`AdmissionOfficerOfManager/OfficerExists/${value}`).then(res=>{\r\n      setExistsNote(res);\r\n    })\r\n  }\r\n\r\n  const countryDD = countryList.map(countryOptions =>({\r\n    label:countryOptions?.name, \r\n    value:countryOptions?.id\r\n  }));\r\n\r\n  // select University Country\r\n  const selectUniCountry = (label, value) => {\r\n    setUniCountryLabel(label);\r\n    setUniCountryValue(value);\r\n    setCountryError(false);\r\n    setUniStateLabel(\"Select State\");\r\n    setUniStateValue(0);\r\n    get(`StateDD/Index/${value}`)\r\n      .then(res => {\r\n        // setUniStateLabel(res.name)\r\n        // setUniStateValue(res.id)\r\n        setUniversityStates(res);\r\n      })\r\n  }\r\n\r\n  const universityStateName = universityStates?.map(uniState => ({ \r\n    label: uniState.name, \r\n    value: uniState.id \r\n  }));\r\n\r\n  // select University State\r\n  const selectUniState = (label, value) => {\r\n    setUniStateError(false);\r\n    setUniStateLabel(label);\r\n    setUniStateValue(value);\r\n  }\r\n\r\n  const nameTitleMenu = nameTitleDD?.map(nameTitle => ({\r\n    label: nameTitle?.name,\r\n    value: nameTitle?.id\r\n  }))\r\n\r\n//   select name title\r\nconst selectNameTitle = (label, value) => {\r\n    setNameTitleError(false);\r\n    setNameTitleLabel(label);\r\n    setNameTitleValue(value);\r\n  }\r\n\r\n  const handleEmail = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    get(`Consultant/OnChangeEmail/${e.target.value}`)\r\n    .then(res => {\r\n      setEmailError(res);\r\n    })\r\n  }\r\n\r\n  const handleAddNew = () =>{\r\n    setOfficerObj({});\r\n    setModalOpen(true);\r\n  }\r\n\r\n  const handleUpdate = (officer) =>{\r\n\r\n    console.log(\"officer\", officer);\r\n    setOfficerObj(officer);\r\n    setNameTitleLabel(officer?.nameTittleName);\r\n    setNameTitleValue(officer?.nameTittleId);\r\n    setUniCountryLabel(officer?.countryName);\r\n    setUniCountryValue(officer?.countryId);\r\n    setUniStateLabel(officer?.stateName);\r\n    setUniStateValue(officer?.stateId);\r\n    setSelectedId(officer?.id);\r\n    setModalOpen(true);\r\n  }\r\n\r\n  const toggleDanger = (officer) => {\r\n    console.log(officer);\r\n    setDeleteName(officer?.firstName);\r\n    setDeleteId(officer?.officermanagerId);\r\n    setDeleteModal(true);\r\n    \r\n  }\r\n\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    setDeleteName(\"\");\r\n    setDeleteId(undefined);\r\n  };\r\n\r\n  const handleDeleteAdmissionOfficer = (id) =>{\r\n    setButtonStatus(true);\r\n    remove(`AdmissionOfficerOfManager/Delete/${id}`).then((res) => {\r\n      addToast(res, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n      setDeleteModal(false);\r\n      setDeleteName(\"\");\r\n      setDeleteId(undefined);\r\n      setSuccess(!success);\r\n      setButtonStatus(false);\r\n    });\r\n  }\r\n\r\n  const handlRedirectToAdmissionofficerDetails = (officerId) => {\r\n    history.push({\r\n      pathname: `/admissionOfficerDetails/${officerId}`,\r\n      managerId: managerId,\r\n      providerId: providerId\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Admission Manager Details</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToProviderDetails} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i>{\" \"}\r\n              {location.managerList != undefined\r\n                ? \"Back to Admission Manager List\"\r\n                : \r\n                location.officerId != undefined ? \r\n                \"Back to Admission Officer Details\"\r\n                :\r\n                \"Back to Provider Details\"}\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <div className=\"uapp-employee-profile\">\r\n        <Card className=\"uapp-employee-profile-right\">\r\n          <div className=\"uapp-profile-CardHeader\">\r\n            {/* <div className=\"uapp-circle-image margin-top-minus\">\r\n                  <img  alt='provider_image' />\r\n                </div>     */}\r\n            <div className=\"py-3\">\r\n              <h5 className=\"py-1\">\r\n                Name:{\" \"}\r\n                <span className=\"text-primary\">\r\n                  {managerData?.nameTittleName} {managerData?.firstName} {}{\" \"}\r\n                  {managerData?.lastName}{\" \"}\r\n                </span>{\" \"}\r\n              </h5>\r\n              <h5 className=\"py-1\">\r\n                Provider:{\" \"}\r\n                <span className=\"text-primary\">\r\n                  {managerData?.providerName}\r\n                </span>{\" \"}\r\n              </h5>\r\n              <h5 className=\"py-1\">\r\n                {\" \"}\r\n                Email:{\" \"}\r\n                <span className=\"text-primary\">{managerData?.email}</span>{\" \"}\r\n              </h5>\r\n              <h5 className=\"py-1\">\r\n                {\" \"}\r\n                Phone Number:{\" \"}\r\n                <span className=\"text-primary\">\r\n                  {managerData?.phoneNumber}\r\n                </span>{\" \"}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <CardBody>\r\n            <div>\r\n              <ul className=\"uapp-ul text-center\">\r\n                <h5>\r\n                  {\" \"}\r\n                  State:{\" \"}\r\n                  <span className=\"text-primary\">\r\n                    {managerData?.stateName}\r\n                  </span>{\" \"}\r\n                </h5>\r\n                <h5>\r\n                  {\" \"}\r\n                  City:{\" \"}\r\n                  <span className=\"text-primary\">{managerData?.city}</span>{\" \"}\r\n                </h5>\r\n              </ul>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <div className=\" info-item mt-4\">\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"hedding-titel d-flex justify-content-between\">\r\n                <div>\r\n                  <h5>\r\n                    {\" \"}\r\n                    <b>Assigned Universities</b>{\" \"}\r\n                  </h5>\r\n\r\n                  <div className=\"bg-h\"></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"table-responsive pt-3\">\r\n                <Table className=\"table-sm striped\" style={tableStyle}>\r\n                  <thead className=\"\">\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                      <th>#</th>\r\n                      <th>Accept EU_UK</th>\r\n                      <th>Accept Home</th>\r\n                      <th>Accept International</th>\r\n                      <th>Name</th>\r\n                      <th>Short Name</th>\r\n                      <th>City</th>\r\n                      {/* <th>Description</th> */}\r\n                      <th>Founded</th>\r\n                      <th>Global Ranking</th>\r\n                      <th>Part Time Work Information</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {managerData?.admissionManagerUniversities?.map(\r\n                      (uni, i) => (\r\n                        <tr key={i} style={{ textAlign: \"center\" }}>\r\n                          <th scope=\"row\">{1 + i}</th>\r\n                          <td>\r\n                            {uni?.isAcceptEU_UK ? (\r\n                              <span>True</span>\r\n                            ) : (\r\n                              <span>False</span>\r\n                            )}\r\n                          </td>\r\n\r\n                          <td>\r\n                            {uni?.isAcceptHome ? (\r\n                              <span>True</span>\r\n                            ) : (\r\n                              <span>False</span>\r\n                            )}\r\n                          </td>\r\n\r\n                          <td>\r\n                            {uni?.isAcceptInternational ? (\r\n                              <span>True</span>\r\n                            ) : (\r\n                              <span>False</span>\r\n                            )}\r\n                          </td>\r\n\r\n                          <td>{uni?.university?.name}</td>\r\n\r\n                          <td>{uni?.university?.shortName}</td>\r\n\r\n                          <td>{uni?.university?.universityCity}</td>\r\n\r\n                          {/* <td>{uni?.university?.description}</td> */}\r\n\r\n                          <td>{uni?.university?.foundationYear}</td>\r\n\r\n                          <td>{uni?.university?.globalRankNumber}</td>\r\n                          <td>{uni?.university?.partTimeWorkInformation}</td>\r\n                        </tr>\r\n                      )\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n\r\n        <div className=\" info-item mt-4\">\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"hedding-titel d-flex justify-content-between\">\r\n                <div>\r\n                  <h5>\r\n                    {\" \"}\r\n                    <b>Applications</b>{\" \"}\r\n                  </h5>\r\n\r\n                  <div className=\"bg-h\"></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"table-responsive pt-3\">\r\n                <Table className=\"table-sm striped\" style={tableStyle}>\r\n                  <thead className=\"\">\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                      <th>#</th>\r\n                      <th>University</th>\r\n                      <th>Campus Name</th>\r\n                      <th>Student Name</th>\r\n                      <th>Subject Name</th>\r\n                      <th>Intake</th>\r\n                      {/* <th>City</th>\r\n                         <th>Description</th>\r\n                         <th>Founded</th>\r\n                         <th>Global Ranking</th>\r\n                         <th>Part Time Work Information</th> */}\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {applicationData?.map((appli, i) => (\r\n                      <tr key={i} style={{ textAlign: \"center\" }}>\r\n                        <th scope=\"row\">{1 + i}</th>\r\n                        <td>{appli?.application?.university?.name}</td>\r\n\r\n                        <td>{appli?.campus?.name}</td>\r\n\r\n                        <td>\r\n                          {appli?.application?.student?.firstName}{\" \"}\r\n                          {appli?.application?.student?.lastName}\r\n                        </td>\r\n\r\n                        <td>{appli?.application?.subject?.name}</td>\r\n\r\n                        <td>{appli?.application?.intake?.name}</td>\r\n\r\n                        <td>\r\n                          <ButtonGroup variant=\"text\">\r\n                        \r\n                            <ButtonForFunction\r\n                              func={() =>\r\n                                handlRedirectToApplicationDetails(appli?.applicationId, appli?.application?.studentId)\r\n                              }\r\n                              color={\"primary\"}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              icon={<i className=\"fas fa-eye\"></i>}\r\n                              permission={6}\r\n                            />\r\n\r\n                          </ButtonGroup>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n\r\n        <div className=\" info-item mt-4\">\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"d-flex justify-content-between\">\r\n              <div className=\"hedding-titel d-flex justify-content-between\">\r\n                <div>\r\n                  <h5>\r\n                    {\" \"}\r\n                    <b>Admission Officers</b>{\" \"}\r\n                  </h5>\r\n\r\n                  <div className=\"bg-h\"></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                {/* <Button color=\"primary\" className=\"me-1\">Add New Admission Officer</Button> */}\r\n                <ButtonForFunction\r\n                func={handleAddNew}\r\n                className={\"btn btn-uapp-add mr-1\"}\r\n                // icon={<i className=\"fas fa-plus\"></i>}\r\n                name={\"Add Admission Officer\"}\r\n                permission={6}\r\n              />\r\n                {/* <Button color=\"primary\" className=\"ms-1\">Assign Admission Officer</Button> */}\r\n                <ButtonForFunction\r\n                func={() => setAssignModalOpen(true)}\r\n                className={\"btn btn-uapp-add ml-1\"}\r\n                // icon={<i className=\"fas fa-plus\"></i>}\r\n                name={\"Assign Admission Officer\"}\r\n                permission={6}\r\n              />\r\n\r\n              {/* assign admission officer */}\r\n              <Modal\r\n              isOpen={assignModalOpen}\r\n              toggle={assignCloseModal}\r\n              className=\"uapp-modal2\"\r\n              size=\"lg\"\r\n            >\r\n              <ModalHeader style={{ backgroundColor: \"#1d94ab\" }}>\r\n                <span className=\"text-white\">Admission Officer</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={handleSubmitAssign}>\r\n                  \r\n\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                      <Col md=\"3\">\r\n                      <span>\r\n                        Admission Officer <span className=\"text-danger\">*</span>{\" \"}\r\n                      </span>\r\n                    </Col>\r\n                    \r\n                      <Col md=\"5\">\r\n                      <Select\r\n                        options={officerMenu}\r\n                        value={{ label: officerLabel, value: officerValue }}\r\n                        onChange={(opt) =>\r\n                          selectOfficer(opt.label, opt.value)\r\n                        }\r\n                        name=\"admissionOfficerId\"\r\n                        id=\"admissionOfficerId\"\r\n                      />\r\n\r\n                      {\r\n                        existsNote === true ? \r\n                        <span className=\"text-danger\">\r\n                          Admission officer is already working with another admission manager.\r\n                        </span>\r\n                        :\r\n                        existsNote === false ?\r\n                        <span className=\"text-danger\">\r\n                          Admission officer is not working with another admission manager.\r\n                        </span>\r\n                        :\r\n                        null\r\n                      }\r\n\r\n                      {officerError && (\r\n                        <span className=\"text-danger\">\r\n                          Admission officer is required\r\n                        </span>\r\n                      )}\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <br />\r\n                  <br />\r\n\r\n                  <FormGroup\r\n                    className=\"has-icon-left position-relative\"\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button\r\n                      color=\"danger\"\r\n                      className=\"mr-1 mt-3\"\r\n                      onClick={assignCloseModal}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n\r\n                    <CustomButtonRipple\r\n                      color={\"primary\"}\r\n                      type={\"submit\"}\r\n                      className={\"mr-1 mt-3\"}\r\n                      name={\"Submit\"}\r\n                      permission={6}\r\n                      isDisabled={buttonStatus}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n              {/* add new admission officer */}\r\n              <Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal4\" size='lg'>\r\n              <ModalHeader style={{backgroundColor: '#1d94ab'}}><span className='text-white'>Admission Officer</span></ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={handleSubmit} >\r\n\r\n                <Input type=\"hidden\" id=\"providerId\" name=\"providerId\" value={providerId} />\r\n                <Input type=\"hidden\" id=\"admissionManagerId\" name=\"admissionManagerId\" value={managerId} />\r\n\r\n                {\r\n                  selectedId != undefined ?\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Input type=\"hidden\" id=\"id\" name=\"id\" value={selectedId} />\r\n                </FormGroup>\r\n                :\r\n                null\r\n                }\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>Title <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n\r\n                    <Select\r\n                      options={nameTitleMenu}\r\n                      value={{ label: nameTitleLabel, value: nameTitleValue }}\r\n                      onChange={opt => selectNameTitle(opt.label, opt.value)}\r\n                      name=\"nameTittleId\"\r\n                      id=\"nameTittleId\"\r\n                    />\r\n\r\n                    {/* <div className=\"form-control-position\">\r\n                                        <User size={15} />\r\n                                    </div> */}\r\n                    {\r\n                        nameTitleError ? <span className=\"text-danger\">Title is required</span>\r\n                        :\r\n                        null\r\n                    }\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>First Name <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"  \r\n                      \r\n                      defaultValue={officerObj?.firstName}\r\n                      placeholder=\"Type First Name\"\r\n                      required\r\n                    />\r\n                    {/* <div className=\"form-control-position\">\r\n                                                <User size={15} />\r\n                                            </div> */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>Last Name <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      id=\"lastName\"\r\n                      defaultValue={officerObj?.lastName}\r\n                      placeholder=\"Type Last Name\"\r\n                      required\r\n                    />\r\n                    {/* <div className=\"form-control-position\">\r\n                                                <User size={15} />\r\n                                            </div> */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                {\r\n                  selectedId === undefined ?\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>Email <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"  \r\n                      onBlur={handleEmail}\r\n                      defaultValue={officerObj?.email}\r\n                      placeholder=\"Type Your Email\"\r\n                      required\r\n                    />\r\n                   {\r\n                      !emailError ? \r\n\r\n                      <span className='text-danger'>Email already exists.</span>\r\n                      :\r\n                      null\r\n\r\n                    }\r\n                  </Col>\r\n                </FormGroup>\r\n                :\r\n                null\r\n                }\r\n\r\n                {\r\n                  selectedId != undefined ?\r\n                  null\r\n                  :\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>Password <span className=\"text-danger\">*</span></span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"Type Your Password\"\r\n                      required\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                }\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>Phone Number <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phoneNumber\"\r\n                      id=\"phoneNumber\"  \r\n                      \r\n                      defaultValue={officerObj?.phoneNumber}\r\n                      placeholder=\"Type Your Phone Number\"\r\n                      required\r\n                    />\r\n                    {/* <div className=\"form-control-position\">\r\n                                                <User size={15} />\r\n                                            </div> */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>Country <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n\r\n                    <Select\r\n                      options={countryDD}\r\n                      value={{ label: uniCountryLabel, value: uniCountryValue }}\r\n                      onChange={opt => selectUniCountry(opt.label, opt.value)}\r\n                      name=\"countryId\"\r\n                      id=\"countryId\"\r\n                    />\r\n\r\n                    {/* <div className=\"form-control-position\">\r\n                                        <User size={15} />\r\n                                    </div> */}\r\n                    {\r\n                        countryError ? <span className=\"text-danger\">Country is required</span>\r\n                        :\r\n                        null\r\n                    }\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>State <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n\r\n                    <Select\r\n                      options={universityStateName}\r\n                      value={{ label: uniStateLabel, value: unistateValue }}\r\n                      onChange={opt => selectUniState(opt.label, opt.value)}\r\n                      name=\"stateId\"\r\n                      id=\"stateId\"\r\n                    />\r\n\r\n                    {/* <div className=\"form-control-position\">\r\n                                        <User size={15} />\r\n                                    </div> */}\r\n                    {\r\n                        uniStateError ? <span className=\"text-danger\">State is required</span>\r\n                        :\r\n                        null\r\n                    }\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>City <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"city\"\r\n                      id=\"city\"\r\n                      defaultValue={officerObj?.city}\r\n                      placeholder=\"Type City Name\"\r\n                      required\r\n                    />\r\n                    {/* <div className=\"form-control-position\">\r\n                                        <User size={15} />\r\n                                    </div> */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row className=\"has-icon-left position-relative\">\r\n                  <Col md=\"3\">\r\n                    <span>Post Code <span className=\"text-danger\">*</span> </span>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"postCode\"\r\n                      id=\"postCode\"\r\n                      defaultValue={officerObj?.postCode}\r\n                      placeholder=\"Type Post Code\"\r\n                      required\r\n                    />\r\n                    {/* <div className=\"form-control-position\">\r\n                                        <User size={15} />\r\n                                    </div> */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                  <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                    <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={closeModal}>Close</Button>\r\n\r\n                    \r\n                    {/* localStorage.getItem(\"updateUni\") ? */}\r\n                      {/* <Button color=\"warning\" className=\"mr-1 mt-3\" onClick={handleUpdateSubmit}>Update</Button> : */}\r\n\r\n                      {/* <Button.Ripple\r\n                        color=\"warning\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-3\"\r\n                       \r\n                      >\r\n                        Submit\r\n                      </Button.Ripple> */}\r\n\r\n                      <CustomButtonRipple\r\n                        color={\"primary\"}\r\n                        type={\"submit\"}\r\n                        className={\"mr-1 mt-3\"}\r\n                        name={\"Submit\"}\r\n                        permission={6}\r\n                        isDisabled={buttonStatus}\r\n                      />\r\n\r\n                  </FormGroup>\r\n\r\n                </Form>\r\n              </ModalBody>\r\n\r\n            </Modal>\r\n\r\n              </div>\r\n\r\n              </div>\r\n\r\n              <div className=\"table-responsive pt-3\">\r\n                <Table className=\"table-sm striped\" style={tableStyle}>\r\n                  <thead className=\"\">\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                      <th>#</th>\r\n                      <th>UAPP Id</th>\r\n                      <th>Name</th>\r\n                      <th>Provider</th>\r\n                      <th>Email</th>\r\n                      <th>Phone No</th>\r\n                      <th>Country</th>\r\n                      {/* <th>City</th>\r\n                         <th>Description</th>\r\n                         <th>Founded</th>\r\n                         <th>Global Ranking</th>\r\n                         <th>Part Time Work Information</th> */}\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {admissionOfficer?.map((officer, i) => (\r\n                      <tr key={i} style={{ textAlign: \"center\" }}>\r\n                        <th scope=\"row\">{1 + i}</th>\r\n                        <td>{officer?.sequenceId}</td>\r\n\r\n                        <td>{officer?.nameTittleName}{\" \"}{officer?.firstName}{\" \"}{officer?.lastName}</td>\r\n\r\n                        <td>\r\n                          {officer?.providerName}\r\n                        </td>\r\n\r\n                        <td>{officer?.email}</td>\r\n\r\n                        <td>{officer?.phoneNumber}</td>\r\n\r\n                        <td>{officer?.countryName} ({officer?.stateName})</td>\r\n\r\n                        <td>\r\n                          <ButtonGroup variant=\"text\">\r\n                        \r\n                          <ButtonForFunction\r\n                          func={() =>\r\n                            handlRedirectToAdmissionofficerDetails(officer?.id)\r\n                          }\r\n                          color={\"primary\"}\r\n                          className={\"mx-1 btn-sm\"}\r\n                          icon={<i className=\"fas fa-eye\"></i>}\r\n                          permission={6}\r\n                        />\r\n\r\n                            <ButtonForFunction\r\n                              func={() => handleUpdate(officer)}\r\n                              color={\"warning\"}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              icon={<i className=\"fas fa-edit\"></i>}\r\n                              permission={6}\r\n                              \r\n                            />\r\n      \r\n                            <ButtonForFunction\r\n                              color={\"danger\"}\r\n                              func={() => toggleDanger(officer)}\r\n                              className={\"mx-1 btn-sm\"}\r\n                              icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                              permission={6}\r\n                            />\r\n\r\n                        <Modal\r\n                          isOpen={deleteModal}\r\n                          toggle={closeDeleteModal}\r\n                          className=\"uapp-modal\"\r\n                        >\r\n                          <ModalBody>\r\n                            <p>\r\n                              Are You Sure to Delete <b>{deleteName}</b> ? Once Deleted it can't\r\n                              be Undone!\r\n                            </p>\r\n                          </ModalBody>\r\n\r\n                          <ModalFooter>\r\n                            <Button\r\n                              color=\"danger\"\r\n                              onClick={() => handleDeleteAdmissionOfficer(deleteId)}\r\n                              disabled={buttonStatus}\r\n                            >\r\n                              YES\r\n                            </Button>\r\n                            <Button color=\"primary\" onClick={closeDeleteModal}>NO</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n\r\n                          </ButtonGroup>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdmissionManagerProfile;\r\n"],"sourceRoot":""}