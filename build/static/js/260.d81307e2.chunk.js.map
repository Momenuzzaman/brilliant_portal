{"version":3,"sources":["views/forms/form-elements/switch/SwitchBasic.js","views/forms/form-elements/switch/SwitchEvent.js","views/forms/form-elements/switch/SwitchControlled.js","views/forms/form-elements/switch/SwitchDisabled.js","views/forms/form-elements/switch/SwitchCustomClass.js","views/forms/form-elements/switch/SwitchCustomIcons.js","views/forms/form-elements/switch/SwitchReactstrap.js","views/forms/form-elements/switch/SwitchReactstrapColors.js","views/forms/form-elements/switch/SwitchSizes.js","views/forms/form-elements/switch/Switch.js","components/core/breadCrumbs/BreadCrumb.js"],"names":["SwitchBasic","state","isChecked","Card","CardHeader","CardTitle","CardBody","className","defaultChecked","this","React","Component","SwitchEvent","handleSwitchChange","alert","onChange","SwitchControlled","setState","checked","name","value","Button","Ripple","color","onClick","size","SwitchDisabled","disabled","SwitchCustomClass","SwitchIcons","icons","style","position","top","unchecked","ReactstrapSwitch","CustomInput","type","id","inline","SwitchColors","SwitchSizes","Switch","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","md","sm","SwitchReactstrap","SwitchCustomIcons","BreadCrumbs","props","tag","to","breadCrumbParent2","breadCrumbParent3","active","left","right"],"mappings":"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","file":"static/js/260.d81307e2.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport Toggle from \"react-toggle\"\r\n\r\nclass SwitchBasic extends React.Component {\r\n  state = {\r\n    isChecked: false\r\n  }\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>React Toggle Basic</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <label className=\"react-toggle-wrapper d-inline-block align-middle\">\r\n            <Toggle defaultChecked={this.state.isChecked} />\r\n          </label>\r\n          <span className=\"label-text align-middle\">Adjecent Label Text</span>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SwitchBasic\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport Toggle from \"react-toggle\"\r\n\r\nclass SwitchEvent extends React.Component {\r\n  state = {\r\n    isChecked: false\r\n  }\r\n\r\n  handleSwitchChange = () => {\r\n    alert(\"Switched!\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>React Toggle Event</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <label className=\"react-toggle-wrapper\">\r\n            <Toggle\r\n              defaultChecked={this.state.isChecked}\r\n              onChange={this.handleSwitchChange}\r\n            />\r\n          </label>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SwitchEvent\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody, Button } from \"reactstrap\"\r\nimport Toggle from \"react-toggle\"\r\n\r\nclass SwitchControlled extends React.Component {\r\n  state = {\r\n    isChecked: false\r\n  }\r\n\r\n  handleSwitchChange = () => {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>React Toggle Controlled</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <label className=\"react-toggle-wrapper\">\r\n            <Toggle\r\n              checked={this.state.isChecked}\r\n              onChange={this.handleSwitchChange}\r\n              name=\"controlledSwitch\"\r\n              value=\"yes\"\r\n            />\r\n            <Button.Ripple\r\n              color=\"primary\"\r\n              onClick={this.handleSwitchChange}\r\n              size=\"sm\"\r\n            >\r\n              {this.state.isChecked ? \"True\" : \"False\"}\r\n            </Button.Ripple>\r\n          </label>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SwitchControlled\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport Toggle from \"react-toggle\"\r\n\r\nclass SwitchDisabled extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>React Toggle Disabled</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"d-inline-block mr-1\">\r\n            <label className=\"react-toggle-wrapper\">\r\n              <Toggle defaultChecked={false} disabled={true} />\r\n              <span className=\"label-text\">Diabled, Unchecked</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"d-inline-block\">\r\n            <label className=\"react-toggle-wrapper\">\r\n              <Toggle defaultChecked={true} disabled={true} />\r\n              <span className=\"label-text\">Diabled, Checked</span>\r\n            </label>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SwitchDisabled\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport Toggle from \"react-toggle\"\r\n\r\nclass SwitchCustomClass extends React.Component {\r\n  state = {\r\n    isChecked: false\r\n  }\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>React Toggle Custom Class</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <label className=\"react-toggle-wrapper w-25\">\r\n            <Toggle\r\n              defaultChecked={this.state.isChecked}\r\n              className=\"switch-danger\"\r\n            />\r\n            <span className=\"label-text\">Adjecent Label</span>\r\n          </label>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SwitchCustomClass\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport Toggle from \"react-toggle\"\r\nimport { Volume2, VolumeX } from \"react-feather\"\r\n\r\nclass SwitchIcons extends React.Component {\r\n  state = {\r\n    isChecked: false\r\n  }\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>React Toggle Icons</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"d-inline-block mr-1\">\r\n            <label className=\"react-toggle-wrapper\">\r\n              <Toggle\r\n                defaultChecked={this.state.isChecked}\r\n                icons={{\r\n                  checked: (\r\n                    <Volume2\r\n                      size={13}\r\n                      style={{ position: \"absolute\", top: \"-2px\" }}\r\n                    />\r\n                  ),\r\n                  unchecked: (\r\n                    <VolumeX\r\n                      size={13}\r\n                      style={{ position: \"absolute\", top: \"-2px\" }}\r\n                    />\r\n                  )\r\n                }}\r\n              />\r\n              <span className=\"label-text\">Custom Icons</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"d-inline-block\">\r\n            <label className=\"react-toggle-wrapper\">\r\n              <Toggle defaultChecked={this.state.isChecked} icons={false} />\r\n              <span className=\"label-text\">No Icons</span>\r\n            </label>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SwitchIcons\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody, CustomInput } from \"reactstrap\"\r\n\r\nclass ReactstrapSwitch extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Reactstrap Basic Switch</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"exampleCustomSwitch\"\r\n            name=\"customSwitch\"\r\n            inline\r\n          >\r\n            <span className=\"switch-label\">Toggle this switch element</span>\r\n          </CustomInput>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"exampleCustomSwitchdisabled\"\r\n            name=\"customSwitchdisabled\"\r\n            inline\r\n            disabled\r\n          >\r\n            <span className=\"switch-label\">Disabled switch element</span>\r\n          </CustomInput>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default ReactstrapSwitch\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody, CustomInput } from \"reactstrap\"\r\n\r\nclass SwitchColors extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Reactstrap Switch Colors</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"d-flex justify-content-start flex-wrap mt-1\">\r\n            <CustomInput\r\n              type=\"switch\"\r\n              className=\"mr-1 mb-2\"\r\n              id=\"primary\"\r\n              name=\"primary\"\r\n              inline\r\n            >\r\n              <span className=\"mb-0 switch-label\">Primary</span>\r\n            </CustomInput>\r\n            <CustomInput\r\n              className=\"custom-switch-success mr-1 mb-2\"\r\n              type=\"switch\"\r\n              id=\"success\"\r\n              name=\"success\"\r\n              inline\r\n            >\r\n              <span className=\"mb-0 switch-label\">Success</span>\r\n            </CustomInput>\r\n            <CustomInput\r\n              className=\"custom-switch-danger mr-1 mb-2\"\r\n              type=\"switch\"\r\n              id=\"danger\"\r\n              name=\"danger\"\r\n              inline\r\n            >\r\n              <span className=\"mb-0 switch-label\">Danger</span>\r\n            </CustomInput>\r\n            <CustomInput\r\n              className=\"custom-switch-info mr-1 mb-2\"\r\n              type=\"switch\"\r\n              id=\"info\"\r\n              name=\"info\"\r\n              inline\r\n            >\r\n              <span className=\"mb-0 switch-label\">Info</span>\r\n            </CustomInput>\r\n            <CustomInput\r\n              className=\"custom-switch-warning mr-1 mb-2\"\r\n              type=\"switch\"\r\n              id=\"warning\"\r\n              name=\"warning\"\r\n              inline\r\n            >\r\n              <span className=\"mb-0 switch-label\">Warning</span>\r\n            </CustomInput>\r\n            <CustomInput\r\n              className=\"custom-switch-dark mr-1 mb-2\"\r\n              type=\"switch\"\r\n              id=\"dark\"\r\n              name=\"dark\"\r\n              inline\r\n            >\r\n              <span className=\"mb-0 switch-label\">Dark</span>\r\n            </CustomInput>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SwitchColors\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody, CustomInput } from \"reactstrap\"\r\n\r\nclass SwitchSizes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Reactstrap Basic Switch</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CustomInput type=\"switch\" id=\"default\" name=\"default\" inline>\r\n            <span className=\"switch-label\">Default</span>\r\n          </CustomInput>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"medium\"\r\n            name=\"medium\"\r\n            inline\r\n            className=\"switch-md\"\r\n          >\r\n            <span className=\"switch-label\">medium</span>\r\n          </CustomInput>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"large\"\r\n            name=\"large\"\r\n            inline\r\n            className=\"switch-lg\"\r\n          >\r\n            <span className=\"switch-label\">large</span>\r\n          </CustomInput>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SwitchSizes\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport Breadcrumbs from \"../../../../components/core/breadCrumbs/BreadCrumb\"\r\nimport SwitchBasic from \"./SwitchBasic\"\r\nimport SwitchEvent from \"./SwitchEvent\"\r\nimport SwitchControlled from \"./SwitchControlled\"\r\nimport SwitchDisabled from \"./SwitchDisabled\"\r\nimport SwitchCustomClass from \"./SwitchCustomClass\"\r\nimport SwitchCustomIcons from \"./SwitchCustomIcons\"\r\nimport SwitchReactstrap from \"./SwitchReactstrap\"\r\nimport SwitchColors from \"./SwitchReactstrapColors\"\r\nimport SwitchSizes from \"./SwitchSizes\"\r\n\r\nimport \"react-toggle/style.css\"\r\nimport \"../../../../assets/scss/plugins/forms/switch/react-toggle.scss\"\r\n\r\nclass Switch extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Switch\"\r\n          breadCrumbParent=\"Form Elements\"\r\n          breadCrumbActive=\"Switch\"\r\n        />\r\n        <Row>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <SwitchReactstrap />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <SwitchSizes />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <SwitchColors />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <SwitchBasic />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <SwitchEvent />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <SwitchControlled />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <SwitchDisabled />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <SwitchCustomClass />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <SwitchCustomIcons />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Switch\r\n","import React from \"react\"\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from \"reactstrap\"\r\nimport { Home, Settings } from \"react-feather\"\r\nimport { NavLink } from \"react-router-dom\"\r\nclass BreadCrumbs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content-header row\">\r\n        <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n          <div className=\"row breadcrumbs-top\">\r\n            <div className=\"col-12\">\r\n              {this.props.breadCrumbTitle ? (\r\n                <h2 className=\"content-header-title float-left mb-0\">\r\n                  {this.props.breadCrumbTitle}\r\n                </h2>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\r\n                <Breadcrumb tag=\"ol\">\r\n                  <BreadcrumbItem tag=\"li\">\r\n                    <NavLink to=\"/\">\r\n                      <Home className=\"align-top\" size={15} />\r\n                    </NavLink>\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                    {this.props.breadCrumbParent}\r\n                  </BreadcrumbItem>\r\n                  {this.props.breadCrumbParent2 ? (\r\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                      {this.props.breadCrumbParent2}\r\n                    </BreadcrumbItem>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {this.props.breadCrumbParent3 ? (\r\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                      {this.props.breadCrumbParent3}\r\n                    </BreadcrumbItem>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <BreadcrumbItem tag=\"li\" active>\r\n                    {this.props.breadCrumbActive}\r\n                  </BreadcrumbItem>\r\n                </Breadcrumb>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\r\n          <div className=\"form-group breadcrum-right dropdown\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                className=\"btn-icon btn-round dropdown-toggle\"\r\n              >\r\n                <Settings\r\n                  size={14}\r\n                  style={{\r\n                    left: 0\r\n                  }}\r\n                />\r\n              </DropdownToggle>\r\n              <DropdownMenu tag=\"ul\" right>\r\n                <DropdownItem tag=\"li\">\r\n                  <NavLink className=\"text-dark w-100\" to=\"/Example\">\r\n                    Example\r\n                  </NavLink>\r\n                </DropdownItem>\r\n              \r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default BreadCrumbs\r\n"],"sourceRoot":""}