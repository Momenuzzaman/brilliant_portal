{"version":3,"sources":["views/SMS/Branches/IndividualComponent/Manager.js","views/SMS/Branches/IndividualComponent/PaginatedTables.js","views/SMS/Branches/Branch/BranchProfile.js","views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Components/LinkButton.js","views/SMS/Pagination/Pagination.jsx"],"names":["Manager","props","useState","branchManager","setBranchManager","id","permissions","success","setSuccess","JSON","parse","localStorage","getItem","useEffect","get","then","res","console","log","nameTittleId","Card","className","src","rootUrl","managerImageMedia","thumbnailUrl","alt","nameTittle","name","firstName","lastName","includes","permissionList","Update_Branch_Manager_info","LinkButton","url","tittle","email","phoneNumber","Add_New_Branch_Manager","to","Button","PaginatedTables","currentPage","setCurrentPage","dataPerPage","setDataPerPage","currentPage2","setCurrentPage2","dataPerPage2","setDataPerPage2","currentPage3","setCurrentPage3","dataPerPage3","setDataPerPage3","currentPage4","setCurrentPage4","dataPerPage4","setDataPerPage4","currentPage5","setCurrentPage5","dataPerPage5","setDataPerPage5","accountsManager","setAccountsManager","editor","setEditor","accountsOfficer","setAccountsOfficer","financeManager","setFinanceManager","complianceManager","setComplianceManager","entity","setEntity","entity2","setEntity2","entity3","setEntity3","entity4","setEntity4","entity5","setEntity5","callApi","setCallApi","dataSizeName","map","dsn","label","value","models","totalEntity","CardBody","options","onChange","opt","prev","Table","style","textAlign","acm","i","key","scope","Pagination","totalData","paginate","pageNumber","BranchProfile","history","useHistory","useToasts","addToast","useParams","branchInfo","setBranchInfo","CardHeader","onClick","push","Row","Col","md","branchCode","addressLine","country","state","ButtonForFunction","icon","color","type","permission","func","disable","disabled","AuthStr","body","axios","post","headers","response","status","Axios","put","target","activeStyle","PageIndex","TotalPages","PreviousPage","NextPage","totalpages","Math","ceil","startpage","endpage","pageNumbers","cursor","number","marginTop","paddingRight"],"mappings":"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","file":"static/js/234.69765745.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card } from 'reactstrap';\r\nimport { rootUrl } from '../../../../constants/constants';\r\nimport get from '../../../../helpers/get';\r\nimport { Image } from 'antd';\r\n\r\nimport LinkButton from '../../Components/LinkButton';\r\nimport { permissionList } from '../../../../constants/AuthorizationConstant';\r\nconst Manager = (props) => {\r\n\r\n    const [branchManager, setBranchManager] = useState({});\r\n    const {id, success,setSuccess} = props;\r\n    const permissions = JSON.parse(localStorage.getItem('permissions'));\r\n   \r\n\r\n    useEffect(()=>{\r\n        get(`BranchManager/GetbyBranch/${id}`).then((res) => {\r\n           \r\n            console.log('ManagerInfo',res);\r\n            setBranchManager(res);\r\n          });\r\n\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n                {branchManager?.nameTittleId && (\r\n              <Card>\r\n\r\n                {/* <div className=' pl-3 mt-2'> <span className='branch-title-style'>Branch Manager</span></div> */}\r\n\r\n                <div className=\"pl-3 mt-3 hedding-titel\">\r\n                <h5> <b>Branch Manager</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n\r\n\r\n                <div className=\"uapp-circle-image margin-top-minus mt-3\">\r\n                  <img className=\"p-1\" src={rootUrl+branchManager?.managerImageMedia?.thumbnailUrl} alt=\"provider_image\" />\r\n                </div>\r\n                <h5 className=\"pt-2 h3 text-center mb-4\">\r\n                  {\" \"}\r\n                  <span className='pr-1'>{branchManager?.nameTittle?.name}</span>\r\n                  <span className=\"pr-1\">{branchManager?.firstName}</span>\r\n                  <span className=\" pl-1\">{branchManager?.lastName}</span>\r\n                </h5>\r\n\r\n               {\r\n                permissions?.includes(permissionList.Update_Branch_Manager_info) ?\r\n                <>\r\n                 {\r\n                  !(branchManager?.id == 1 ) ? \r\n                  <div className=\"container text-center mb-4\">\r\n              \r\n                  <LinkButton\r\n                  name={'Edit'}\r\n                  url={`/updateBranchManagerInformation/${id}/${branchManager?.id}`}\r\n                  className={\"btn btn-primary px-lg-5 px-md-3 px-sm-1 py-2\"}\r\n                  \r\n                  />\r\n                </div>\r\n                :\r\n                null\r\n\r\n                }\r\n                </>\r\n                :\r\n                null\r\n               }\r\n\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center pb-3\">\r\n                    <h5 className=\"py-b\">\r\n                      <span>{branchManager?.tittle}</span>{\" \"}\r\n                    </h5>\r\n\r\n                    <h5 className=\"py-b\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.email}</span>{\" \"}\r\n                    </h5>\r\n                    <h5 className=\"\">\r\n                      {\" \"}\r\n                      <span>{branchManager?.phoneNumber}</span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </Card>\r\n            )}\r\n\r\n            {!branchManager.nameTittleId && (\r\n              <Card>\r\n                {\r\n                  permissions?.includes(permissionList.Add_New_Branch_Manager) ?\r\n                  <center>\r\n                    <div className=\"container py-3\">\r\n                  <Link to={`/addBranchManager/${id}`}>\r\n                    \r\n                    <Button className=\"btn btn-uapp-add \"\r\n                    // onClick={localStorage.removeItem('branchManagerId')}\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"fas fa-plus\"></i> Add Branch Manager{\" \"}\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n                  </center>\r\n                :\r\n                null\r\n                }\r\n              </Card>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Manager;","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardBody, Table } from 'reactstrap';\r\nimport get from '../../../../helpers/get';\r\nimport Select from \"react-select\";\r\nimport Pagination from '../../Pagination/Pagination';\r\n\r\nconst PaginatedTables = (props) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [dataPerPage, setDataPerPage] = useState(15);\r\n\r\n    const [currentPage2, setCurrentPage2] = useState(1);\r\n    const [dataPerPage2, setDataPerPage2] = useState(15);\r\n\r\n    const [currentPage3, setCurrentPage3] = useState(1);\r\n    const [dataPerPage3, setDataPerPage3] = useState(15);\r\n\r\n    const [currentPage4, setCurrentPage4] = useState(1);\r\n    const [dataPerPage4, setDataPerPage4] = useState(15);\r\n\r\n    const [currentPage5, setCurrentPage5] = useState(1);\r\n    const [dataPerPage5, setDataPerPage5] = useState(15);\r\n\r\n    const [accountsManager, setAccountsManager] = useState([]);\r\n    const [editor,setEditor] = useState([]);\r\n    const [accountsOfficer, setAccountsOfficer] = useState([]);\r\n    const [financeManager, setFinanceManager] = useState([]);\r\n    const [complianceManager, setComplianceManager] = useState([]);\r\n    const [entity,setEntity] = useState(0)\r\n    const [entity2,setEntity2] = useState(0)\r\n    const [entity3,setEntity3] = useState(0)\r\n    const [entity4,setEntity4] = useState(0)\r\n    const [entity5,setEntity5] = useState(0)\r\n\r\n\r\n    const [callApi, setCallApi] = useState(false);\r\n\r\n       // user select data per page\r\n  const dataSizeArr = [10, 15, 20, 30, 50, 100, 1000];\r\n  const dataSizeName = dataSizeArr.map((dsn) => ({ label: dsn, value: dsn }));\r\n\r\n    useEffect(()=>{\r\n\r\n        get(`BranchEmployee/AccountsManager?page=${currentPage}&pageSize=${dataPerPage}&branchId=${props?.id}`)\r\n        .then(res => {\r\n            setAccountsManager(res?.models);\r\n            setEntity(res?.totalEntity);\r\n        });\r\n\r\n        get(`BranchEmployee/Editor?page=${currentPage2}&pageSize=${dataPerPage2}&branchId=${props?.id}`)\r\n        .then(res => {\r\n            setEditor(res?.models);\r\n            setEntity2(res?.totalEntity);\r\n        })\r\n\r\n        get(`BranchEmployee/AccountsOfficer?page=${currentPage3}&pageSize=${dataPerPage3}&branchId=${props?.id}`)\r\n        .then(res => {\r\n            setAccountsOfficer(res?.models);\r\n            setEntity3(res?.totalEntity);\r\n        })\r\n\r\n        get(`BranchEmployee/FinanceManager?page=${currentPage4}&pageSize=${dataPerPage4}&branchId=${props?.id}`)\r\n        .then(res => {\r\n            setFinanceManager(res?.models);\r\n            setEntity4(res?.totalEntity);\r\n        })\r\n\r\n        get(`BranchEmployee/ComplianceManager?page=${currentPage5}&pageSize=${dataPerPage5}&branchId=${props?.id}`)\r\n        .then(res => {\r\n            setComplianceManager(res?.models);\r\n            setEntity5(res?.totalEntity);\r\n        })\r\n\r\n    },[dataPerPage, dataPerPage2, dataPerPage3, dataPerPage4, dataPerPage5, callApi, entity, entity2, entity3, entity4,entity5])\r\n\r\n\r\n    const selectDataSize = (value) => {\r\n    \r\n        setDataPerPage(value);\r\n        setCallApi((prev) => !prev);\r\n      };\r\n\r\n    const selectDataSize2 = (value) => {\r\n    \r\n        setDataPerPage2(value);\r\n        setCallApi((prev) => !prev);\r\n      };\r\n\r\n    const selectDataSize3 = (value) => {\r\n    \r\n        setDataPerPage3(value);\r\n        setCallApi((prev) => !prev);\r\n      };\r\n\r\n       //  change page\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n  const paginate2 = (pageNumber) => {\r\n    setCurrentPage2(pageNumber);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n  const paginate3 = (pageNumber) => {\r\n    setCurrentPage3(pageNumber);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n  const paginate4 = (pageNumber) => {\r\n    setCurrentPage4(pageNumber);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n  const paginate5 = (pageNumber) => {\r\n    setCurrentPage5(pageNumber);\r\n    setCallApi((prev) => !prev);\r\n  };\r\n\r\n    const selectDataSize4 = (value) => {\r\n    \r\n        setDataPerPage4(value);\r\n        setCallApi((prev) => !prev);\r\n      };\r\n\r\n    const selectDataSize5 = (value) => {\r\n    \r\n        setDataPerPage5(value);\r\n        setCallApi((prev) => !prev);\r\n      };\r\n\r\n   \r\n\r\n \r\n\r\n    return (\r\n        <div>\r\n\r\n            <Card>\r\n                <CardBody>\r\n\r\n                    <div className='d-flex justify-content-between'>\r\n                    <div className=\"hedding-titel\">\r\n                <h5> <b>Account Manager List</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"mr-2 mt-2\">Showing :</div>\r\n                    <div>\r\n                      <Select\r\n                        options={dataSizeName}\r\n                        value={{ label: dataPerPage, value: dataPerPage }}\r\n                        onChange={(opt) => selectDataSize(opt.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                    </div>\r\n\r\n                    {/* table */}\r\n                <div className=\"table-responsive mt-3\">\r\n              <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    \r\n                   <th>SL/NO</th> \r\n                   <th>Name</th> \r\n                   <th>Email</th> \r\n                   <th>Phone Number</th> \r\n                   \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {accountsManager?.map((acm, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                     <th scope=\"row\">{1 + i}</th> \r\n                      <td>{acm?.firstName}{' '}{acm?.lastName}</td>\r\n                      <td>{acm?.email}</td>\r\n                      <td>{acm?.phoneNumber}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n\r\n            <Pagination\r\n            dataPerPage={dataPerPage}\r\n            totalData={entity}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n          />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n                <CardBody>\r\n\r\n                    <div className='d-flex justify-content-between'>\r\n                    <div className=\"hedding-titel\">\r\n                <h5> <b>Editor List</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"mr-2 mt-2\">Showing :</div>\r\n                    <div>\r\n                      <Select\r\n                        options={dataSizeName}\r\n                        value={{ label: dataPerPage2, value: dataPerPage2 }}\r\n                        onChange={(opt) => selectDataSize2(opt.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                    </div>\r\n\r\n                    {/* table */}\r\n                <div className=\"table-responsive mt-3\">\r\n              <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    \r\n                   <th>SL/NO</th> \r\n                   <th>Name</th> \r\n                   <th>Email</th> \r\n                   <th>Phone Number</th> \r\n                   \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {editor?.map((acm, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                     <th scope=\"row\">{1 + i}</th> \r\n                      <td>{acm?.firstName}{' '}{acm?.lastName}</td>\r\n                      <td>{acm?.email}</td>\r\n                      <td>{acm?.phoneNumber}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n            <Pagination\r\n            dataPerPage={dataPerPage2}\r\n            totalData={entity2}\r\n            paginate={paginate2}\r\n            currentPage={currentPage2}\r\n          />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n                <CardBody>\r\n\r\n                    <div className='d-flex justify-content-between'>\r\n                    <div className=\"hedding-titel\">\r\n                <h5> <b>Account Officer List</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"mr-2 mt-2\">Showing :</div>\r\n                    <div>\r\n                      <Select\r\n                        options={dataSizeName}\r\n                        value={{ label: dataPerPage3, value: dataPerPage3 }}\r\n                        onChange={(opt) => selectDataSize3(opt.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                    </div>\r\n\r\n                    {/* table */}\r\n                <div className=\"table-responsive mt-3\">\r\n              <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    \r\n                   <th>SL/NO</th> \r\n                   <th>Name</th> \r\n                   <th>Email</th> \r\n                   <th>Phone Number</th> \r\n                   \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {accountsOfficer?.map((acm, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                     <th scope=\"row\">{1 + i}</th> \r\n                      <td>{acm?.firstName}{' '}{acm?.lastName}</td>\r\n                      <td>{acm?.email}</td>\r\n                      <td>{acm?.phoneNumber}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n            <Pagination\r\n            dataPerPage={dataPerPage3}\r\n            totalData={entity3}\r\n            paginate={paginate3}\r\n            currentPage={currentPage3}\r\n          />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n                <CardBody>\r\n\r\n                    <div className='d-flex justify-content-between'>\r\n                    <div className=\"hedding-titel\">\r\n                <h5> <b>Finance Manager List</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"mr-2 mt-2\">Showing :</div>\r\n                    <div>\r\n                      <Select\r\n                        options={dataSizeName}\r\n                        value={{ label: dataPerPage4, value: dataPerPage4 }}\r\n                        onChange={(opt) => selectDataSize4(opt.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                    </div>\r\n\r\n                    {/* table */}\r\n                <div className=\"table-responsive mt-3\">\r\n              <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    \r\n                   <th>SL/NO</th> \r\n                   <th>Name</th> \r\n                   <th>Email</th> \r\n                   <th>Phone Number</th> \r\n                   \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {financeManager?.map((acm, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                     <th scope=\"row\">{1 + i}</th> \r\n                      <td>{acm?.firstName}{' '}{acm?.lastName}</td>\r\n                      <td>{acm?.email}</td>\r\n                      <td>{acm?.phoneNumber}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n            <Pagination\r\n            dataPerPage={dataPerPage4}\r\n            totalData={entity4}\r\n            paginate={paginate4}\r\n            currentPage={currentPage4}\r\n          />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n                <CardBody>\r\n\r\n                    <div className='d-flex justify-content-between'>\r\n                    <div className=\"hedding-titel\">\r\n                <h5> <b>Compliance Manager List</b> </h5>\r\n                 \r\n                <div className=\"bg-h\"></div>\r\n                </div>\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"mr-2 mt-2\">Showing :</div>\r\n                    <div>\r\n                      <Select\r\n                        options={dataSizeName}\r\n                        value={{ label: dataPerPage5, value: dataPerPage5 }}\r\n                        onChange={(opt) => selectDataSize5(opt.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                    </div>\r\n\r\n                    {/* table */}\r\n                <div className=\"table-responsive mt-3\">\r\n              <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    \r\n                   <th>SL/NO</th> \r\n                   <th>Name</th> \r\n                   <th>Email</th> \r\n                   <th>Phone Number</th> \r\n                   \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {complianceManager?.map((acm, i) => (\r\n                    <tr key={i} style={{ textAlign: \"center\" }}>\r\n                     <th scope=\"row\">{1 + i}</th> \r\n                      <td>{acm?.firstName}{' '}{acm?.lastName}</td>\r\n                      <td>{acm?.email}</td>\r\n                      <td>{acm?.phoneNumber}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n            <Pagination\r\n            dataPerPage={dataPerPage5}\r\n            totalData={entity5}\r\n            paginate={paginate5}\r\n            currentPage={currentPage5}\r\n          />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaginatedTables;","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport get from \"../../../../helpers/get\";\r\nimport remove from \"../../../../helpers/remove\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Select from \"react-select\";\r\nimport post from \"../../../../helpers/post\";\r\n\r\nimport put from \"../../../../helpers/put\";\r\nimport Manager from \"../IndividualComponent/Manager\";\r\nimport Team from \"../IndividualComponent/Team\";\r\nimport AssignTeam from \"../IndividualComponent/AssignTeam\";\r\nimport PaginatedTables from \"../IndividualComponent/PaginatedTables\";\r\n\r\nconst BranchProfile = (props) => {\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n  const { id } = useParams();\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [branchInfo, setBranchInfo] = useState({});\r\n  const [branchManager, setBranchManager] = useState({});\r\n  \r\n  const [serialNum, setSerialNum] = useState(1);\r\n\r\n\r\n  const [branchTeamEmployee, setBranchTeamEmployee] = useState([]);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [teamInfo, setTeamInfo] = useState({});\r\n\r\n  const [success, setSuccess] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n\r\n  // add on close\r\n\r\n  // add on extra\r\n\r\n  // submitting form\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   setModalOpen(true);\r\n  //   // //  watch form data values\r\n  //   // for (var value of subData.values()) {\r\n\r\n  //   //  }\r\n\r\n  // }\r\n\r\n\r\n\r\n  //\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    get(`Branch/Get/${id}`).then((res) => {\r\n      \r\n      setBranchInfo(res);\r\n    });\r\n\r\n    \r\n  }, [id]);\r\n\r\n  const backToBranchList = () => {\r\n    history.push(\"/branchList\");\r\n  };\r\n  function closeModal(e) {\r\n    e.preventDefault();\r\n    setModalOpen(false);\r\n  }\r\n\r\n\r\n  const handleTeamUpdate = (id) => {\r\n    get(`BranchTeam/Get/${id}`).then((res) => {\r\n    \r\n      setTeamInfo(res);\r\n      setTeamName(res?.name);\r\n      setIsUpdate(true);\r\n      setModalOpen(true);\r\n    });\r\n  };\r\n  const handleTeamSubmit = (e) => {\r\n    e.preventDefault();\r\n    const teamData = new FormData(e.target);\r\n    // for(let  value of teamData.values()){\r\n   \r\n    // }\r\n    if (!isUpdate) {\r\n      post(`BranchTeam/Create`, teamData).then((action) => {\r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(action, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        history.push(\"/branchList\");\r\n      });\r\n    } else {\r\n      for (let val of teamData.values()) {\r\n        \r\n      }\r\n      put(`BranchTeam/Update`, teamData).then((res) => {\r\n        \r\n        setSuccess(!success);\r\n        setModalOpen(false);\r\n        addToast(res.data?.message, {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n\r\n        history.push(\"/branchList\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const functionimplement = () => {\r\n    setModalOpen(true);\r\n\r\n  };\r\n\r\n  const toggleDeleteTeam = (id) => {\r\n    localStorage.setItem(\"teamId\", id);\r\n    setDeleteModal(true);\r\n  };\r\n\r\n \r\n\r\n  // const handleDeletebranchTeam = () => {\r\n  //   const id = localStorage.getItem(\"teamId\");\r\n  //   remove(`BranchTeam/Delete/${id}`).then((res) => {\r\n  //     setDeleteModal(false);\r\n  //     addToast(res?.data?.message, {\r\n  //       appearance: \"error\",\r\n  //       autoDismiss: true,\r\n  //     });\r\n     \r\n  //   });\r\n  //    const newTeamData = branchTeam.filter((team) => team?.id != id);\r\n  \r\n  //     setBranchTeam(newTeamData);\r\n\r\n  // };\r\n\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Branch Details</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToBranchList} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i> Back to Branch List\r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n    \r\n\r\n      <div className=\"uapp-employee-profile\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"uapp-employee-profile-right\">\r\n              <div className=\"uapp-profile-CardHeader\">\r\n                {/* <div className=\"uapp-circle-image margin-top-minus\">\r\n                  <img  alt='provider_image' />\r\n                </div>     */}\r\n                <div className=\"py-3\">\r\n                  <h5 className=\"py-1\">\r\n                    Branch Name:{\" \"}\r\n                    <span className=\"text-primary\">{branchInfo?.name}{\" \"}{`(${branchInfo?.branchCode})`}</span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    Branch Address:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.addressLine}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Email:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.email}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                  <h5 className=\"py-1\">\r\n                    {\" \"}\r\n                    Phone Number:{\" \"}\r\n                    <span className=\"text-primary\">\r\n                      {branchInfo?.phoneNumber}\r\n                    </span>{\" \"}\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <CardBody>\r\n                <div>\r\n                  <ul className=\"uapp-ul text-center\">\r\n                    <h5>\r\n                      {\" \"}\r\n                      Country:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.country?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                    <h5>\r\n                      {\" \"}\r\n                      State:{\" \"}\r\n                      <span className=\"text-primary\">\r\n                        {branchInfo?.state?.name}\r\n                      </span>{\" \"}\r\n                    </h5>\r\n                  </ul>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"8\">\r\n\r\n            {/* <AssignTeam\r\n            id ={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            >\r\n\r\n            </AssignTeam> */}\r\n\r\n            <PaginatedTables\r\n            id={id}\r\n            />\r\n\r\n\r\n          \r\n          </Col>\r\n\r\n          <Col md=\"4\">\r\n            <Manager \r\n            id={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            ></Manager>\r\n        \r\n            {/* <Team\r\n            id={id}\r\n            success={success}\r\n            setSuccess={setSuccess}\r\n            \r\n            /> */}\r\n           \r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BranchProfile;\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst LinkButton = (props) => {\r\n    const {url, color, className, icon, permission, name, func,target, activeStyle} = props;\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n        <Link to={url} activeStyle ={activeStyle} target={target}>\r\n       \r\n            <Button color={color} className={className} onClick={func}>\r\n               {icon} {name}\r\n            </Button>\r\n         \r\n        </Link>\r\n        \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkButton;","import React from 'react'\r\nimport {Row,Col} from 'reactstrap'\r\nconst Pagination = ({ dataPerPage, totalData, paginate, currentPage }) => {\r\n\r\n    let PageIndex = 0;\r\n    let PageSize = 0;\r\n    let TotalCount = 0;\r\n    let TotalPages = 0;\r\n    let PreviousPage = 0;\r\n    let NextPage = 0;\r\n  \r\n    const totalpages = Math.ceil(totalData / dataPerPage);\r\n    let startpage = currentPage - 5;\r\n    let endpage = currentPage + 4;\r\n    if (startpage <= 0) {\r\n        endpage = endpage - (startpage - 1);\r\n        startpage = 1;\r\n    }\r\n    if (endpage > totalpages) {\r\n        endpage = totalpages;\r\n        if (endpage > 10) {\r\n            startpage = endpage - 9;\r\n        }\r\n    }\r\n    TotalCount = totalData;\r\n    PageIndex = currentPage;\r\n    PageSize = dataPerPage;\r\n    TotalPages = totalpages;\r\n    PreviousPage = startpage;\r\n    NextPage = endpage;\r\n\r\n\r\n    // const prev = currentPage > 1 ? (currentPage - 1) : 1;\r\n    // const last = Math.ceil(totalData / dataPerPage);\r\n    //     for (let i = 1; i <= Math.ceil(totalData/dataPerPage); i++) {\r\n\r\n    //         pageNumbers.push(i)\r\n    //     }\r\n\r\n    // let newPageNumbers;\r\n\r\n    // if(pageNumbers.length>10){\r\n    //  newPageNumbers = pageNumbers.slice(0,10)\r\n    // }\r\n    const pageNumbers = [];\r\n    const last = NextPage;\r\n    const next = (last === currentPage) ? currentPage : currentPage + 1;\r\n\r\n    const prev = PreviousPage;\r\n    \r\n    for (let i = PreviousPage; i <= NextPage; i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n        return (\r\n         <Row>\r\n             <Col md=\"6\">\r\n             <nav className=\"page navigation uapp-pagination\">\r\n                <ul className=\"pagination ml-2\">\r\n\r\n                    {\r\n                        PageIndex > 1 &&\r\n                        <>\r\n                  <li className=\"pagination-item pagination-First\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(1)} className=\"page-link\">\r\n                            First\r\n                        </p>\r\n                    </li>\r\n\r\n                    <li className=\"pagination-item\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(PageIndex - 1)} className=\"page-link\">\r\n                      <i className=\"fas fa-chevron-left\"></i>\r\n                        </p>\r\n                    </li>\r\n                        </>\r\n                    }\r\n\r\n                    \r\n\r\n                    {\r\n\r\n                        pageNumbers.map(number =>\r\n\r\n                            PageIndex==number ?\r\n                            <li key={number} className=\"pagination-item \">\r\n                                <p style={{ cursor: 'pointer' }} onClick={() => paginate(number)} className=\"page-link page-active\">\r\n                                    {number}\r\n                                </p>\r\n                            </li>\r\n                            :\r\n                            <li key={number} className=\"pagination-item\">\r\n                            <p style={{ cursor: 'pointer' }} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </p>\r\n                        </li>\r\n\r\n                        )\r\n                    }\r\n                    {\r\n                        PageIndex < TotalPages &&\r\n                        <>\r\n                        <li className=\"pagination-item\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(PageIndex + 1)} className=\"page-link\">\r\n                      <i className=\"fas fa-chevron-right\"></i>\r\n                        </p>\r\n                    </li>\r\n                  <li className=\"pagination-item pagination-Last\">\r\n                        <p style={{ cursor: 'pointer' }} onClick={() => paginate(TotalPages)} className=\"page-link\">\r\n                            Last\r\n                        </p>\r\n                    </li>\r\n                        </>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n             </Col>\r\n\r\n             <Col md=\"6\" style={{textAlign: 'right', marginTop: '1.5%', paddingRight: '2.5%'}}>\r\n                 <h5>Total Results Found: {totalData}</h5>\r\n             </Col>\r\n         </Row>\r\n        )\r\n}\r\n\r\nexport default Pagination"],"sourceRoot":""}