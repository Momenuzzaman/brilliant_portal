{"version":3,"sources":["helpers/post.js","helpers/put.js","views/SMS/Configuration/ExamTestType/ExamTestType.js"],"names":["url","body","authToken","Axios","post","rootUrl","res","response","status","history","push","put","ExamTestType","useHistory","useState","modalOpen","setModalOpen","deleteModal","setDeleteModal","success","setSuccess","examTestType","setExamTestType","examTestTypeValue","setExamTestTypeValue","addToast","useToasts","useEffect","get","then","action","console","log","catch","closeDeleteModal","localStorage","removeItem","closeModal","idVal","getItem","className","onClick","length","isOpen","toggle","onSubmit","e","preventDefault","subdata","FormData","target","data","message","appearance","autoDismiss","pathname","examTestTypeId","result","id","type","value","name","row","md","defaultValue","placeholder","onChange","style","display","justifyContent","color","subData","Ripple","textAlign","map","exam","i","key","scope","setItem","remove","newData","filter","extp","handleDeleteUniCountry"],"mappings":";i/MAOA,WAAoBA,GAApB,gGAAyBC,EAAzB,+BAAgC,GAAGC,EAAnC,+BAA+C,GAA/C,kBAKsBC,IAAMC,KAAN,UAAcC,KAAd,OAAwBL,GAAMC,EAAKC,GAAa,IALtE,cAKUI,EALV,gBAMiBA,EANjB,gFAUwC,OAA7B,2CAAOC,gBAAP,eAAiBC,SAChBC,IAAQC,KAAK,QAXzB,gE,sBAqBeN,I,i9MCrBf,WAAmBJ,GAAnB,8FAAwBC,EAAxB,+BAA+B,GAAGC,EAAlC,+BAA8C,GAA9C,kBAKsBC,IAAMQ,IAAN,UAAaN,KAAb,OAAuBL,GAAMC,EAAKC,GAAa,IALrE,cAKUI,EALV,gBAMiBA,EANjB,gFAUsC,MAA3B,KAAMC,SAASC,QACdC,IAAQC,KAAK,QAXzB,gE,sBAoBeC,I,kSCuTAC,UAnUM,WAEjB,IAAMH,EAAUI,cAEhB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAyCN,mBAAS,IAAlD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAAmDR,mBAAS,IAA5D,mBAAOS,EAAP,KAA2BC,EAA3B,KAEMC,EAAaC,sBAAbD,SASNE,qBAAU,WACXC,YAAI,sBAAsBC,MAAK,SAACC,GAE/BR,EAAgBQ,GAChBC,QAAQC,IAAI,eAAeF,MAGxBG,UAQL,CAACd,IAGC,IAaEe,EAAmB,WACrBhB,GAAe,GACfiB,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,sBAKtBC,EAAa,WACfrB,GAAa,GACbmB,aAAaC,WAAW,qBA+GpBE,EAAOH,aAAaI,QAAQ,2BAIhC,OACI,6BAEA,kBAAC,IAAD,CAAMC,UAAU,gBACV,kBAAC,IAAD,CAAYA,UAAU,eACpB,wBAAIA,UAAU,cAAd,kBACA,yBAAKA,UAAU,4BACb,0BAAMC,QAjJI,WACpBhC,EAAQC,KAAK,MAgJ6B8B,UAAU,cACvC,IACD,uBAAGA,UAAU,6BAFf,yBAQN,kBAAC,IAAD,KACA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAQA,UAAU,mBAAmBC,QAAS,kBAAMzB,GAAa,KAAjE,IAAyE,uBAAGwB,UAAU,gBAAtF,aACA,iCAAM,qCAAU,0BAAMA,UAAU,uBAAhB,OAAuCnB,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAcqB,QAA/D,8BAER,kBAAC,IAAD,KAEE,6BAEE,kBAAC,IAAD,CAAOC,OAAQ5B,EAAW6B,OAAQP,EAAYG,UAAU,cACtD,kBAAC,IAAD,2BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMK,SA5EH,SAACC,GAEpBA,EAAEC,iBAEF,IAAMC,EAAU,IAAIC,SAASH,EAAEI,QAI5B9C,YAAK,sBAAsB4C,GAASnB,MAAK,SAACC,GAAU,IAAD,MAElDC,QAAQC,IAAIF,GAEVV,GAAYD,GACZH,GAAa,GACbS,EAAQ,OAACK,QAAD,IAACA,GAAD,UAACA,EAAQqB,YAAT,aAAC,EAAcC,QAAS,CAC9BC,WAAY,UACZC,aAAa,IAEftC,GAAa,GACbP,EAAQC,KAAK,CACZ6C,SAAU,yBACVC,eAAc,OAAG1B,QAAH,IAAGA,GAAH,UAAGA,EAAQqB,YAAX,iBAAG,EAAcM,cAAjB,aAAG,EAAsBC,KAItClC,EAAqB,SAuDXc,EAEA,2BACAqB,KAAK,SACLC,MAAOtB,EACPuB,KAAK,KACLH,GAAG,OAOH,KAKA,kBAAC,IAAD,CAAWI,KAAG,EAACtB,UAAU,mCACvB,kBAAC,IAAD,CAAKuB,GAAG,KACN,iDAEF,kBAAC,IAAD,CAAKA,GAAG,KACN,kBAAC,IAAD,CACEJ,KAAK,OACLE,KAAK,OACLH,GAAG,OACHM,aAAczC,EACd0C,YAAY,wBACZC,SAAU,SAACpB,GAAD,OAAOtB,EAAqBsB,EAAEI,OAAOU,YAMrD,kBAAC,IAAD,CAAWpB,UAAU,kCAAkC2B,MAAO,CAAEC,QAAS,OAAQC,eAAgB,kBAE/F,kBAAC,IAAD,CAAQC,MAAM,SAAS9B,UAAU,YAAYC,QAASJ,GAAtD,SAGEC,EACA,kBAAC,IAAD,CAAQgC,MAAM,UAAU9B,UAAU,YAAYC,QAxJ3C,WAIzB,IAAM8B,EAAU,CACdb,GAAIpB,EACJuB,KAAMtC,GAORZ,YAAI,sBAAsB4D,GAAS1C,MAAK,SAACC,GAAW,IAAD,EACjDV,GAAYD,GACZH,GAAa,GACbS,EAAQ,OAACK,QAAD,IAACA,GAAD,UAACA,EAAQqB,YAAT,aAAC,EAAcC,QAAS,CAC9BC,WAAY,UACZC,aAAa,IAIhB9B,EAAqB,OAEtBW,aAAaC,WAAW,6BAgIF,UACA,kBAAC,IAAOoC,OAAR,CACEF,MAAM,UACNX,KAAK,SACLnB,UAAU,aAHZ,eAmBZ,yBAAKA,UAAU,oBACf,kBAAC,IAAD,CAAOA,UAAU,2BACjB,2BAAOA,UAAU,iBACb,wBAAI2B,MAAO,CAAEM,UAAW,WACtB,qCACA,qCACA,wBAAIjC,UAAU,eAAd,aACA,wCAGJ,sCAGInB,QAHJ,IAGIA,OAHJ,EAGIA,EAAcqD,KAAI,SAACC,EAAMC,GAAP,OAAa,wBAAIC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAMjB,IAC5C,wBAAIS,MAAO,CAAEM,UAAW,UAAYK,MAAM,OAAOF,EAAI,GACrD,mCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAMd,MACX,4BACA,kBAAC,IAAD,CAAQS,MAAM,UAAU7B,QAAS,kBA1HXiB,EA0HgDiB,EAAKjB,GAzH7F3B,QAAQC,IAAI0B,GACZvB,aAAa4C,QAAQ,0BAA0BrB,QAC/CjD,EAAQC,KAAK,0BAH0B,IAACgD,GA0H0DlB,UAAU,eACzF,IACD,uBAAGA,UAAU,eAAkB,MAG/B,4BACE,kBAAC,IAAD,CAAQA,UAAU,OAAOC,QAAS,kBA1PhCoB,EA0PkD,OAACc,QAAD,IAACA,OAAD,EAACA,EAAMd,KA1PpDH,EA0P6C,OAAaiB,QAAb,IAAaA,OAAb,EAAaA,EAAMjB,GAzPvFvB,aAAa4C,QAAQ,mBAAmBlB,GACxC1B,aAAa4C,QAAQ,oBAAoBrB,QAEzCxC,GAAe,GAJE,IAAC2C,EAAKH,GA0PqEY,MAAM,UAAS,uBAAG9B,UAAU,sBACxG,kBAAC,IAAD,CAAQC,QAAS,kBA/MjBU,EA+MmCwB,EA9MvD3D,GAAa,GACbQ,EAAoB,OAAC2B,QAAD,IAACA,OAAD,EAACA,EAAMU,WAE3B1B,aAAa4C,QAAQ,0BAA0B5B,EAAKO,IAJjC,IAACP,GA+M0CX,UAAU,OAAO8B,MAAM,WAAU,uBAAG9B,UAAU,iBAGxF,kBAAC,IAAD,CAAOG,OAAQ1B,EAAa2B,OAAQV,EAAkBM,UAAU,cAE9D,kBAAC,IAAD,KACE,6FAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ8B,MAAM,SAAS7B,QAAS,kBA9O7B,SAACiB,GAK3BsB,YAAO,uBAAD,OAAwBtB,IAAM7B,MAAK,SAACC,GACzCZ,GAAe,GACfE,GAAYD,GACXM,EAASK,EAAQ,CACfuB,WAAY,QACZC,aAAa,IAEfnB,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,wBAGzB,IAAM6C,EAAU5D,EAAa6D,QAAQ,SAAAC,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMzB,MAAOA,KAC1DpC,EAAgB2D,GAChBzD,EAAqB,IA4NuC4D,CAAuBjD,aAAaI,QAAQ,wBAAlF,OACA,kBAAC,IAAD,CAAQE,QAASP,GAAjB","file":"static/js/161.8099cc51.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function put(url, body = {},authToken = \"\"){\r\n\r\n\r\n   \r\n   try {\r\n    const res = await Axios.put(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error.response.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n \r\n\r\n        throw error\r\n   }\r\n}\r\n\r\nexport default put\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, ButtonGroup, Card, CardBody, CardHeader, Col, FormGroup, Input, Modal, ModalBody, ModalFooter, ModalHeader, Table, Form } from 'reactstrap';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\n\r\n\r\nimport get from '../../../../helpers/get';\r\nimport remove from '../../../../helpers/remove';\r\nimport put  from '../../../../helpers/put';\r\nimport post from '../../../../helpers/post';\r\nimport { ValueService } from 'ag-grid-community';\r\n\r\n\r\nconst ExamTestType = () => {\r\n\r\n    const history = useHistory();\r\n    \r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [examTestType , setExamTestType] = useState([]);\r\n    const [examTestTypeValue , setExamTestTypeValue] = useState('');\r\n\r\n  const { addToast } = useToasts();\r\n\r\n\r\n\r\n   \r\n  \r\n\r\n\r\n\r\n    useEffect(()=> {\r\n   get(`ExamTestType/Index`).then((action)=>{\r\n\r\n    setExamTestType(action);\r\n    console.log('ExamTestType',action);\r\n   \r\n  \r\n    }).catch();\r\n\r\n  \r\n\r\n    \r\n    \r\n\r\n\r\n},[success])\r\n\r\n\r\n    const backToDashboard = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    const toggleDanger = (name,id) => {\r\n        localStorage.setItem('examTestTypeName',name);\r\n        localStorage.setItem('examTestTypeValue',id);\r\n       \r\n        setDeleteModal(true)\r\n       }\r\n\r\n\r\n    // on Close Delete Modal\r\nconst closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    localStorage.removeItem('examTestTypeName');\r\n    localStorage.removeItem('examTestTypeValue');\r\n\r\n}\r\n\r\n// on Close Modal\r\nconst closeModal = () => {\r\n    setModalOpen(false);\r\n    localStorage.removeItem('updateUniCountry')\r\n\r\n}\r\n\r\nconst handleDeleteUniCountry = (id) => {\r\n\r\n\r\n  \r\n\r\n     remove(`ExamTestType/Delete/${id}`).then((action)=> {\r\n      setDeleteModal(false);\r\n      setSuccess(!success);\r\n       addToast(action, {\r\n         appearance: 'error',\r\n         autoDismiss: true,\r\n       })\r\n       localStorage.removeItem('examTestTypeName');\r\n       localStorage.removeItem('examTestTypeValue');\r\n    })\r\n    \r\n      const newData = examTestType.filter( extp => extp?.id !== id);\r\n      setExamTestType(newData);\r\n      setExamTestTypeValue('');\r\n  }\r\n\r\n  const handleUpdate = (data) => {\r\n    setModalOpen(true);\r\n    setExamTestTypeValue(data?.name);\r\n    \r\n    localStorage.setItem('updateExamTestTypeValue',data.id);\r\n \r\n    \r\n  \r\n   \r\n  }\r\n\r\n  const handleUpdateSubmit = () => {\r\n\r\n\r\n  \r\n    const subData = {\r\n      id: idVal,\r\n      name: examTestTypeValue\r\n    }\r\n  \r\n   \r\n\r\n   \r\n\r\n    put(`ExamTestType/Update`,subData).then((action)=> {\r\n      setSuccess(!success);\r\n      setModalOpen(false)\r\n      addToast(action?.data?.message, {\r\n        appearance: 'success',\r\n        autoDismiss: true,\r\n      })\r\n  \r\n  \r\n     setExamTestTypeValue('');\r\n    })\r\n    localStorage.removeItem('updateExamTestTypeValue')\r\n  \r\n  \r\n  }\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n  \r\n    const subdata = new FormData(e.target);\r\n\r\n\r\n  \r\n       post(`ExamTestType/Create`,subdata).then((action)=>{\r\n\r\n        console.log(action);\r\n  \r\n          setSuccess(!success)\r\n          setModalOpen(false)\r\n          addToast(action?.data?.message, {\r\n            appearance: 'success',\r\n            autoDismiss: true,\r\n          })\r\n          setModalOpen(false);\r\n          history.push({\r\n           pathname: '/examTestTypeAttribute',\r\n           examTestTypeId : action?.data?.result?.id \r\n          })\r\n        \r\n\r\n            setExamTestTypeValue('');\r\n      });\r\n\r\n     \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  }\r\n\r\n  const handleCheckExamTestTypeAttribute = (id) => {\r\n    console.log(id);\r\n    localStorage.setItem('examTestTypeAttributeId',id);\r\n    history.push('/examTestTypeAttribute');\r\n\r\n  }\r\n\r\n\r\n  const idVal =localStorage.getItem('updateExamTestTypeValue');\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        <Card className=\"uapp-card-bg\">\r\n              <CardHeader className=\"page-header\">\r\n                <h3 className=\"text-light\">Exam Test Type</h3>\r\n                <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard} className=\"text-light\">\r\n                    {\" \"}\r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                  </span>\r\n                </div>\r\n              </CardHeader>\r\n            </Card>\r\n\r\n            <Card>\r\n            <CardHeader>\r\n           \r\n              <Button className=\"btn btn-uapp-add\" onClick={() => setModalOpen(true)}> <i className=\"fas fa-plus\"></i>  Add New</Button>\r\n              <div> <b> Total <span className=\"badge badge-primary\">{examTestType?.length}</span> Exam Test Type Found   </b></div>\r\n            </CardHeader>\r\n            <CardBody>\r\n    \r\n              <div>\r\n    \r\n                <Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n                  <ModalHeader>Add Exam Test Type</ModalHeader>\r\n                  <ModalBody>\r\n                    <Form onSubmit={handleSubmit}>\r\n\r\n\r\n                    {\r\n                      idVal ? \r\n\r\n                      <input\r\n                      type='hidden'\r\n                      value={idVal}\r\n                      name='id'\r\n                      id='id'\r\n\r\n\r\n                      />\r\n\r\n                      :\r\n                      \r\n                      null\r\n\r\n\r\n                    }\r\n\r\n                      <FormGroup row className=\"has-icon-left position-relative\">\r\n                        <Col md=\"4\">\r\n                          <span>Exam Test Type</span>\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            defaultValue={examTestTypeValue}\r\n                            placeholder=\"Create exam test type\"\r\n                            onChange={(e) => setExamTestTypeValue(e.target.value)}\r\n                          />\r\n    \r\n                        </Col>\r\n                      </FormGroup>\r\n    \r\n                      <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n    \r\n                        <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={closeModal}>Close</Button>\r\n    \r\n                        {\r\n                          idVal ?\r\n                          <Button color=\"warning\" className=\"mr-1 mt-3\" onClick={handleUpdateSubmit}>Update</Button> :\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            className=\"mr-1 mt-3\"\r\n                             \r\n                          >\r\n                            Submit\r\n                          </Button.Ripple>\r\n    \r\n                      }\r\n    \r\n                      </FormGroup>\r\n    \r\n                    </Form>\r\n                  </ModalBody>\r\n    \r\n                </Modal>\r\n                \r\n              </div>\r\n              <div className=\"table-responsive\">\r\n              <Table className=\"table-sm table-bordered\" >\r\n              <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    <th>SL/NO</th>\r\n                    <th> Name</th>\r\n                    <th className=\"text-center\" >Attribute</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n    \r\n                  {\r\n                    examTestType?.map((exam, i) => <tr key={exam?.id}>\r\n                      <th style={{ textAlign: \"center\" }} scope=\"row\">{i + 1}</th>\r\n                      <td>{exam?.name}</td>\r\n                      <td>               \r\n                      <Button color=\"primary\" onClick={()=>handleCheckExamTestTypeAttribute(exam.id)} className=\"mx-1 btn-sm\">\r\n                      {\" \"}\r\n                      <i className=\"fas fa-eye\"></i>{\" \"}\r\n                    </Button>\r\n                      </td>\r\n                      <td>\r\n                        <Button className=\"mx-2\" onClick={() => toggleDanger(exam?.name, exam?.id)} color=\"danger\"><i className=\"fas fa-trash-alt\"></i></Button>\r\n                        <Button onClick={()=> handleUpdate(exam)} className=\"mx-2\" color=\"warning\"><i className=\"fas fa-edit\"></i></Button>\r\n    \r\n    \r\n                        <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n    \r\n                          <ModalBody>\r\n                            <p>Are You Sure to Delete this? Once Deleted it can't be Undone!</p>\r\n                          </ModalBody>\r\n    \r\n                          <ModalFooter>\r\n                            <Button color=\"danger\" onClick={() => handleDeleteUniCountry(localStorage.getItem('examTestTypeValue'))}>YES</Button>\r\n                            <Button onClick={closeDeleteModal}>NO</Button>\r\n                          </ModalFooter>\r\n    \r\n                        </Modal>\r\n                      </td>\r\n                    </tr>)\r\n                  }\r\n    \r\n                </tbody>\r\n              </Table>\r\n              </div>\r\n    \r\n            </CardBody>\r\n          </Card>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExamTestType;"],"sourceRoot":""}