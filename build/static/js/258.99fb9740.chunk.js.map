{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","views/SMS/Components/CustomButtonRipple.js","views/SMS/University/AddNewIntakes.jsx"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","CustomButtonRipple","isDisabled","Ripple","AddNewIntakes","useState","month","setMonth","year","setYear","useHistory","addToast","useToasts","monthTypeLabel","setMonthTypeLabel","monthTypeValue","setMonthTypeValue","yearTypeLabel","setYearTypeLabel","yearTypeValue","setYearTypeValue","montherror","setMonthError","yearError","setYearError","buttonStatus","setButtonStatus","permissions","JSON","parse","useEffect","get","then","catch","monthMenu","map","monthOptions","label","value","id","yearMenu","yearOptions","onSubmit","event","preventDefault","subData","FormData","target","action","data","message","appearance","autoDismiss","pathname","row","md","style","fontSize","options","onChange","opt","display","justifyContent","includes","permissionList","Add_subject_intake"],"mappings":"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","file":"static/js/258.99fb9740.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst CustomButtonRipple = ({isDisabled, className, icon,color, permission, type,url, func, name}) => {\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n         \r\n            <Button.Ripple\r\n               disabled={isDisabled}\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {name}\r\n            </Button.Ripple>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomButtonRipple;","import { FormGroup } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    ButtonGroup,\r\n  \r\n    Button,\r\n  \r\n    Input,\r\n  \r\n    Col,\r\n    Row,\r\n    Table,\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Form,\r\n  } from \"reactstrap\";\r\n  import { Link } from \"react-router-dom\";\r\n  import Select from \"react-select\";\r\n  import { useHistory, useLocation } from \"react-router\";\r\n  import get from '../../../helpers/get';\r\n  import post from '../../../helpers/post';\r\n  import { useToasts } from \"react-toast-notifications\";\r\n  import CustomButtonRipple from '../Components/CustomButtonRipple';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\nimport { permissionList } from '../../../constants/AuthorizationConstant';\r\n\r\nconst AddNewIntakes = () => {\r\n    const [month, setMonth] = useState([]);\r\n    const [year, setYear] = useState([]);\r\n    const history = useHistory();\r\n    const { addToast } = useToasts();\r\n\r\n    const [monthTypeLabel, setMonthTypeLabel]= useState('Select Month');\r\n    const [monthTypeValue, setMonthTypeValue] = useState(0);\r\n\r\n    const [yearTypeLabel, setYearTypeLabel]= useState('Select Year');\r\n    const [yearTypeValue, setYearTypeValue] = useState(0);\r\n\r\n    const [montherror,setMonthError] = useState('');\r\n    const [yearError, setYearError] = useState('');\r\n\r\n    \r\n  const [buttonStatus,setButtonStatus] = useState(false);\r\n\r\n    const permissions = JSON.parse(localStorage.getItem('permissions')); \r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        get('MonthDD/Index').then(res=> {\r\n          setMonth(res);\r\n        })\r\n        .catch();\r\n\r\n        get('YearDD/Index').then(res=> {\r\n            setYear(res);\r\n          })\r\n          .catch();\r\n      },[])\r\n\r\n      const monthMenu = month.map(monthOptions =>({label:monthOptions.name, value:monthOptions.id}));\r\n      const yearMenu = year.map(yearOptions =>({label:yearOptions.name, value:yearOptions.id}));\r\n\r\n\r\n\r\n    const handleCancel = () =>{\r\n        history.push(\"/intake\");\r\n    }\r\n\r\n    const selectMonthType = (label, value) => {\r\n      setMonthError('');\r\n        setMonthTypeLabel(label);\r\n        setMonthTypeValue(value); \r\n      }\r\n\r\n      const selectYearType = (label, value) => {\r\n        setYearError('');\r\n        setYearTypeLabel(label);\r\n        setYearTypeValue(value); \r\n      }\r\n\r\n      const handleSubmit = (event) =>{\r\n          event.preventDefault();\r\n          const subData = new FormData(event.target);\r\n        //   for (var value of subData.values()) {\r\n        //       console.log('valueeee',value);\r\n        //     }\r\n        if(monthTypeValue == 0){\r\n          setMonthError('Month is required');\r\n        }\r\n\r\n        else if(yearTypeValue == 0){\r\n          setYearError('Year is required');\r\n        }\r\n\r\n        else{\r\n          setButtonStatus(true);\r\n          post(`Intake/Create`, subData).then(action => {\r\n            setButtonStatus(false);\r\n            addToast(action?.data?.message, {\r\n                appearance: 'success',\r\n                autoDismiss: true,\r\n              })\r\n              history.push({\r\n                pathname: \"/intake\",\r\n              });\r\n          });\r\n        }\r\n      }\r\n\r\n       // redirect to intakeList\r\n       const backToIntakeList = () => {\r\n        history.push(\"/intake\");\r\n        };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card className=\"uapp-card-bg m-3 p-2\">\r\n                    <CardHeader className=\"page-header\">\r\n                        <h3 className=\"text-white my-auto\">Add Intake</h3>\r\n                        <div className=\"page-header-back-to-home\">\r\n                          <span onClick={backToIntakeList} className=\"text-white\">\r\n                            {\" \"}\r\n                            <i className=\"fas fa-arrow-circle-left\"></i> Back to Intake List\r\n                          </span>\r\n                        </div>\r\n                    </CardHeader>\r\n                </Card>\r\n\r\n                <Form onSubmit={handleSubmit} className='m-3'>\r\n                    <FormGroup row>\r\n                        <Col md=\"4\">\r\n                            <span>\r\n                               <span style={{color: '#1e98b0', fontSize: '14px'}}>Intake Month</span> <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                        <Select\r\n                            options={monthMenu}\r\n                            value={{ label: monthTypeLabel, value: monthTypeValue }}\r\n                            onChange={(opt) => selectMonthType(opt.label, opt.value)}\r\n                            name=\"monthId\"\r\n                            id=\"monthId\"\r\n                        />\r\n                        {\r\n                           <span className='text-danger'>{montherror}</span>\r\n                        }\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className='mt-3'>\r\n                        <Col md=\"4\">\r\n                            <span>\r\n                               <span style={{color: '#1e98b0', fontSize: '14px'}}>Intake Year</span> <span className=\"text-danger\">*</span>{\" \"}\r\n                            </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                        <Select\r\n                            options={yearMenu}\r\n                            value={{ label: yearTypeLabel, value: yearTypeValue }}\r\n                            onChange={(opt) => selectYearType(opt.label, opt.value)}\r\n                            name=\"yearId\"\r\n                            id=\"yearId\"\r\n                        />\r\n                        {\r\n                           <span className='text-danger'>{yearError}</span>\r\n                        }\r\n\r\n                        <FormGroup\r\n                            className=\"has-icon-left position-relative mt-3\"\r\n                            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                     >\r\n                       {/* <Link to=\"/intake\"> */}\r\n\r\n                         {\r\n                            permissions?.includes(permissionList?.Add_subject_intake)?\r\n                           <CustomButtonRipple\r\n                           type={\"submit\"}\r\n                           className={\"mr-1 mt-3 badge-primary mx-auto\"}\r\n                           name={\"Submit\"}\r\n                           isDisabled={buttonStatus}\r\n                         />\r\n                         :\r\n                         null\r\n\r\n                         }\r\n\r\n                       {/* </Link> */}\r\n\r\n                     </FormGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"d-flex justify-content-end align-items-end\">\r\n                            <div>\r\n\r\n                                <ButtonForFunction\r\n                                  func={handleCancel}\r\n                                  className={'mt-md-3'}\r\n                                  color={'danger'}\r\n                                  name={\"Cancel\"}\r\n                                  permission={6}\r\n                                />\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    \r\n                </Form>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewIntakes;"],"sourceRoot":""}