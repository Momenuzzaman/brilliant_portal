{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","views/SMS/Components/CustomButtonRipple.js","views/SMS/ReactTableConvertToXl/ReactTableConvertToXl.js","views/SMS/AdmissionOfficer/AssignOfficerUniversity.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","disable","onClick","disabled","AuthStr","localStorage","getItem","body","axios","post","rootUrl","headers","res","response","status","history","push","Axios","put","CustomButtonRipple","isDisabled","Ripple","defaultProps","id","buttonText","ReactHTMLTableToExcel","props","handleDownload","bind","document","getElementById","this","table","nodeType","nodeName","outerHTML","sheet","String","filename","context","worksheet","window","navigator","msSaveOrOpenBlob","fileData","blobObject","Blob","click","element","createElement","href","base64","format","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","Component","AssignOfficerUniversity","useHistory","permissions","JSON","parse","useState","loading","modalOpen","setModalOpen","dropdownOpen","setDropdownOpen","dropdownOpen1","setDropdownOpen1","providerUniList","setProviderUniList","uniLabel","setUniLabel","uniValue","setUniValue","uniError","setUniError","uniList","setUniList","success","setSuccess","radioIsAcceptHome","setRadioIsAcceptHome","radioIsAcceptUk","setRadioIsAcceptUk","radioIsAcceptInt","setRadioIsAcceptInt","deleteModal","setDeleteModal","undefined","selectedId","setSelectedId","managerUniName","setManagerUniName","managerUniId","setManagerUniId","checkSlNo","setCheckSlNo","checkName","setCheckName","checkType","setCheckType","checkAction","setCheckAction","buttonStatus","setButtonStatus","buttonStatus1","setButtonStatus1","admissionManager","setAdmissionManager","managerLabel","setManagerLabel","managerValue","setManagerValue","managerError","setManagerError","userType","useParams","providerId","managerId","useEffect","get","then","console","log","userTypes","AdmissionManager","addToast","useToasts","componentRef","useRef","universityMenu","useLocation","map","uni","label","value","admissionmanagerOptions","closeModal","onValueChangeIsAcceptHome","event","target","onValueChangeIsAcceptUk","onValueChangeIsAcceptInt","style","fontWeight","admissionOfficer","firstName","lastName","lg","md","sm","xs","includes","permissionList","Add_New_Admission_Officer_university","float","isOpen","toggle","prev","caret","trigger","content","current","check","inline","onChange","e","checked","handleCheckedSLNO","defaultChecked","handleCheckedName","handleCheckedType","handleCheckedAction","size","backgroundColor","onSubmit","preventDefault","subData","admissionOfficerId","universityId","isAcceptHome","isAcceptEU_UK","isAcceptInternational","subData1","data","isSuccess","message","appearance","autoDismiss","row","options","opt","htmlFor","display","justifyContent","ref","textAlign","width","i","key","scope","university","variant","Update_Admission_Officer_university_info","handleUpdate","Delete_Admission_Officer_university","toggleDanger","remove","action","handleDeletePermission"],"mappings":";8GAAA,4BAsCeA,IA/BW,SAAC,GAAuE,IAAtEC,EAAqE,EAArEA,UAAWC,EAA0D,EAA1DA,KAAKC,EAAqD,EAArDA,MAAmBC,GAAkC,EAA9CC,WAA8C,EAAlCD,MAAUE,GAAwB,EAA7BC,IAA6B,EAAxBD,MAAME,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,QAUhF,OACI,oCAGI,kBAAC,IAAD,CACGC,QAASJ,EACTH,MAAOA,EACPC,KAAMA,EACNH,UAAWA,EACXU,SAAUF,GAET,IACAP,EAAMM,EAAM,Q,s3MCxB5B,IAAMI,EAAUC,aAAaC,QAAQ,S,4CAErC,WAAoBP,GAApB,8FAAyBQ,EAAzB,+BAAgC,GAAhC,+BAAgD,GAAhD,kBAEsBC,IAAMC,KAAN,UAAcC,KAAd,OAAwBX,GAAOQ,EAAM,CACrDI,QAAS,CACP,cAAiBP,KAJzB,cAEUQ,EAFV,gBAOiBA,EAPjB,gFASoC,OAA5B,2CAAOC,gBAAP,eAAiBC,SACnBC,IAAQC,KAAK,QAVnB,gE,sBAiBeP,I,m6MCnBf,IAAML,EAAUC,aAAaC,QAAQ,S,4CACrC,WAAmBP,GAAnB,4FAAwBQ,EAAxB,+BAA+B,GAA/B,+BAA+C,GAA/C,kBAEsBU,IAAMC,IAAN,UAAaR,KAAb,OAAuBX,GAAOQ,EAAM,CACpDI,QAAS,CACP,cAAiBP,KAJzB,cAEUQ,EAFV,gBAOiBA,EAPjB,oK,sBAsBeM,I,8EC5Bf,4BA2BeC,IApBY,SAAC,GAA2E,IAA1EC,EAAyE,EAAzEA,WAAY3B,EAA6D,EAA7DA,UAAgBE,GAA6C,EAAlDD,KAAkD,EAA7CC,OAAmBC,GAA0B,EAAtCC,WAAsC,EAA1BD,MAAUE,GAAgB,EAArBC,IAAqB,EAAhBD,MAAME,EAAU,EAAVA,KAIxF,OACI,oCAEI,kBAAC,IAAOqB,OAAR,CACGlB,SAAUiB,EACVlB,QAASJ,EACTH,MAAOA,EACPC,KAAMA,EACNH,UAAWA,GAEVO,M,4FCRVsB,EAAe,CACnBC,GAAI,yBACJ9B,UAAW,kBACX+B,WAAY,WACZ9B,KAAM,uBAAGD,UAAU,uBAGfgC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,eAAiB,EAAKA,eAAeC,KAApB,gBAFL,E,kDAanB,WACE,IAAKC,SAKH,OAAO,KAGT,GACyD,IAAvDA,SAASC,eAAeC,KAAKL,MAAMM,OAAOC,UACa,UAAvDJ,SAASC,eAAeC,KAAKL,MAAMM,OAAOE,SAM1C,OAAO,KAGT,IAAMF,EAAQH,SAASC,eAAeC,KAAKL,MAAMM,OAAOG,UAClDC,EAAQC,OAAON,KAAKL,MAAMU,OAC1BE,EAAQ,UAAMD,OAAON,KAAKL,MAAMY,UAAxB,QAWRC,EAAU,CACdC,UAAWJ,GAAS,YACpBJ,SAIF,GAAIS,OAAOC,UAAUC,iBAAkB,CACrC,IAAMC,EAAW,CAAC,GAAD,OAEb,ubAFa,OAQZZ,EARY,mBAUXa,EAAa,IAAIC,KAAKF,GAK5B,OAJAf,SAASC,eAAe,6BAA6BiB,OAArDlB,EAA6D,WAC3DY,OAAOC,UAAUC,iBAAiBE,EAAYP,OAGzC,EAGT,IAAMU,EAAUP,OAAOZ,SAASoB,cAAc,KAW9C,OAVAD,EAAQE,KAnCI,wCAqCVzB,EAAsB0B,OACpB1B,EAAsB2B,OApCxB,2cAoCyCb,IAE3CS,EAAQK,SAAWf,EACnBT,SAAStB,KAAK+C,YAAYN,GAC1BA,EAAQD,QACRlB,SAAStB,KAAKgD,YAAYP,IAEnB,I,oBAGT,WACE,OASE,uBACEzB,GAAIQ,KAAKL,MAAMH,GACfrB,QAAS6B,KAAKJ,eACdlC,UAAWsC,KAAKL,MAAMjC,WAErBsC,KAAKL,MAAMhC,S,qBA/FlB,SAAc8D,GACZ,OAAOf,OAAOgB,KAAKC,SAASC,mBAAmBH,O,oBAGjD,SAAcA,EAAGI,GACf,OAAOJ,EAAEK,QAAQ,YAAY,SAACC,EAAGC,GAAJ,OAAUH,EAAEG,U,GAXTC,aA4GpCvC,EAAsBH,aAAeA,EAEtBG,O,wWC4xBAwC,UAx3BiB,WAAO,IAAD,QAE5BlD,EAAUmD,cACVC,EAAcC,KAAKC,MAAMhE,aAAaC,QAAQ,gBACpD,EAA8BgE,oBAAS,GAAvC,mBAAOC,EAAP,KACF,GADE,KACgCD,oBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAA0CL,oBAAS,GAAnD,mBAAOM,GAAP,KAAsBC,GAAtB,KACA,GAA8CP,mBAAS,IAAvD,qBAAOQ,GAAP,MAAwBC,GAAxB,MACA,GAAgCT,mBAAS,qBAAzC,qBAAOU,GAAP,MAAiBC,GAAjB,MACA,GAAgCX,mBAAS,GAAzC,qBAAOY,GAAP,MAAiBC,GAAjB,MACA,GAAgCb,oBAAS,GAAzC,qBAAOc,GAAP,MAAiBC,GAAjB,MAEA,GAA8Bf,mBAAS,IAAvC,qBAAOgB,GAAP,MAAgBC,GAAhB,MACA,GAA8BjB,oBAAS,GAAvC,qBAAOkB,GAAP,MAAgBC,GAAhB,MAEA,GAAkDnB,mBAAS,SAA3D,qBAAOoB,GAAP,MAA0BC,GAA1B,MACA,GAA8CrB,mBAAS,QAAvD,qBAAOsB,GAAP,MAAwBC,GAAxB,MACA,GAAgDvB,mBAAS,SAAzD,qBAAOwB,GAAP,MAAyBC,GAAzB,MAEA,GAAsCzB,oBAAS,GAA/C,qBAAO0B,GAAP,MAAoBC,GAApB,MAEA,GAAoC3B,wBAAS4B,GAA7C,qBAAOC,GAAP,MAAmBC,GAAnB,MAEA,GAA4C9B,mBAAS,IAArD,qBAAO+B,GAAP,MAAuBC,GAAvB,MACA,GAAwChC,mBAAS,GAAjD,qBAAOiC,GAAP,MAAqBC,GAArB,MAGA,GAAkClC,oBAAS,GAA3C,qBAAOmC,GAAP,MAAkBC,GAAlB,MACA,GAAkCpC,oBAAS,GAA3C,qBAAOqC,GAAP,MAAkBC,GAAlB,MACA,GAAkCtC,oBAAS,GAA3C,qBAAOuC,GAAP,MAAkBC,GAAlB,MACA,GAAsCxC,oBAAS,GAA/C,qBAAOyC,GAAP,MAAoBC,GAApB,MAEA,GAAuC1C,oBAAS,GAAhD,qBAAO2C,GAAP,MAAoBC,GAApB,MACA,GAAyC5C,oBAAS,GAAlD,qBAAO6C,GAAP,MAAqBC,GAArB,MACA,GAAgD9C,mBAAS,IAAzD,qBAAO+C,GAAP,MAAyBC,GAAzB,MACA,GAAwChD,mBAAS,4BAAjD,qBAAOiD,GAAP,MAAqBC,GAArB,MACA,GAAwClD,mBAAS,GAAjD,qBAAOmD,GAAP,MAAqBC,GAArB,MACA,GAAuCpD,mBAAS,IAAhD,qBAAOqD,GAAP,MAAoBC,GAApB,MACMC,GAAWxH,aAAaC,QAAQ,YAEtC,GAAiCwH,cAAzBC,GAAR,GAAQA,WAAYC,GAApB,GAAoBA,UAEpBC,qBAAU,WAERC,YAAI,oCAAD,OAAqCF,KACvCG,MAAK,SAAAvH,GACFwH,QAAQC,IAAI,SAASzH,GACrB2E,GAAW3E,MAGZiH,KAAQ,OAAIS,UAAJ,IAAIA,SAAJ,EAAIA,IAAWC,mBACxBL,YAAI,iDAAD,OAAkDF,KACpDG,MAAK,SAAAvH,GACJwH,QAAQC,IAAI,wBAAyBzH,GACrCmE,GAAmBnE,MAMvBsH,YAAI,uCAAD,OAAwCF,KAC1CG,MAAK,SAAAvH,GAEJ0G,GAAoB1G,QAKrB,CAACmH,GAAYC,GAAWxC,KAE3B,IAAQgD,GAAaC,sBAAbD,SACFE,GAAeC,mBASbC,IARSC,cAQQ/D,GAAgBgE,KAAI,SAACC,GAAD,MAAU,CACjDC,MAAK,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAK/I,KACZiJ,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAKxH,QAGV2H,GAA0B7B,GAAiByB,KAAI,SAACC,GAAD,MAAU,CAC3DC,MAAK,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAK/I,KACZiJ,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAKxH,OA6BR4H,GAAa,WACjB1E,GAAa,GACbQ,GAAY,qBACZE,GAAY,GACZiB,QAAcF,GACdP,GAAqB,SACrBE,GAAmB,QACnBE,GAAoB,SACpByB,GAAgB,4BAChBE,GAAgB,GAChBE,GAAgB,KAgBZwB,GAA4B,SAACC,GACjC1D,GAAqB0D,EAAMC,OAAOL,QAG9BM,GAA0B,SAACF,GAC/BxD,GAAmBwD,EAAMC,OAAOL,QAG5BO,GAA2B,SAACH,GAChCtD,GAAoBsD,EAAMC,OAAOL,QAyKrC,OACI,6BAEJ,kBAAC,IAAD,CAAMxJ,UAAU,gBACZ,kBAAC,IAAD,CAAYA,UAAU,eACpB,wBAAIA,UAAU,cAAd,4BACA,yBAAKA,UAAU,4BACb,0BAAMS,QA5PgB,WAC1Ba,EAAQC,KAAK,0BA2P4BvB,UAAU,cAC5C,IACD,uBAAGA,UAAU,6BAAgC,IAF/C,qCAUN,kBAAC,IAAD,CAAMA,UAAU,wBACd,kBAAC,IAAD,KAEE,yBAAKA,UAAU,mCACb,0BAAMgK,MAAO,CAACC,WAAY,SAA1B,gCAAuDpE,GAAQ,UAA/D,iBAAuD,EAAYqE,wBAAnE,aAAuD,EAA8BC,UAAW,IAAhG,UAAqGtE,GAAQ,UAA7G,iBAAqG,EAAYqE,wBAAjH,aAAqG,EAA8BE,WAIrI,kBAAC,IAAD,CAAKpK,UAAU,QACb,kBAAC,IAAD,CAAKqK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAEd,OAAX9F,QAAW,IAAXA,OAAA,EAAAA,EAAa+F,SAASC,IAAeC,uCACrC,kBAAC,IAAD,CACAtK,KAAM,kBAAM2E,GAAa,IACzBhF,UAAW,oBACXC,KAAM,uBAAGD,UAAU,gBACnBO,KAAM,qBACNH,WAAY,IAGd,MAIF,kBAAC,IAAD,CAAKiK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,yBAAKxK,UAAU,iCACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CACEA,UAAU,gBACVgK,MAAO,CAAEY,MAAO,SAChBC,OAAQ5F,EACR6F,OA9OC,WACb5F,GAAgB,SAAC6F,GAAD,OAAWA,OA+Of,kBAAC,IAAD,CAAgBC,OAAK,GACnB,uBAAGhL,UAAU,uBAEf,kBAAC,IAAD,CAAcA,UAAU,WACtB,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,kBAIb,kBAAC,IAAD,CACE8B,GAAG,wBACHS,MAAM,eACNM,SAAS,WACTF,MAAM,WACN1C,KAAM,uBAAGD,UAAU,yBAGvB,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CACEiL,QAAS,kBACP,2BACE,uBAAGjL,UAAU,sBAGjBkL,QAAS,kBAAMjC,GAAakC,gBAUxC,yBAAKnL,UAAU,IACb,kBAAC,IAAD,CACEA,UAAU,gBACVgK,MAAO,CAAEY,MAAO,SAChBC,OAAQ1F,GACR2F,OAlRE,WACd1F,IAAiB,SAAC2F,GAAD,OAAWA,OAmRhB,kBAAC,IAAD,CAAgBC,OAAK,GACnB,uBAAGhL,UAAU,iBAEf,kBAAC,IAAD,CAAcA,UAAU,WACtB,yBAAKA,UAAU,kCACb,kBAAC,IAAD,CAAKsK,GAAG,IAAItK,UAAU,IACpB,uBAAGA,UAAU,IAAb,UAGF,kBAAC,IAAD,CAAKsK,GAAG,IAAItK,UAAU,eACpB,kBAAC,IAAD,CAAWoL,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,WACLmL,SAAU,SAACC,IAvHT,SAACA,GACzBtE,GAAasE,EAAE1B,OAAO2B,SAuHEC,CAAkBF,IAEpBG,eAAgB1E,QAMxB,yBAAKhH,UAAU,kCACb,kBAAC,IAAD,CAAKsK,GAAG,IAAItK,UAAU,IACpB,uBAAGA,UAAU,IAAb,oBAGF,kBAAC,IAAD,CAAKsK,GAAG,IAAItK,UAAU,eACpB,kBAAC,IAAD,CAAWoL,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,WACLmL,SAAU,SAACC,IAvIT,SAACA,GACzBpE,GAAaoE,EAAE1B,OAAO2B,SAuIEG,CAAkBJ,IAEpBG,eAAgBxE,QAMxB,yBAAKlH,UAAU,kCACb,kBAAC,IAAD,CAAKsK,GAAG,IAAItK,UAAU,IACpB,uBAAGA,UAAU,IAAb,qBAGF,kBAAC,IAAD,CAAKsK,GAAG,IAAItK,UAAU,eACpB,kBAAC,IAAD,CAAWoL,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,WACLmL,SAAU,SAACC,IAvJT,SAACA,GACzBlE,GAAakE,EAAE1B,OAAO2B,SAuJEI,CAAkBL,IAEpBG,eAAgBtE,QAMxB,yBAAKpH,UAAU,kCACb,kBAAC,IAAD,CAAKsK,GAAG,IAAItK,UAAU,IACpB,uBAAGA,UAAU,IAAb,WAGF,kBAAC,IAAD,CAAKsK,GAAG,IAAItK,UAAU,eACpB,kBAAC,IAAD,CAAWoL,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,WACLmL,SAAU,SAACC,IAvKP,SAACA,GAC3BhE,GAAegE,EAAE1B,OAAO2B,SAuKAK,CAAoBN,IAEtBG,eAAgBpE,cAcpC,6BACE,kBAAC,IAAD,CACEuD,OAAQ9F,EACR+F,OAAQpB,GACR1J,UAAU,cACV8L,KAAK,MAEL,kBAAC,IAAD,CAAa9B,MAAO,CAAE+B,gBAAiB,YACrC,0BAAM/L,UAAU,cAAhB,eAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMgM,SApWK,SAACT,GACpBA,EAAEU,iBAEF,IAAMC,EAAU,CACdC,mBAAoB5D,GACpB6D,aAAc3G,GACd4G,aAAmC,QAArBpG,GACdqG,cAAkC,QAAnBnG,GACfoG,sBAA2C,QAApBlG,IAGnBmG,EAAW,CACf1K,GAAI4E,GACJyF,mBAAoB5D,GACpB6D,aAAc3G,GACd4G,aAAmC,QAArBpG,GACdqG,cAAkC,QAAnBnG,GACfoG,sBAA2C,QAApBlG,SAGNI,IAAfC,IACFe,IAAgB,GAChBhG,YAAI,oCAAqC+K,GAAU9D,MAAK,SAACvH,GAAS,IAAD,EAEP,EAcpD,GAfJsG,IAAgB,GACG,MAAZ,OAAHtG,QAAG,IAAHA,OAAA,EAAAA,EAAKE,SAAyC,IAArB,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAKsL,YAAL,eAAWC,aACnC3D,GAAQ,OAAC5H,QAAD,IAACA,GAAD,UAACA,EAAKsL,YAAN,aAAC,EAAWE,QAAS,CAC3BC,WAAY,UACZC,aAAa,IAEf7G,IAAYD,IACZf,GAAa,GACbQ,GAAY,qBACZE,GAAY,GACZiB,QAAcF,GACdP,GAAqB,SACrBE,GAAmB,QACnBE,GAAoB,UAGpByC,GAAQ,OAAC5H,QAAD,IAACA,GAAD,UAACA,EAAKsL,YAAN,aAAC,EAAWE,QAAS,CAC3BC,WAAY,QACZC,aAAa,QAMhBzE,KAAQ,OAAIS,UAAJ,IAAIA,SAAJ,EAAIA,IAAWC,kBAEP,IAAbrD,GACFG,IAAY,IAGZ6B,IAAgB,GAChBd,QAAcF,GACdzF,YAAK,oCAAqCkL,GAASxD,MAAK,SAACvH,GAAS,IAAD,EAEP,EAapD,GAdJsG,IAAgB,GACG,MAAZ,OAAHtG,QAAG,IAAHA,OAAA,EAAAA,EAAKE,SAAyC,IAArB,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAKsL,YAAL,eAAWC,aACnC3D,GAAQ,OAAC5H,QAAD,IAACA,GAAD,UAACA,EAAKsL,YAAN,aAAC,EAAWE,QAAS,CAC3BC,WAAY,UACZC,aAAa,IAEf7G,IAAYD,IACZf,GAAa,GACbQ,GAAY,qBACZE,GAAY,GACZQ,GAAqB,SACrBE,GAAmB,QACnBE,GAAoB,UAGpByC,GAAQ,OAAC5H,QAAD,IAACA,GAAD,UAACA,EAAKsL,YAAN,aAAC,EAAWE,QAAS,CAC3BC,WAAY,QACZC,aAAa,QAOD,IAAjB7E,GACDG,GAAgB,kCAEG,IAAb1C,GACNG,IAAY,IAGZ6B,IAAgB,GAChBd,QAAcF,GACdzF,YAAK,oCAAqCkL,GAASxD,MAAK,SAACvH,GAAS,IAAD,EAEP,EAapD,GAdJsG,IAAgB,GACG,MAAZ,OAAHtG,QAAG,IAAHA,OAAA,EAAAA,EAAKE,SAAyC,IAArB,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAKsL,YAAL,eAAWC,aACnC3D,GAAQ,OAAC5H,QAAD,IAACA,GAAD,UAACA,EAAKsL,YAAN,aAAC,EAAWE,QAAS,CAC3BC,WAAY,UACZC,aAAa,IAEf7G,IAAYD,IACZf,GAAa,GACbQ,GAAY,qBACZE,GAAY,GACZQ,GAAqB,SACrBE,GAAmB,QACnBE,GAAoB,UAGpByC,GAAQ,OAAC5H,QAAD,IAACA,GAAD,UAACA,EAAKsL,YAAN,aAAC,EAAWE,QAAS,CAC3BC,WAAY,QACZC,aAAa,UA0Pf,kBAAC,IAAD,CAAWC,KAAG,EAAC9M,UAAU,wCACPyG,IAAfC,GACC,oCAEG0B,KAAQ,OAAIS,UAAJ,IAAIA,SAAJ,EAAIA,IAAWC,kBACxB,KACA,oCACC,kBAAC,IAAD,CAAKwB,GAAG,KACP,kDACoB,IAClB,0BAAMtK,UAAU,eAAhB,KAAuC,MAI3C,kBAAC,IAAD,CAAKsK,GAAG,KACN,kBAAC,IAAD,CACEyC,QAAStD,GACTD,MAAO,CAAED,MAAOzB,GAAc0B,MAAOxB,IACrCsD,SAAU,SAAC0B,GAAD,OAjbAzD,EAkbeyD,EAAIzD,MAlbZC,EAkbmBwD,EAAIxD,MAjb5DzB,GAAgBwB,GAChBtB,GAAgBuB,GAChBrB,GAAgB,SAChBM,YAAI,4CAAD,OAA6CF,GAA7C,YAA0DiB,IAASd,MAAK,SAACvH,GAE5EmE,GAAmBnE,MANU,IAACoI,EAAOC,KAubnB,0BAAMxJ,UAAU,eAAekI,OAKjC,MAGN,kBAAC,IAAD,CAAW4E,KAAG,EAAC9M,UAAU,wCACPyG,IAAfC,GACC,oCACE,kBAAC,IAAD,CAAK4D,GAAG,KACN,gDACkB,IAChB,0BAAMtK,UAAU,eAAhB,KAAuC,MAI3C,kBAAC,IAAD,CAAKsK,GAAG,KACN,kBAAC,IAAD,CACEyC,QAAS5D,GACTK,MAAO,CAAED,MAAOhE,GAAUiE,MAAO/D,IACjC6F,SAAU,SAAC0B,GAAD,OAndNzD,EAodeyD,EAAIzD,MApdZC,EAodmBwD,EAAIxD,MAndtDhE,GAAY+D,GACZ7D,GAAY8D,QACZ5D,IAAY,GAHW,IAAC2D,EAAOC,GAsdXjJ,KAAK,eACLuB,GAAG,iBAGJ6D,IACC,0BAAM3F,UAAU,eAAhB,4BAMJ,MAGLyF,GAAW,EACV,oCACE,uBAAGzF,UAAU,QACX,kDAGF,kBAAC,IAAD,CAAW8M,KAAG,GACZ,kBAAC,IAAD,CAAKxC,GAAG,KACN,kDAGF,kBAAC,IAAD,CAAKA,GAAG,KACN,kBAAC,IAAD,CAAWc,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,QACL2B,GAAG,eACHwJ,SAAU3B,GACVpJ,KAAK,eACLiJ,MAAM,OACNgC,QAA8B,QAArBvF,KAEX,kBAAC,IAAD,CACEjG,UAAU,mBACVoL,OAAK,EACL6B,QAAQ,gBAHV,QASF,kBAAC,IAAD,CAAW7B,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,QACL2B,GAAG,eACHwJ,SAAU3B,GACVpJ,KAAK,eACLiJ,MAAM,QACNgC,QAA8B,SAArBvF,KAGX,kBAAC,IAAD,CACEjG,UAAU,mBACVoL,OAAK,EACL6B,QAAQ,gBAHV,SAWN,kBAAC,IAAD,CAAWH,KAAG,EAAC9M,UAAU,IACvB,kBAAC,IAAD,CAAKsK,GAAG,KACN,mDAGF,kBAAC,IAAD,CAAKA,GAAG,KACN,kBAAC,IAAD,CAAWc,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,QACL2B,GAAG,gBACHwJ,SAAUxB,GACVvJ,KAAK,gBACLiJ,MAAM,OACNgC,QAA4B,QAAnBrF,KAEX,kBAAC,IAAD,CACEnG,UAAU,mBACVoL,OAAK,EACL6B,QAAQ,iBAHV,QASF,kBAAC,IAAD,CAAW7B,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,QACL2B,GAAG,gBACHwJ,SAAUxB,GACVvJ,KAAK,gBACLiJ,MAAM,QACNgC,QAA4B,SAAnBrF,KAGX,kBAAC,IAAD,CACEnG,UAAU,mBACVoL,OAAK,EACL6B,QAAQ,iBAHV,SAWN,kBAAC,IAAD,CAAWH,KAAG,EAAC9M,UAAU,IACvB,kBAAC,IAAD,CAAKsK,GAAG,KACN,2DAGF,kBAAC,IAAD,CAAKA,GAAG,KACN,kBAAC,IAAD,CAAWc,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,QACL2B,GAAG,wBACHwJ,SAAUvB,GACVxJ,KAAK,wBACLiJ,MAAM,OACNgC,QAA6B,QAApBnF,KAEX,kBAAC,IAAD,CACErG,UAAU,mBACVoL,OAAK,EACL6B,QAAQ,yBAHV,QASF,kBAAC,IAAD,CAAW7B,OAAK,EAACC,QAAM,GACrB,kBAAC,IAAD,CACErL,UAAU,mBACVG,KAAK,QACL2B,GAAG,wBACHwJ,SAAUvB,GACVxJ,KAAK,wBACLiJ,MAAM,QACNgC,QAA6B,SAApBnF,KAGX,kBAAC,IAAD,CACErG,UAAU,mBACVoL,OAAK,EACL6B,QAAQ,yBAHV,UAWN,KAEJ,kBAAC,IAAD,CACEjN,UAAU,kCACVgK,MAAO,CAAEkD,QAAS,OAAQC,eAAgB,kBAE1C,kBAAC,IAAD,CACEjN,MAAM,SACNF,UAAU,YACVS,QAASiJ,IAHX,SAQA,kBAAC,IAAD,CACExJ,MAAO,UACPC,KAAM,SACNH,UAAW,YACXO,KAAM,SACNH,WAAY,EACZuB,WAAY6F,SAMtB,+BAGD1C,EACC,wBAAI9E,UAAU,eAAd,cAEA,yBAAKA,UAAU,mBAAmBoN,IAAKnE,IACrC,kBAAC,IAAD,CAAOnH,GAAG,eAAe9B,UAAU,2BACjC,2BAAOA,UAAU,iBACf,wBAAIgK,MAAO,CAAEqD,UAAW,WACrBrG,GAAY,qCAAiB,KAC7BE,GAAY,+CAA2B,KACvCE,GAAY,gDAA4B,KACxCE,GACC,wBAAI0C,MAAO,CAAEsD,MAAO,MAAQtN,UAAU,eAAtC,UAGE,OAGR,sCACG6F,SADH,IACGA,QADH,EACGA,GAASwD,KAAI,SAACC,EAAKiE,GAAN,aACZ,wBAAIC,IAAG,OAAElE,QAAF,IAAEA,OAAF,EAAEA,EAAKxH,GAAIkI,MAAO,CAAEqD,UAAW,WACnCrG,GAAY,wBAAIyG,MAAM,OAAOF,EAAI,GAAU,KAE3CrG,GAAY,mCAAKoC,QAAL,IAAKA,GAAL,UAAKA,EAAKoE,kBAAV,aAAK,EAAiBnN,MAAa,KAC/C6G,GACC,6BACyB,KAAnB,OAAHkC,QAAG,IAAHA,OAAA,EAAAA,EAAK+C,cAAL,QAAuC,KAAM,KACtB,KAApB,OAAH/C,QAAG,IAAHA,OAAA,EAAAA,EAAKgD,eAAL,SAAyC,KAAM,KAChB,KAA5B,OAAHhD,QAAG,IAAHA,OAAA,EAAAA,EAAKiD,uBACF,gBACA,MACmB,KAAnB,OAAHjD,QAAG,IAAHA,OAAA,EAAAA,EAAK+C,gBACiB,KAApB,OAAH/C,QAAG,IAAHA,OAAA,EAAAA,EAAKgD,iBAC0B,KAA5B,OAAHhD,QAAG,IAAHA,OAAA,EAAAA,EAAKiD,uBACD,gBACA,MAEJ,KAEHjF,GACC,wBAAI0C,MAAO,CAAEsD,MAAO,MAAQtN,UAAU,eACpC,kBAAC,IAAD,CAAa2N,QAAQ,SAUR,OAAXjJ,QAAW,IAAXA,OAAA,EAAAA,EAAa+F,SAASC,IAAekD,2CACrC,kBAAC,IAAD,CACAvN,KAAM,kBA5fP,SAACqN,GAAgB,IAAD,IACnC1I,GAAa,GACbQ,GAAW,OAACkI,QAAD,IAACA,GAAD,UAACA,EAAYA,kBAAb,aAAC,EAAwBnN,MACpCmF,GAAW,OAACgI,QAAD,IAACA,GAAD,UAACA,EAAYA,kBAAb,aAAC,EAAwB5L,IACpCoE,GAAqB,GAAD,cAAIwH,QAAJ,IAAIA,OAAJ,EAAIA,EAAYrB,eACpCjG,GAAmB,GAAD,cAAIsH,QAAJ,IAAIA,OAAJ,EAAIA,EAAYpB,gBAClChG,GAAoB,GAAD,cAAIoH,QAAJ,IAAIA,OAAJ,EAAIA,EAAYnB,wBACnC5F,GAAa,OAAC+G,QAAD,IAACA,OAAD,EAACA,EAAY5L,IAqfM+L,CAAavE,IACzBpJ,MAAO,UACPF,UAAW,cACXC,KAAM,uBAAGD,UAAU,gBACnBI,WAAY,IAGd,MAIa,OAAXsE,QAAW,IAAXA,OAAA,EAAAA,EAAa+F,SAAb,OAAsBC,UAAtB,IAAsBA,SAAtB,EAAsBA,IAAgBoD,sCACtC,kBAAC,IAAD,CACA5N,MAAO,SACPG,KAAM,kBAjiBP,SAACiE,GAAO,IAAD,EAC1ByC,GAAe,OAACzC,QAAD,IAACA,OAAD,EAACA,EAAGxC,IACnB+E,GAAiB,OAACvC,QAAD,IAACA,GAAD,UAACA,EAAGoJ,kBAAJ,aAAC,EAAenN,MACjCiG,IAAe,GA8hBiBuH,CAAazE,IACzBtJ,UAAW,cACXC,KAAM,uBAAGD,UAAU,qBACnBI,WAAY,IAGd,KAGE,kBAAC,IAAD,CACEyK,OAAQtE,GACRuE,OAAQ,kBAAMtE,IAAgBD,KAC9BvG,UAAU,cAEV,kBAAC,IAAD,KACE,yDAC8B,IAC5B,2BAAI4G,IAFN,wCAOF,kBAAC,IAAD,KAEA,kBAAC,IAAD,CACIlG,SAAUgH,GACVxH,MAAM,SACNO,QAAS,kBAtjBN,SAACqG,GAC9Ba,IAAiB,GACGqG,YAAO,qCAAD,OACalH,IACrC4B,MAAK,SAACuF,GACNtG,IAAiB,GACjBnB,IAAe,GACfR,IAAYD,IACZgD,GAASkF,EAAQ,CACfrB,WAAY,QACZC,aAAa,IAEf9F,GAAgB,GAChBF,GAAkB,OA0iBQqH,CAAuBpH,MAJ7B,OAUE,kBAAC,IAAD,CAEErG,QAAS,WACP+F,IAAe,GACfO,GAAgB,GAChBF,GAAkB,MALtB,UAgBN","file":"static/js/233.6957188b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name,disable}) => {\r\n    // const {className, icon} = props;\r\n\r\n \r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n               disabled={disable}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\n\r\nasync function post(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await axios.post(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        'authorization': AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    if (error?.response?.status === 404) {\r\n      history.push(\"/404\");\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default post;\r\n","import Axios from \"axios\";\r\n\r\nimport history from \"./history\";\r\nimport { rootUrl } from \"../constants/constants\";\r\n\r\nconst AuthStr = localStorage.getItem(\"token\");\r\nasync function put(url, body = {}, authToken = \"\") {\r\n  try {\r\n    const res = await Axios.put(`${rootUrl}${url}`, body, {\r\n      headers: {\r\n        \"authorization\": AuthStr,\r\n      },\r\n    });\r\n    return await res;\r\n  } catch (error) {\r\n    return error;\r\n    // if (error.response.status === 404) {\r\n    //   history.push(\"/404\");\r\n      \r\n    // }\r\n    // else if(error.response.status === 400){\r\n    //   history.push('/400')\r\n    // }\r\n\r\n    // throw error;\r\n  }\r\n}\r\n\r\nexport default put;\r\n","import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst CustomButtonRipple = ({isDisabled, className, icon,color, permission, type,url, func, name}) => {\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n         \r\n            <Button.Ripple\r\n               disabled={isDisabled}\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {name}\r\n            </Button.Ripple>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomButtonRipple;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst propTypes = {\r\n  table: PropTypes.string.isRequired,\r\n  filename: PropTypes.string.isRequired,\r\n  sheet: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  className: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"button-download-as-xls\",\r\n  className: \"button-download\",\r\n  buttonText: \"Download\",\r\n  icon: <i className=\"fas fa-file-excel\"></i>,\r\n};\r\n\r\nclass ReactHTMLTableToExcel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDownload = this.handleDownload.bind(this);\r\n  }\r\n\r\n  static base64(s) {\r\n    return window.btoa(unescape(encodeURIComponent(s)));\r\n  }\r\n\r\n  static format(s, c) {\r\n    return s.replace(/{(\\w+)}/g, (m, p) => c[p]);\r\n  }\r\n\r\n  handleDownload() {\r\n    if (!document) {\r\n      if (process.env.NODE_ENV !== \"production\") {\r\n        console.error(\"Failed to access document object\");\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      document.getElementById(this.props.table).nodeType !== 1 ||\r\n      document.getElementById(this.props.table).nodeName !== \"TABLE\"\r\n    ) {\r\n      if (process.env.NODE_ENV !== \"production\") {\r\n        console.error(\"Provided table property is not html table element\");\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    const table = document.getElementById(this.props.table).outerHTML;\r\n    const sheet = String(this.props.sheet);\r\n    const filename = `${String(this.props.filename)}.xls`;\r\n\r\n    const uri = \"data:application/vnd.ms-excel;base64,\";\r\n    const template =\r\n      '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' +\r\n      'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' +\r\n      'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' +\r\n      \"lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>\" +\r\n      \"</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></\" +\r\n      \"xml><![endif]--></head><body>{table}</body></html>\";\r\n\r\n    const context = {\r\n      worksheet: sheet || \"Worksheet\",\r\n      table,\r\n    };\r\n\r\n    // If IE11\r\n    if (window.navigator.msSaveOrOpenBlob) {\r\n      const fileData = [\r\n        `${\r\n          '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' +\r\n          'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' +\r\n          'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' +\r\n          \"lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>\" +\r\n          \"</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></\" +\r\n          \"xml><![endif]--></head><body>\"\r\n        }${table}</body></html>`,\r\n      ];\r\n      const blobObject = new Blob(fileData);\r\n      document.getElementById(\"react-html-table-to-excel\").click()(() => {\r\n        window.navigator.msSaveOrOpenBlob(blobObject, filename);\r\n      });\r\n\r\n      return true;\r\n    }\r\n\r\n    const element = window.document.createElement(\"a\");\r\n    element.href =\r\n      uri +\r\n      ReactHTMLTableToExcel.base64(\r\n        ReactHTMLTableToExcel.format(template, context)\r\n      );\r\n    element.download = filename;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //   <button\r\n      //     id={this.props.id}\r\n      //     className={this.props.className}\r\n      //     type=\"button\"\r\n      //     onClick={this.handleDownload}\r\n      //   >\r\n      //     {this.props.buttonText}\r\n      //   </button>\r\n      <p\r\n        id={this.props.id}\r\n        onClick={this.handleDownload}\r\n        className={this.props.className}\r\n      >\r\n        {this.props.icon}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nReactHTMLTableToExcel.propTypes = propTypes;\r\nReactHTMLTableToExcel.defaultProps = defaultProps;\r\n\r\nexport default ReactHTMLTableToExcel;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    Label,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Input,\r\n    Row,\r\n    Table,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n  } from \"reactstrap\";\r\n\r\nimport post from '../../../helpers/post';\r\nimport put from '../../../helpers/put';\r\nimport remove from '../../../helpers/remove';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\nimport ReactTableConvertToXl from \"../ReactTableConvertToXl/ReactTableConvertToXl\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Select from \"react-select\";\r\nimport CustomButtonRipple from '../Components/CustomButtonRipple';\r\nimport get from '../../../helpers/get';\r\nimport { permissionList } from '../../../constants/AuthorizationConstant';\r\nimport { userTypes } from '../../../constants/userTypeConstant';\r\n\r\nconst AssignOfficerUniversity = () => {\r\n\r\n    const history = useHistory();\r\n    const permissions = JSON.parse(localStorage.getItem('permissions'));\r\n    const [loading, setLoading] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownOpen1, setDropdownOpen1] = useState(false);\r\n  const [providerUniList, setProviderUniList] = useState([]);\r\n  const [uniLabel, setUniLabel] = useState(\"Select University\");\r\n  const [uniValue, setUniValue] = useState(0);\r\n  const [uniError, setUniError] = useState(false);\r\n\r\n  const [uniList, setUniList] = useState([]);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [radioIsAcceptHome, setRadioIsAcceptHome] = useState(\"false\");\r\n  const [radioIsAcceptUk, setRadioIsAcceptUk] = useState(\"true\");\r\n  const [radioIsAcceptInt, setRadioIsAcceptInt] = useState(\"false\");\r\n\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n\r\n  const [selectedId, setSelectedId] = useState(undefined);\r\n\r\n  const [managerUniName, setManagerUniName] = useState(\"\");\r\n  const [managerUniId, setManagerUniId] = useState(0);\r\n\r\n  // for hide/unhide column\r\n  const [checkSlNo, setCheckSlNo] = useState(true);\r\n  const [checkName, setCheckName] = useState(true);\r\n  const [checkType, setCheckType] = useState(true);\r\n  const [checkAction, setCheckAction] = useState(true);\r\n\r\n  const [buttonStatus,setButtonStatus] = useState(false);\r\n  const [buttonStatus1,setButtonStatus1] = useState(false);\r\n  const [admissionManager, setAdmissionManager] = useState([]);\r\n  const [managerLabel, setManagerLabel] = useState('Select Admission Manager');\r\n  const [managerValue, setManagerValue] = useState(0);\r\n  const [managerError,setManagerError] = useState('');\r\n  const userType = localStorage.getItem('userType');\r\n\r\n  const { providerId, managerId} = useParams();\r\n\r\n  useEffect(() => {\r\n    \r\n    get(`AdmissionOfficerUniversity/Index/${managerId}`)\r\n    .then(res => {\r\n        console.log('second',res);\r\n        setUniList(res);\r\n    })\r\n\r\n    if(userType == userTypes?.AdmissionManager){\r\n      get(`AdmissionManagerUniversityDD/AdmissionManager/${managerId}`)\r\n      .then(res => {\r\n        console.log('Hello University List', res);\r\n        setProviderUniList(res);\r\n      })\r\n    }\r\n\r\n    \r\n\r\n    get(`AdmissionManagerDD/AdmissionOfficer/${managerId}`)\r\n    .then(res => {\r\n      \r\n      setAdmissionManager(res);\r\n    })\r\n\r\n\r\n\r\n  }, [providerId, managerId, success]);\r\n\r\n  const { addToast } = useToasts();\r\n  const componentRef = useRef();\r\n  const location = useLocation();\r\n\r\n\r\n    const  backToOfficerDetails = () => {\r\n        history.push('/admissionOfficerList');\r\n\r\n    }\r\n\r\n    const universityMenu = providerUniList.map((uni) => ({\r\n        label: uni?.name,\r\n        value: uni?.id,\r\n      }));\r\n\r\n    const admissionmanagerOptions = admissionManager.map((uni) => ({\r\n        label: uni?.name,\r\n        value: uni?.id,\r\n      }));\r\n    \r\n      const selectUniversity = (label, value) => {\r\n        setUniLabel(label);\r\n        setUniValue(value);\r\n        setUniError(false);\r\n      };\r\n\r\n      const selectAdmissionManager = (label, value) => {\r\n        setManagerLabel(label);\r\n        setManagerValue(value);\r\n        setManagerError('');\r\n        get(`AdmissionManagerUniversityDD/systemAdmin/${managerId}/${value}`).then((res) => {\r\n     \r\n        setProviderUniList(res);\r\n    \r\n    });\r\n      };\r\n    \r\n      const backToProviderDetails = () => {\r\n        if (location.managerList != undefined) {\r\n          history.push(`/admissionManagerList`);\r\n        } else {\r\n          history.push(`/providerDetails/${providerId}`);\r\n        }\r\n      };\r\n    \r\n      // on Close Modal\r\n      const closeModal = () => {\r\n        setModalOpen(false);\r\n        setUniLabel(\"Select University\");\r\n        setUniValue(0);\r\n        setSelectedId(undefined);\r\n        setRadioIsAcceptHome(\"false\");\r\n        setRadioIsAcceptUk(\"true\");\r\n        setRadioIsAcceptInt(\"false\");\r\n        setManagerLabel('Select Admission Manager');\r\n        setManagerValue(0);\r\n        setManagerError('');\r\n      };\r\n    \r\n      // toggle dropdown\r\n      const toggle = () => {\r\n        setDropdownOpen((prev) => !prev);\r\n      };\r\n    \r\n      // toggle1 dropdown\r\n      const toggle1 = () => {\r\n        setDropdownOpen1((prev) => !prev);\r\n      };\r\n    \r\n    \r\n    \r\n      // on change radio button starts here\r\n      const onValueChangeIsAcceptHome = (event) => {\r\n        setRadioIsAcceptHome(event.target.value);\r\n      };\r\n    \r\n      const onValueChangeIsAcceptUk = (event) => {\r\n        setRadioIsAcceptUk(event.target.value);\r\n      };\r\n    \r\n      const onValueChangeIsAcceptInt = (event) => {\r\n        setRadioIsAcceptInt(event.target.value);\r\n      };\r\n    \r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const subData = {\r\n          admissionOfficerId: managerId,\r\n          universityId: uniValue,\r\n          isAcceptHome: radioIsAcceptHome == \"true\" ? true : false,\r\n          isAcceptEU_UK: radioIsAcceptUk == \"true\" ? true : false,\r\n          isAcceptInternational: radioIsAcceptInt == \"true\" ? true : false,\r\n        };\r\n    \r\n        const subData1 = {\r\n          id: selectedId,\r\n          admissionOfficerId: managerId,\r\n          universityId: uniValue,\r\n          isAcceptHome: radioIsAcceptHome == \"true\" ? true : false,\r\n          isAcceptEU_UK: radioIsAcceptUk == \"true\" ? true : false,\r\n          isAcceptInternational: radioIsAcceptInt == \"true\" ? true : false,\r\n        };\r\n    \r\n        if (selectedId !== undefined) {\r\n          setButtonStatus(true);\r\n          put(`AdmissionOfficerUniversity/Update`, subData1).then((res) => {\r\n            setButtonStatus(false);\r\n            if (res?.status == 200 && res?.data?.isSuccess == true) {\r\n              addToast(res?.data?.message, {\r\n                appearance: \"success\",\r\n                autoDismiss: true,\r\n              });\r\n              setSuccess(!success);\r\n              setModalOpen(false);\r\n              setUniLabel(\"Select University\");\r\n              setUniValue(0);\r\n              setSelectedId(undefined);\r\n              setRadioIsAcceptHome(\"false\");\r\n              setRadioIsAcceptUk(\"true\");\r\n              setRadioIsAcceptInt(\"false\");\r\n            }\r\n            else{\r\n              addToast(res?.data?.message, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          \r\n          if(userType == userTypes?.AdmissionManager){\r\n           \r\n            if (uniValue === 0) {\r\n              setUniError(true);\r\n            }\r\n             else {\r\n              setButtonStatus(true);\r\n              setSelectedId(undefined);\r\n              post(`AdmissionOfficerUniversity/Create`, subData).then((res) => {\r\n                setButtonStatus(false);\r\n                if (res?.status == 200 && res?.data?.isSuccess == true) {\r\n                  addToast(res?.data?.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                  });\r\n                  setSuccess(!success);\r\n                  setModalOpen(false);\r\n                  setUniLabel(\"Select University\");\r\n                  setUniValue(0);\r\n                  setRadioIsAcceptHome(\"false\");\r\n                  setRadioIsAcceptUk(\"true\");\r\n                  setRadioIsAcceptInt(\"false\");\r\n                }\r\n                else{\r\n                  addToast(res?.data?.message, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          }\r\n          else{\r\n            if(managerValue === 0){\r\n              setManagerError('Admission manager is required ')\r\n            }\r\n           else if (uniValue === 0) {\r\n              setUniError(true);\r\n            }\r\n             else {\r\n              setButtonStatus(true);\r\n              setSelectedId(undefined);\r\n              post(`AdmissionOfficerUniversity/Create`, subData).then((res) => {\r\n                setButtonStatus(false);\r\n                if (res?.status == 200 && res?.data?.isSuccess == true) {\r\n                  addToast(res?.data?.message, {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                  });\r\n                  setSuccess(!success);\r\n                  setModalOpen(false);\r\n                  setUniLabel(\"Select University\");\r\n                  setUniValue(0);\r\n                  setRadioIsAcceptHome(\"false\");\r\n                  setRadioIsAcceptUk(\"true\");\r\n                  setRadioIsAcceptInt(\"false\");\r\n                }\r\n                else{\r\n                  addToast(res?.data?.message, {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          }\r\n         \r\n        }\r\n      };\r\n    \r\n      const toggleDanger = (p) => {\r\n        setManagerUniId(p?.id);\r\n        setManagerUniName(p?.university?.name);\r\n        setDeleteModal(true);\r\n      };\r\n    \r\n      const handleDeletePermission = (managerUniId) => {\r\n        setButtonStatus1(true);\r\n        const returnValue = remove(\r\n          `AdmissionOfficerUniversity/Delete/${managerUniId}`\r\n        ).then((action) => {\r\n          setButtonStatus1(false);\r\n          setDeleteModal(false);\r\n          setSuccess(!success);\r\n          addToast(action, {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n          });\r\n          setManagerUniId(0);\r\n          setManagerUniName(\"\");\r\n        });\r\n      };\r\n    \r\n      const handleUpdate = (university) => {\r\n        setModalOpen(true);\r\n        setUniLabel(university?.university?.name);\r\n        setUniValue(university?.university?.id);\r\n        setRadioIsAcceptHome(`${university?.isAcceptHome}`);\r\n        setRadioIsAcceptUk(`${university?.isAcceptEU_UK}`);\r\n        setRadioIsAcceptInt(`${university?.isAcceptInternational}`);\r\n        setSelectedId(university?.id);\r\n      };\r\n    \r\n      // for hide/unhide column\r\n    \r\n      const handleCheckedSLNO = (e) => {\r\n        setCheckSlNo(e.target.checked);\r\n      };\r\n      const handleCheckedName = (e) => {\r\n        setCheckName(e.target.checked);\r\n      };\r\n      const handleCheckedType = (e) => {\r\n        setCheckType(e.target.checked);\r\n      };\r\n      const handleCheckedAction = (e) => {\r\n        setCheckAction(e.target.checked);\r\n      };\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n    <Card className=\"uapp-card-bg\">\r\n        <CardHeader className=\"page-header\">\r\n          <h3 className=\"text-white\">Assigned University List</h3>\r\n          <div className=\"page-header-back-to-home\">\r\n            <span onClick={backToOfficerDetails} className=\"text-white\">\r\n              {\" \"}\r\n              <i className=\"fas fa-arrow-circle-left\"></i>{\" \"}\r\n              Back to Admission Officer List\r\n             \r\n            </span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card className=\"uapp-employee-search\">\r\n        <CardBody>\r\n\r\n          <div className='d-flex justify-content-end mb-3'>\r\n            <span style={{fontWeight: 'bold'}}>Admission Officer: {uniList[0]?.admissionOfficer?.firstName}{' '}{uniList[0]?.admissionOfficer?.lastName}</span>\r\n\r\n          </div>\r\n\r\n          <Row className=\"mb-3\">\r\n            <Col lg=\"6\" md=\"5\" sm=\"6\" xs=\"4\">\r\n              {\r\n                permissions?.includes(permissionList.Add_New_Admission_Officer_university) ? \r\n                <ButtonForFunction\r\n                func={() => setModalOpen(true)}\r\n                className={\"btn btn-uapp-add \"}\r\n                icon={<i className=\"fas fa-plus\"></i>}\r\n                name={\" Assign University\"}\r\n                permission={6}\r\n              />\r\n              :\r\n              null\r\n              }\r\n            </Col>\r\n\r\n            <Col lg=\"6\" md=\"7\" sm=\"6\" xs=\"8\">\r\n              <div className=\"d-md-flex justify-content-end\">\r\n                <div className=\"mr-3\">\r\n                  <Dropdown\r\n                    className=\"uapp-dropdown\"\r\n                    style={{ float: \"right\" }}\r\n                    isOpen={dropdownOpen}\r\n                    toggle={toggle}\r\n                  >\r\n                    <DropdownToggle caret>\r\n                      <i className=\"fas fa-print fs-7\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu className=\"bg-dd-4\">\r\n                      <div className=\"d-flex justify-content-around align-items-center mt-2\">\r\n                        <div className=\"cursor-pointer\">\r\n                          {/* <p onClick={handleExportXLSX}>\r\n                              <i className=\"fas fa-file-excel\"></i>\r\n                            </p> */}\r\n                          <ReactTableConvertToXl\r\n                            id=\"test-table-xls-button\"\r\n                            table=\"table-to-xls\"\r\n                            filename=\"tablexls\"\r\n                            sheet=\"tablexls\"\r\n                            icon={<i className=\"fas fa-file-excel\"></i>}\r\n                          />\r\n                        </div>\r\n                        <div className=\"cursor-pointer\">\r\n                          <ReactToPrint\r\n                            trigger={() => (\r\n                              <p>\r\n                                <i className=\"fas fa-file-pdf\"></i>\r\n                              </p>\r\n                            )}\r\n                            content={() => componentRef.current}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                {/* column hide unhide starts here */}\r\n\r\n                <div className=\"\">\r\n                  <Dropdown\r\n                    className=\"uapp-dropdown\"\r\n                    style={{ float: \"right\" }}\r\n                    isOpen={dropdownOpen1}\r\n                    toggle={toggle1}\r\n                  >\r\n                    <DropdownToggle caret>\r\n                      <i className=\"fas fa-bars\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu className=\"bg-dd-3\">\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">SL/NO</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                handleCheckedSLNO(e);\r\n                              }}\r\n                              defaultChecked={checkSlNo}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">University Name</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                handleCheckedName(e);\r\n                              }}\r\n                              defaultChecked={checkName}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">Requirement Type</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                handleCheckedType(e);\r\n                              }}\r\n                              defaultChecked={checkType}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Col md=\"8\" className=\"\">\r\n                          <p className=\"\">Action</p>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\" className=\"text-center\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                handleCheckedAction(e);\r\n                              }}\r\n                              defaultChecked={checkAction}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                {/* column hide unhide ends here */}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div>\r\n            <Modal\r\n              isOpen={modalOpen}\r\n              toggle={closeModal}\r\n              className=\"uapp-modal2\"\r\n              size=\"md\"\r\n            >\r\n              <ModalHeader style={{ backgroundColor: \"#1d94ab\" }}>\r\n                <span className=\"text-white\">University</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    {selectedId === undefined ? (\r\n                      <>\r\n                       {\r\n                        (userType == userTypes?.AdmissionManager) ?\r\n                        null:\r\n                        <>\r\n                         <Col md=\"5\">\r\n                          <span>\r\n                            Admission Manager{\" \"}\r\n                            <span className=\"text-danger\">*</span>{\" \"}\r\n                          </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"7\">\r\n                          <Select\r\n                            options={admissionmanagerOptions}\r\n                            value={{ label: managerLabel, value: managerValue }}\r\n                            onChange={(opt) =>\r\n                              selectAdmissionManager(opt.label, opt.value)\r\n                            }\r\n                           \r\n                          />\r\n\r\n                          <span className='text-danger'>{managerError}</span>\r\n                        </Col>\r\n                        </>\r\n                       }\r\n                      </>\r\n                    ) : null}\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row className=\"has-icon-left position-relative\">\r\n                    {selectedId === undefined ? (\r\n                      <>\r\n                        <Col md=\"5\">\r\n                          <span>\r\n                            University Name{\" \"}\r\n                            <span className=\"text-danger\">*</span>{\" \"}\r\n                          </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"7\">\r\n                          <Select\r\n                            options={universityMenu}\r\n                            value={{ label: uniLabel, value: uniValue }}\r\n                            onChange={(opt) =>\r\n                              selectUniversity(opt.label, opt.value)\r\n                            }\r\n                            name=\"universityId\"\r\n                            id=\"universityId\"\r\n                          />\r\n\r\n                          {uniError && (\r\n                            <span className=\"text-danger\">\r\n                               University is required\r\n                            </span>\r\n                          )}\r\n                        </Col>\r\n                      </>\r\n                    ) : null}\r\n                  </FormGroup>\r\n\r\n                  {uniValue > 0 ? (\r\n                    <>\r\n                      <p className=\"pt-3\">\r\n                        <b>Recruitment Type :</b>\r\n                      </p>\r\n\r\n                      <FormGroup row>\r\n                        <Col md=\"5\">\r\n                          <span>Is Accept Home </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"7\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              id=\"isAcceptHome\"\r\n                              onChange={onValueChangeIsAcceptHome}\r\n                              name=\"isAcceptHome\"\r\n                              value=\"true\"\r\n                              checked={radioIsAcceptHome == \"true\"}\r\n                            />\r\n                            <Label\r\n                              className=\"form-check-label\"\r\n                              check\r\n                              htmlFor=\"isAcceptHome\"\r\n                            >\r\n                              Yes\r\n                            </Label>\r\n                          </FormGroup>\r\n\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              id=\"isAcceptHome\"\r\n                              onChange={onValueChangeIsAcceptHome}\r\n                              name=\"isAcceptHome\"\r\n                              value=\"false\"\r\n                              checked={radioIsAcceptHome == \"false\"}\r\n                            />\r\n\r\n                            <Label\r\n                              className=\"form-check-label\"\r\n                              check\r\n                              htmlFor=\"isAcceptHome\"\r\n                            >\r\n                              No\r\n                            </Label>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup row className=\"\">\r\n                        <Col md=\"5\">\r\n                          <span>Is Accept EU/UK </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"7\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              id=\"isAcceptEU_UK\"\r\n                              onChange={onValueChangeIsAcceptUk}\r\n                              name=\"isAcceptEU_UK\"\r\n                              value=\"true\"\r\n                              checked={radioIsAcceptUk == \"true\"}\r\n                            />\r\n                            <Label\r\n                              className=\"form-check-label\"\r\n                              check\r\n                              htmlFor=\"isAcceptEU_UK\"\r\n                            >\r\n                              Yes\r\n                            </Label>\r\n                          </FormGroup>\r\n\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              id=\"isAcceptEU_UK\"\r\n                              onChange={onValueChangeIsAcceptUk}\r\n                              name=\"isAcceptEU_UK\"\r\n                              value=\"false\"\r\n                              checked={radioIsAcceptUk == \"false\"}\r\n                            />\r\n\r\n                            <Label\r\n                              className=\"form-check-label\"\r\n                              check\r\n                              htmlFor=\"isAcceptEU_UK\"\r\n                            >\r\n                              No\r\n                            </Label>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup row className=\"\">\r\n                        <Col md=\"5\">\r\n                          <span>Is Accept International </span>\r\n                        </Col>\r\n\r\n                        <Col md=\"7\">\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              id=\"isAcceptInternational\"\r\n                              onChange={onValueChangeIsAcceptInt}\r\n                              name=\"isAcceptInternational\"\r\n                              value=\"true\"\r\n                              checked={radioIsAcceptInt == \"true\"}\r\n                            />\r\n                            <Label\r\n                              className=\"form-check-label\"\r\n                              check\r\n                              htmlFor=\"isAcceptInternational\"\r\n                            >\r\n                              Yes\r\n                            </Label>\r\n                          </FormGroup>\r\n\r\n                          <FormGroup check inline>\r\n                            <Input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              id=\"isAcceptInternational\"\r\n                              onChange={onValueChangeIsAcceptInt}\r\n                              name=\"isAcceptInternational\"\r\n                              value=\"false\"\r\n                              checked={radioIsAcceptInt == \"false\"}\r\n                            />\r\n\r\n                            <Label\r\n                              className=\"form-check-label\"\r\n                              check\r\n                              htmlFor=\"isAcceptInternational\"\r\n                            >\r\n                              No\r\n                            </Label>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </FormGroup>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <FormGroup\r\n                    className=\"has-icon-left position-relative\"\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button\r\n                      color=\"danger\"\r\n                      className=\"mr-1 mt-3\"\r\n                      onClick={closeModal}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n\r\n                    <CustomButtonRipple\r\n                      color={\"primary\"}\r\n                      type={\"submit\"}\r\n                      className={\"mr-1 mt-3\"}\r\n                      name={\"Submit\"}\r\n                      permission={6}\r\n                      isDisabled={buttonStatus}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </ModalBody>\r\n            </Modal>\r\n            <div></div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <h2 className=\"text-center\">Loading...</h2>\r\n          ) : (\r\n            <div className=\"table-responsive\" ref={componentRef}>\r\n              <Table id=\"table-to-xls\" className=\"table-sm table-bordered\">\r\n                <thead className=\"thead-uapp-bg\">\r\n                  <tr style={{ textAlign: \"center\" }}>\r\n                    {checkSlNo ? <th>SL/NO</th> : null}\r\n                    {checkName ? <th>University Name</th> : null}\r\n                    {checkType ? <th>Requirement Type</th> : null}\r\n                    {checkAction ? (\r\n                      <th style={{ width: \"8%\" }} className=\"text-center\">\r\n                        Action\r\n                      </th>\r\n                    ) : null}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {uniList?.map((uni, i) => (\r\n                    <tr key={uni?.id} style={{ textAlign: \"center\" }}>\r\n                      {checkSlNo ? <th scope=\"row\">{i + 1}</th> : null}\r\n\r\n                      {checkName ? <td>{uni?.university?.name}</td> : null}\r\n                      {checkType ? (\r\n                        <td>\r\n                          {uni?.isAcceptHome === true ? `Home,` : null}{\" \"}\r\n                          {uni?.isAcceptEU_UK === true ? `EU/UK,` : null}{\" \"}\r\n                          {uni?.isAcceptInternational === true\r\n                            ? \"International\"\r\n                            : null}\r\n                          {uni?.isAcceptHome === false &&\r\n                          uni?.isAcceptEU_UK === false &&\r\n                          uni?.isAcceptInternational === false\r\n                            ? \"Not available\"\r\n                            : null}\r\n                        </td>\r\n                      ) : null}\r\n\r\n                      {checkAction ? (\r\n                        <td style={{ width: \"8%\" }} className=\"text-center\">\r\n                          <ButtonGroup variant=\"text\">\r\n                            {/* <LinkButton\r\n                            url={`/campusDetails/${campus?.id}`}\r\n                            color={\"primary\"}\r\n                            className={\"mx-1 btn-sm\"}\r\n                            icon={<i className=\"fas fa-eye\"></i>}\r\n                            permission={6}\r\n                          /> */}\r\n\r\n                           {\r\n                            permissions?.includes(permissionList.Update_Admission_Officer_university_info) ?\r\n                            <ButtonForFunction\r\n                            func={() => handleUpdate(uni)}\r\n                            color={\"warning\"}\r\n                            className={\"mx-1 btn-sm\"}\r\n                            icon={<i className=\"fas fa-edit\"></i>}\r\n                            permission={6}\r\n                          />\r\n                          :\r\n                          null\r\n                           }\r\n\r\n                           {\r\n                            permissions?.includes(permissionList?.Delete_Admission_Officer_university)?\r\n                            <ButtonForFunction\r\n                            color={\"danger\"}\r\n                            func={() => toggleDanger(uni)}\r\n                            className={\"mx-1 btn-sm\"}\r\n                            icon={<i className=\"fas fa-trash-alt\"></i>}\r\n                            permission={6}\r\n                          />\r\n                          :\r\n                          null\r\n                           }\r\n\r\n                            <Modal\r\n                              isOpen={deleteModal}\r\n                              toggle={() => setDeleteModal(!deleteModal)}\r\n                              className=\"uapp-modal\"\r\n                            >\r\n                              <ModalBody>\r\n                                <p>\r\n                                  Are You Sure to Delete this{\" \"}\r\n                                  <b>{managerUniName}</b> ? Once Deleted it\r\n                                  can't be Undone!\r\n                                </p>\r\n                              </ModalBody>\r\n\r\n                              <ModalFooter>\r\n\r\n                              <Button\r\n                                  disabled={buttonStatus1}\r\n                                  color=\"danger\"\r\n                                  onClick={() =>\r\n                                    handleDeletePermission(managerUniId)\r\n                                  }\r\n                                >\r\n                                  YES\r\n                                </Button>\r\n\r\n                                <Button\r\n                                  // color=\"primary\"\r\n                                  onClick={() => {\r\n                                    setDeleteModal(false);\r\n                                    setManagerUniId(0);\r\n                                    setManagerUniName(\"\");\r\n                                  }}\r\n                                >\r\n                                  NO\r\n                                </Button>\r\n\r\n                               \r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </ButtonGroup>\r\n                        </td>\r\n                      ) : null}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n\r\n          {/* <Pagination\r\n            dataPerPage={dataPerPage}\r\n            totalData={entity}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n          /> */}\r\n        </CardBody>\r\n      </Card>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignOfficerUniversity;"],"sourceRoot":""}