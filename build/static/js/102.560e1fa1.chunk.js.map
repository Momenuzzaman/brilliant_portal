{"version":3,"sources":["views/SMS/Components/ButtonForFunction.js","helpers/post.js","helpers/put.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/ButtonGroup.js","views/SMS/Students/StudentType.js"],"names":["ButtonForFunction","className","icon","color","type","permission","func","url","name","onClick","body","authToken","Axios","post","rootUrl","res","response","status","history","push","put","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","inverse","bool","outline","Card","CardHeader","role","size","vertical","ButtonGroup","StudentType","useHistory","useDispatch","useState","modalOpen","setModalOpen","deleteModal","setDeleteModal","success","setSuccess","addToast","useToasts","studentTypeInfo","setStudentTypeInfo","info","setInfo","useEffect","get","then","console","log","closeModal","AddModalOpen","id","closeDeleteModal","localStorage","removeItem","length","isOpen","toggle","onSubmit","e","preventDefault","subdata","FormData","target","data","message","appearance","autoDismiss","row","md","value","defaultValue","placeholder","style","display","justifyContent","Ripple","textAlign","map","index","key","scope","studentCount","variant","setItem","toggleDanger","getItem","remove","newState","filter","handleDelete"],"mappings":"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","file":"static/js/102.560e1fa1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n   \r\n    Button,\r\n  \r\n  } from \"reactstrap\";\r\n\r\nconst ButtonForFunction = ({className, icon,color, permission, type,url, func, name}) => {\r\n    // const {className, icon} = props;\r\n\r\n    // console.log(className);\r\n    // console.log(url);\r\n\r\n    // console.log('Trying New Type of Props',func, className, icon, permission);\r\n\r\n\r\n    const data = [1,2,3,4,6];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {\r\n            data.includes(permission) ?  */}\r\n            <Button\r\n               onClick={func}\r\n               color={color}\r\n               type={type}\r\n               className={className}\r\n             >\r\n               {\" \"}\r\n               {icon}{name}{\" \"}\r\n            </Button>\r\n            {/* :\r\n            null\r\n          }    */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonForFunction;","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function post(url, body = {},authToken = \"\"){\r\n\r\n \r\n   \r\n   try {\r\n    const res = await Axios.post(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error?.response?.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n     \r\n\r\n        throw error\r\n   }\r\n   \r\n}\r\n\r\nexport default post\r\n","import Axios from 'axios'\r\n\r\n\r\nimport history from './history'\r\nimport { rootUrl } from '../constants/constants'\r\n\r\n\r\nasync function put(url, body = {},authToken = \"\"){\r\n\r\n\r\n   \r\n   try {\r\n    const res = await Axios.put(`${rootUrl}${url}`,body,authToken || \"\")\r\n    return await res\r\n   }\r\n    catch (error) {\r\n\r\n        if(error.response.status  === 404){\r\n            history.push('/404')\r\n        }\r\n\r\n \r\n\r\n        throw error\r\n   }\r\n}\r\n\r\nexport default put\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'group'\n};\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      vertical = props.vertical,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, ButtonGroup, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch } from 'react-redux';\r\nimport {CreateDepartment, DeleteDepartment, GetDepartments, UpdateDepartment} from '../../../redux/actions/SMS/UniversitySubject/DepartmentAction';\r\nimport get from '../../../helpers/get';\r\nimport post from '../../../helpers/post';\r\n\r\nimport remove from '../../../helpers/remove';\r\nimport put from '../../../helpers/put';\r\nimport ButtonForFunction from '../Components/ButtonForFunction';\r\n\r\nconst StudentType = () => {\r\n\r\n    const history = useHistory();\r\n\r\n  \r\n    const dispatch = useDispatch();\r\n    \r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const {addToast} = useToasts();\r\n    const [department,setdepartment] = useState('');\r\n    const [description,setDescription] = useState('');\r\n    const [departmentInfo, setDepartmentInfo] = useState([]);\r\n    const [studentTypeInfo, setStudentTypeInfo] = useState([]);\r\n    const [info, setInfo] = useState({});\r\n   \r\n \r\n    const [id,setId] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n        get('StudentType/Index')\r\n        .then(res => {\r\n            console.log(res);\r\n            setStudentTypeInfo(res);\r\n\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n      // redirect to dashboard\r\n      const backToDashboard = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    \r\n// on Close Modal\r\n   const closeModal = () => {\r\n    setModalOpen(false);\r\n \r\n  }\r\n\r\n  const AddModalOpen= (id) => {\r\n  \r\n    console.log(id);\r\n    \r\n   if(id !=='add'){\r\n    get(`StudentType/Get/${id}`)\r\n    .then(res => {\r\n      console.log(res);\r\n        setInfo(res);\r\n    })\r\n\r\n   }\r\n  else{\r\n   setInfo({});\r\n  }\r\n\r\n  \r\n  setModalOpen(true);\r\n}\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const subdata = new FormData(e.target);\r\n   \r\n   if(!info?.id){\r\n    post(`StudentType/Create`,subdata).then((res)=>{\r\n      setSuccess(!success)\r\n      setModalOpen(false)\r\n   \r\n      addToast(res?.data?.message, {\r\n        appearance:  'success',\r\n        autoDismiss: true,\r\n      })\r\n      get(`StudentType/index`)\r\n      .then(res =>{\r\n        \r\n        setStudentTypeInfo(res);\r\n      } )\r\n    \r\n  });\r\n   }\r\n\r\n   else{\r\n     put('StudentType/Update',subdata)\r\n     .then(res => {\r\n       console.log(res);\r\n       if(res?.status == 200){\r\n        setSuccess(!success)\r\n        setModalOpen(false)\r\n     \r\n        addToast(res?.data?.message, {\r\n          appearance:  'success',\r\n          autoDismiss: true,\r\n        })\r\n        get(`StudentType/index`)\r\n        .then(res =>{\r\n          \r\n          setStudentTypeInfo(res);\r\n        } )\r\n       }\r\n     \r\n\r\n     })\r\n   }\r\n\r\n\r\n      \r\n  }\r\n\r\n\r\n  const handleUpdateSubmit = () => {\r\n    const id = localStorage.getItem('updatedep');\r\n    const subData = {\r\n      id: id,\r\n      name: department\r\n    }\r\n  //  const returnvalue = update(`${rootUrl}/Department/Update`,subData).then((action)=> {\r\n  //     setSuccess(!success);\r\n  //     setModalOpen(false)\r\n  //     addToast(action, {\r\n  //       appearance: action =='Department updated successfully.' ? 'success': 'error',\r\n  //       autoDismiss: true,\r\n  //     })\r\n  //     setdepartment('');\r\n  //    localStorage.removeItem('depName')\r\n  \r\n  //   })\r\n\r\n    dispatch(UpdateDepartment(subData, (action) => {\r\n      setSuccess(!success);\r\n      setModalOpen(false)\r\n      addToast(action, {\r\n        appearance: action =='Department updated successfully.' ? 'success': 'error',\r\n        autoDismiss: true,\r\n      })\r\n      setdepartment('');\r\n     localStorage.removeItem('depName')\r\n    }))\r\n  \r\n  \r\n  }\r\n\r\n\r\nconst toggleDanger = (id) => {\r\n    localStorage.setItem('studentTypeId',id)\r\n  \r\n    setDeleteModal(true)\r\n   }\r\n   \r\n   // on Close Delete Modal\r\nconst closeDeleteModal = () => {\r\n    setDeleteModal(false);\r\n    localStorage.removeItem('studentTypeId')\r\n   \r\n  \r\n  }\r\n\r\n  const handleDelete = (id) =>{\r\n      \r\n    remove(`StudentType/Delete/${id}`)\r\n    .then(res => {\r\n     \r\n      addToast(res, {\r\n        appearance:  'error',\r\n        autoDismiss: true,\r\n      })\r\n      const newState = studentTypeInfo.filter(data => data.id != id);\r\n      setStudentTypeInfo(newState);\r\n      setDeleteModal(false);\r\n\r\n    })\r\n  }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Card className=\"uapp-card-bg\">\r\n              <CardHeader className=\"page-header\">\r\n                <h3 className=\"text-light\">Student Type List</h3>\r\n                <div className=\"page-header-back-to-home\">\r\n                  <span onClick={backToDashboard} className=\"text-light\">\r\n                    {\" \"}\r\n                    <i className=\"fas fa-arrow-circle-left\"></i> Back to Dashboard\r\n                  </span>\r\n                </div>\r\n              </CardHeader>\r\n            </Card>\r\n\r\n\r\n        <Card>\r\n            <CardHeader>\r\n       \r\n            \r\n\r\n            <ButtonForFunction\r\n            name={' Add New'}\r\n            icon={<i className=\"fas fa-plus\"></i>}\r\n            className={\"btn btn-uapp-add\"}\r\n            func={()=>AddModalOpen('add')}\r\n\r\n            />\r\n\r\n\r\n                  <div> <b> Total <span className=\"badge badge-primary\"> {studentTypeInfo.length}</span> Student Type  Found </b></div>\r\n            </CardHeader>\r\n             <CardBody>\r\n\r\n             <div>\r\n\r\n<Modal isOpen={modalOpen} toggle={closeModal} className=\"uapp-modal\">\r\n  <ModalHeader>Add Student Type </ModalHeader>\r\n  <ModalBody>\r\n    <Form onSubmit={handleSubmit}>\r\n     \r\n      <FormGroup row className=\"has-icon-left position-relative\">\r\n        <Col md=\"4\">\r\n          <span>Student Type</span>\r\n        </Col>\r\n        <Col md=\"8\">\r\n\r\n            {\r\n                info.id ? \r\n                <input\r\n                type='hidden'\r\n                name='id'\r\n                id='id'\r\n                value={info?.id}\r\n                />\r\n                :\r\n                null\r\n            }\r\n\r\n\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            defaultValue={info?.name}\r\n          \r\n            placeholder=\"Create Student Type\"\r\n          />\r\n\r\n        </Col>\r\n      </FormGroup>\r\n     \r\n\r\n      <FormGroup className=\"has-icon-left position-relative\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n        <Button color=\"danger\" className=\"mr-1 mt-3\" onClick={closeModal}>Close</Button>\r\n\r\n   \r\n          <Button.Ripple\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"mr-1 mt-3\"\r\n           \r\n          >\r\n            Submit\r\n          </Button.Ripple>\r\n\r\n      \r\n\r\n      </FormGroup>\r\n\r\n    </Form>\r\n  </ModalBody>\r\n\r\n</Modal>\r\n<div>\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n<div className=\"table-responsive\">\r\n          <Table className=\"table-sm table-bordered text-center\" >\r\n          <thead className=\"thead-uapp-bg\">\r\n              <tr style={{ textAlign: \"center\" }}>\r\n                <th>SL/NO</th>\r\n                <th> Name</th>\r\n                <th> Student Count</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                studentTypeInfo.map((type,index) =><tr key={index}\r\n                type ={type}\r\n                >\r\n                  \r\n                  <th scope='row'>{index+1}</th>\r\n                  <td>{type?.name}</td>\r\n                  <td>{type?.studentCount}</td>\r\n                  <td>\r\n                  <ButtonGroup variant=\"text\">\r\n\r\n                            {/* <Button  color=\"danger\" onClick={()=>handleDelete(dept?.id)}   className=\"mr-2 btn-sm\"><i className=\"fas fa-trash-alt\"></i></Button> */}\r\n                          \r\n                       \r\n\r\n                         <ButtonForFunction\r\n                         className={\"btn-sm mx-2\"}\r\n                         func={() => toggleDanger(type?.id)}\r\n                         color={'danger'}\r\n                         icon={<i className=\"fas fa-trash-alt\"></i>}\r\n\r\n                         />\r\n                       \r\n                      \r\n                         <ButtonForFunction\r\n                         className={\"btn-sm\"}\r\n                         color={\"warning\"}\r\n                         func={()=> AddModalOpen(type?.id)}\r\n                         icon={<i className=\"fas fa-edit\"></i>}\r\n                         />\r\n                          \r\n                          </ButtonGroup>\r\n\r\n                  {/* modal for delete */}\r\n                  <Modal isOpen={deleteModal} toggle={closeDeleteModal} className=\"uapp-modal\">\r\n\r\n                      <ModalBody>\r\n                        <p>Are You Sure to Delete this {localStorage.getItem('depName')} ? Once Deleted it can't be Undone!</p>\r\n                      </ModalBody>\r\n\r\n                      <ModalFooter>\r\n                        <Button color=\"danger\" onClick={() => handleDelete(localStorage.getItem('studentTypeId'))}>YES</Button>\r\n                        <Button onClick={closeDeleteModal}>NO</Button>\r\n                      </ModalFooter>\r\n\r\n                  </Modal>\r\n\r\n\r\n                  </td>\r\n                    \r\n                \r\n\r\n\r\n\r\n\r\n                </tr>)\r\n              }\r\n\r\n              \r\n\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n\r\n         </CardBody>\r\n      </Card>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentType;"],"sourceRoot":""}